{{define "homeBodyPartOne"}}

<script type="text/javascript">
window.__playlistArray =[
		{{range $i,$a:= .}}{{$a}},{{end}}
	];
</script>

	<script type="text/babel">
		'use strict';


		var apppp=(str)=>{
			let acxdsf="";
			var strm = str.toLowerCase().replace(/\b\w{3,}/g, function (l) {
    		acxdsf=l.charAt(0).toUpperCase() + l.slice(1);
			});
			if (acxdsf !="") {

			}
			else {

			}
		}

		const abcStylePopup={width:"99%",height:"1240px",position:"absolute",zIndex:10,backgroundColor:"transparent"};
		const popupPlaylistDf={width:"100%",height:"100%",display:"flex",justifyContent:"center"};
		const actPlaylistQuestPopup={width:"400px",height:"400px",border:"1px solid #e6ecf0",marginTop:"150px"};
		const playlistPopupHead={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"10px"};
		const playlistPopupBody={width:"100%",height:"340px",backgroundColor:"white"};
		const closePlaylistPopupBefore={width:"70%",height:"100%",display:"inline",float:"left"};
		const closePlaylistPopupAfter={width:"30%",height:"100%",display:"inline",float:"right"};
		const dflexCloseBefore={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const dflexCloseAfter={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
		const closingPopupFontwa={cursor:"pointer"};
		const msgInformationToAddPlaylist={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
		const actPlaylistDataStyle={width:"100%",height:"40%"};
		const updatePlaylistStyle={width:"100%",height:"40px"};
		const createPlaylistButtonDadaji={width:"50%",height:"100%",display:"inline",float:"left"};
		const updatePlaylistButtonDadaji={width:"50%",height:"100%",display:"inline",float:"right"};
		const createPlaylistButtonDady={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
		const updatePlaylistButtonDady={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const closingPopupFontwaOf={cursor:"pointer"};
		const playlistNameBoxStyle={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
		const playlistCreateBoxPopupStyle={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
		const plNameProvider={width:"65%",height:"80%"};
		const flexibleFlexSick={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"}
		class PlaylistPopupCopy extends React.Component {
			constructor(props) {
				super(props);
				this.state = {
					newNamePl:""
				};
				this.componentWillMount=this.componentWillMount.bind(this);
				this.componentWillUnmount=this.componentWillUnmount.bind(this);
				this._closing_playlist_popup_bhai=this._closing_playlist_popup_bhai.bind(this);
				this._playlistNewNameChange=this._playlistNewNameChange.bind(this);
				this._mm_ll_clk_new_playlist_merge=this._mm_ll_clk_new_playlist_merge.bind(this);
			}
			_mm_ll_clk_new_playlist_merge(evt){
				evt.preventDefault();
				evt.stopPropagation();
				var that=this;
				let golj=window.__rasoola.allah[1];
				let pKey=window.__rasoola.allah[4]
				Rx.Observable.ajax({ url: `/newPlaylistCreation?data=${JSON.stringify({Me:golj,Playlist:that.state.newNamePl,Pkey:pKey})}`, responseType: 'json',method:'GET'}).map(data=>data.response.All)
				.subscribe(
				function (data) {
					console.log(data);
					window.__playlistArray=data;
					var event = new CustomEvent(
						"mutate_playlist",
						{
							detail: {
								message: data,
								time: new Date(),
							},
							bubbles: true,
							cancelable: true
						}
					);
					window.dispatchEvent(event);
				},
				function (error) {
					console.log(error);
				}
				);
			}
			_playlistNewNameChange(evt){
				evt.preventDefault();
				evt.stopPropagation();
				this.setState({
					newNamePl:evt.target.value
				})
			}
			_closing_playlist_popup_bhai(evt){
				ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
			}
			componentWillMount(){
				var events = new CustomEvent(
					"opacity",
					{
						detail: {
							message: 0.2,
							time: new Date(),
					},
					bubbles: true,
					cancelable: true
				}
			 );
			 window.dispatchEvent(events);
			}
			componentWillUnmount(){
				var events = new CustomEvent(
					"opacity",
					{
						detail: {
							message: 1,
							time: new Date(),
					},
					bubbles: true,
					cancelable: true
				}
			 );
			 window.dispatchEvent(events);
			}
			render(){
				return (
					<div style={abcStylePopup}>
						<div style={popupPlaylistDf}>
							<div style={actPlaylistQuestPopup}>
								<div style={playlistPopupHead}>
									<div style={closePlaylistPopupBefore}>
										<div style={dflexCloseBefore}>
											<font size={4}>New playlist</font>
										</div>
									</div>
									<div style={closePlaylistPopupAfter}>
										<div style={dflexCloseAfter}>
											<font style={closingPopupFontwa} size={5} onClick={this._closing_playlist_popup_bhai}>&#9932;</font>
										</div>
									</div>
								</div>
								<div style={playlistPopupBody}>

									<div style={flexibleFlexSick}>
										<div style={actPlaylistDataStyle}>
											<div style={playlistNameBoxStyle}>
												<input type="text" style={plNameProvider} placeholder="enter playlist name" value={this.state.newNamePl} onChange={this._playlistNewNameChange} />
											</div>
											<div style={playlistCreateBoxPopupStyle}>
												<input ref={(elem)=>{

												}} type="button" value="create" onClick={this._mm_ll_clk_new_playlist_merge} />
											</div>
										</div>
									</div>

								</div>
							</div>
						</div>
					</div>
				)
			}
		}





const afterMaybeDiv={width:"100%"}
class SongsOfPlaylist extends React.Component {
	constructor(props) {
		super(props);
		this.state = {
			name:this.props.Name,
			mapper:[]
		};
	}
	render(){
		return(
			<ul style={myUl}>
				{
					this.state.mapper.map( (a,b) => {
						return (
							<li key={b} style={clickableListOnMainPage}><font size={3} color="black" style={mmActFontingCursor} >{a}</font></li>
						)
					} )
				}
			</ul>
		)
	}
}




const abcStylePopup_donate_expand_playlist={width:"99%",height:"1240px",position:"absolute",zIndex:15,backgroundColor:"transparent"};
const popupPlaylistDf_donate_expand_playlist={width:"100%",height:"100%",display:"flex",justifyContent:"center"};
const actPlaylistQuestPopup_donate_expand_playlist={width:"400px",height:"400px",border:"1px solid #e6ecf0",marginTop:"150px"};
const playlistPopupHead_donate_expand_playlist={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"10px"};
const playlistPopupBody_donate_expand_playlist={width:"100%",height:"340px",backgroundColor:"white"};
const closePlaylistPopupBefore_donate_expand_playlist={width:"70%",height:"100%",display:"inline",float:"left"};
const closePlaylistPopupAfter_donate_expand_playlist={width:"30%",height:"100%",display:"inline",float:"right"};
const dflexCloseBefore_donate_expand_playlist={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
const dflexCloseAfter_donate_expand_playlist={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
const closingPopupFontwa_donate_expand_playlist={cursor:"pointer"};
const msgInformationToAddPlaylist_donate_expand_playlist={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
const actPlaylistDataStyle_donate_expand_playlist={width:"100%",height:"40%"};
const updatePlaylistStyle_donate_expand_playlist={width:"100%",height:"40px"};
const createPlaylistButtonDadaji_donate_expand_playlist={width:"50%",height:"100%",display:"inline",float:"left"};
const updatePlaylistButtonDadaji_donate_expand_playlist={width:"50%",height:"100%",display:"inline",float:"right"};
const createPlaylistButtonDady_donate_expand_playlist={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
const updatePlaylistButtonDady_donate_expand_playlist={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
const closingPopupFontwaOf_donate_expand_playlist={cursor:"pointer"};
const playlistNameBoxStyle_donate_expand_playlist={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
const playlistCreateBoxPopupStyle_donate_expand_playlist={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
const plNameProvider_donate_expand_playlist={width:"65%",height:"80%"};
const flexibleFlexSick_donate_expand_playlist={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
const readerSass_sin_p_1_pratibha={width:"100%",display:"flex",justifyContent:"center"};
const eachPlaylistPPPPrr={width:"100%"};
const constable_style_mine={width:"100%",height:"30px",marginBottom:"10px"};
class ExpandMyPlaylistPratibhaPlease extends React.Component {
	constructor(props) {
		super(props);
		this.state = {
			newNamePl:"",
			plName:this.props.PlName,
			spinMe:true,
			tuMeriMehbooba:[],
			isMounted:false
		};
		this.componentWillMount=this.componentWillMount.bind(this);
		this.componentWillUnmount=this.componentWillUnmount.bind(this);
		this._closing_playlist_popup_bhai=this._closing_playlist_popup_bhai.bind(this);
		this._playlistNewNameChange=this._playlistNewNameChange.bind(this);
		this._mm_ll_clk_new_playlist_merge=this._mm_ll_clk_new_playlist_merge.bind(this);
		this._make_me_clickable_pratibha_please=this._make_me_clickable_pratibha_please.bind(this);
		this.componentDidMount=this.componentDidMount.bind(this);
	}
	componentDidMount(){
		this.setState({
			isMounted:true
		});
	}
	_make_me_clickable_pratibha_please(evt){
		evt.preventDefault();
		evt.stopPropagation();
		let tarval=JSON.parse(evt.target.parentElement.lastChild.value);
		console.log("hhhjjjjjhhjj");
		console.log(tarval);
		window.__current_playable_song=tarval[1];
		$("#_tlf_global_youtube_music").trigger("click");
		ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'));
		var eventsCh = new CustomEvent(
			"playMySongPratibha",
			{
				detail: {
					message: tarval[1],
					time: new Date(),
			},
			bubbles: true,
			cancelable: true
		}
	 );
	 window.dispatchEvent(eventsCh);
	 //window.__current_playable_song
	}
	_mm_ll_clk_new_playlist_merge(evt){
		evt.preventDefault();
		evt.stopPropagation();
		var that=this;
		let golj=window.__rasoola.allah[1];
	}
	_playlistNewNameChange(evt){
		evt.preventDefault();
		evt.stopPropagation();
	}
	_closing_playlist_popup_bhai(evt){
		ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
	}
	componentWillMount(){
		var that=this;
		var events = new CustomEvent(
			"opacity",
			{
				detail: {
					message: 0.2,
					time: new Date(),
			},
			bubbles: true,
			cancelable: true
		}
	 );
	 window.dispatchEvent(events);
	 let meName=window.__rasoola.allah[1];
	 let plNameList=this.state.plName;
	 let pKey=window.__rasoola.allah[4];
	 let dataSendable=JSON.stringify({Me:meName,Playlist:plNameList,Pkey:pKey});
	 $.ajax({
		 url:"letMeSeeMyPlaylistSongPratibhaPlease?data="+dataSendable,
		 type:"GET",
		 contentType:"json",
		 async:true
	 }).done((data)=>{
		 console.log(data);
		 if (that.state.isMounted) {
		 	that.setState({
				tuMeriMehbooba:data.All,
				spinMe:false
			})

		 }
	 }).fail((jqXHR,statusText)=>{
		 console.log(statusText);
	 })
	}
	componentWillUnmount(){
		this.setState({
			isMounted:false
		});
		var events = new CustomEvent(
			"opacity",
			{
				detail: {
					message: 1,
					time: new Date(),
			},
			bubbles: true,
			cancelable: true
		}
	 );
	 window.dispatchEvent(events);
	}
	render(){
		return (
			<div style={abcStylePopup_donate_expand_playlist}>
				<div style={popupPlaylistDf_donate_expand_playlist}>
					<div style={actPlaylistQuestPopup_donate_expand_playlist}>
						<div style={playlistPopupHead_donate_expand_playlist}>
							<div style={closePlaylistPopupBefore_donate_expand_playlist}>
								<div style={dflexCloseBefore_donate_expand_playlist} className="truncate">
									<font size={4}>Playlist - {this.state.plName}</font>
								</div>
							</div>
							<div style={closePlaylistPopupAfter_donate_expand_playlist}>
								<div style={dflexCloseAfter_donate_expand_playlist}>
									<font style={closingPopupFontwa_donate_expand_playlist} size={5} onClick={this._closing_playlist_popup_bhai}>&#9932;</font>
								</div>
							</div>
						</div>
						<div style={playlistPopupBody_donate_expand_playlist}>
							{
								this.state.spinMe?(
									<div style={readerSass_sin_p_1_pratibha} >
										<PreloderCircularPartOneShop />
									</div>
								):(
									<div style={eachPlaylistPPPPrr}>
										{
											this.state.tuMeriMehbooba.map( (a,b)=>{
												return (
													<div key={b} style={constable_style_mine}>
														<a className="waves-effect waves-light btn white black-text" onClick={this._make_me_clickable_pratibha_please}>{a[0]}</a>
														<input type="hidden" value={JSON.stringify(a)} />
													</div>
												)
											} )
										}
										{
											(this.state.tuMeriMehbooba[0].length==0)?(
												<p className="truncate">there is no song in selected playlist</p>
											):false
										}
									</div>
								)
							}
						</div>
					</div>
				</div>
			</div>
		)
	}
}










		const myPlayListBoxStyle={width:"100%"};
		const playlistCreateNewCont={width:"100%"};
		var playlistActualData=(height) => {
			return {width:"100%",height:height,overflowY:"scroll"};
		}
		const nonerLi={display:"none"};
		const newPlaylistBtStyle={minWidth:"100px",cursor:"pointer",backgroundColor:"white",fontSize:"larger",color:"black",border:"1px solid #e6ecf0",float:"left",marginLeft:"8%",textTransform:"capitalize"};
		const newPlaylistBtStyle_more={minWidth:"100px",cursor:"pointer",backgroundColor:"white",fontSize:"larger",color:"black",border:"1px solid #e6ecf0",float:"left",marginLeft:"8%",textTransform:"capitalize",marginTop:"13px",marginBottom:"10px"};
		const sukun_mil_jaye={textAlign:"center"};
		const myUniqueFaceSelectStyle_midina={backgroundColor:"transparent",color:"black",width:"80%",textTransform:"none",textAlign:"left"};
		const tears_from_falling={marginLeft:"10%"};
		const myUniqueFaceSelectStyle_filter_midina={backgroundColor:"transparent",color:"black",height:"90%",marginTop:"2px",textTransform:"capitalize"};
		const myUniqueFaceSelectStyle_child_midina={color:"black",textTransform:"capitalize"};
		const forgive_me_please_o_my_love={display:"flex",alignItems:"center"};
		const cursorStyling_g_icon={cursor:"pointer",backgroundColor:"transparent",color:"black",width:"10px"}
		class MyOwnPlayList extends React.Component {
			constructor(props) {
				super(props);
				this.state = {
					myScrollHeight:"auto",
					playListLooking:window.__playlistArray?window.__playlistArray:[]
				};
				this.componentDidMount=this.componentDidMount.bind(this);
				this._let_me_create_my_new_playlist=this._let_me_create_my_new_playlist.bind(this);
				this.componentWillMount=this.componentWillMount.bind(this);
				this._pyar_tune_kya_kiya_clk=this._pyar_tune_kya_kiya_clk.bind(this);
				this._uthi_ja_yara_o_yara=this._uthi_ja_yara_o_yara.bind(this);
				this._aaja_mahi_aaja_mahi_aa_soniya=this._aaja_mahi_aaja_mahi_aa_soniya.bind(this);
			}
			_aaja_mahi_aaja_mahi_aa_soniya(evt){
				evt.preventDefault();
				evt.stopPropagation();
				Materialize.toast('Hi there this feature will be implemented soon', 4000)
			}
			_uthi_ja_yara_o_yara(evt){
				evt.preventDefault();
				evt.stopPropagation();
				evt.persist();
				let tarText=evt.target.innerText;
				console.log(evt.target.innerText);
				ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'));
				ReactDOM.render(<ExpandMyPlaylistPratibhaPlease PlName={tarText} />,document.getElementById('_js_root_animation'));
			}
			_pyar_tune_kya_kiya_clk(evt){
				evt.preventDefault();
				evt.stopPropagation();
				evt.persist();
				NodeList.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];
				HTMLCollection.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];
				let sauEkar=document.getElementsByClassName('tu_mera_rog_hai');
				if (sauEkar.length>0) {
					for (var item of sauEkar) {
    				ReactDOM.unmountComponentAtNode(item)
					}
				}
				ReactDOM.render(<SongsOfPlaylist Name={evt.target.innerText} />,evt.target.parentElement.parentElement.lastChild.firstChild)
			}
			componentWillMount(){
				var that=this;
				console.log(that.state.playListLooking);
				window.addEventListener("mutate_playlist",(evt) => {
					console.log("hello binding");
					let rev=evt.detail.message.reverse();
					that.setState({
						playListLooking:rev
					})
					console.log(that.state.playListLooking);
				},true);
			}
			_let_me_create_my_new_playlist(evt){
				evt.preventDefault();
				evt.stopPropagation();
				var that=this;
				let golj=window.__rasoola.allah[1];
				console.log(golj);
				ReactDOM.render(<PlaylistPopupCopy />,document.getElementById('_js_root_animation'))
				/*Rx.Observable.ajax({ url: `/newPlaylistCreation?data=${JSON.stringify({Me:golj})}`, responseType: 'json',method:'GET'}).map(data=>data.response.all)
				.subscribe(
				function (data) {
					console.log(data);
					that.setState({
						inputArr:data
					});


				},
				function (error) {
					console.log(error);
				}
				);*/

			}
			componentDidMount(){
				let o1=document.getElementById('_lol_wa_one').clientHeight;
				let o2=document.getElementById('_lol_wa_two').clientHeight;
				let o3=document.getElementById('_lol_wa_three').clientHeight;
				let o4=document.getElementById('_lol_wa_four').clientHeight;
				let o5=document.getElementById('_head').clientHeight;
				let o6=1200-(o1+o2+o3+o4+o5+60)+"px";
				console.log(1200-(o1+o2+o3+o4+o5+200)+"px");
				this.setState({
					myScrollHeight:o6
				})
			}
			render(){
				return (
					<div style={myPlayListBoxStyle}>
						<div style={playlistCreateNewCont}>
							<ul style={myUl}>
								<li><input type="button" value="Create new playlist" style={newPlaylistBtStyle} className="btn" onClick={this._let_me_create_my_new_playlist} /></li>
							</ul>
						</div>
						<br />
						<p style={main_fir_v_tmk_chunga_huhhu} className="truncate">My playlists</p>
						<div id="_preet_ki_dhun_par_naach_le_hs" style={playlistActualData(this.state.myScrollHeight)}>
							{
								this.state.playListLooking.length==0?(<p style={sukun_mil_jaye}>There are no playlist created by you...please create one .</p>):(
									this.state.playListLooking.map( (a,b) => {
										return (
											<div key={b} style={forgive_me_please_o_my_love}>
												{/*<ul key={b} style={myUl}>
													<li style={clickableListOnMainPage}><font size={3} color="black" style={mmActFontingCursor} onClick={this._pyar_tune_kya_kiya_clk} >{a}</font></li>
													<li style={nonerLi}><div className="tu_mera_rog_hai" ></div></li>
												</ul>*/}

													<a style={myUniqueFaceSelectStyle_midina} className='btn truncate tooltipped' href='#' data-position="right" data-delay="50" data-tooltip={`Playlist - ${a}`} onClick={this._uthi_ja_yara_o_yara}>{a}</a>
													<a className="waves-effect waves-light btn tooltipped" style={cursorStyling_g_icon} data-position="right" data-delay="50" data-tooltip="Click me to delete this playlist" onClick={this._aaja_mahi_aaja_mahi_aa_soniya}><i className="material-icons">close</i></a>
													{/*
														<ul id={`dropdown1${b}`} style={tears_from_falling} className='dropdown-content'>
															<li className="divider"></li>
															<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Social face</a></li>
															<li className="divider"></li>
															<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Professional face</a></li>
															<li className="divider"></li>
															<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Consumer face</a></li>
															<li className="divider"></li>
															<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Writer face</a></li>
															<li className="divider"></li>
															<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Dating face</a></li>
															<li className="divider"></li>
															<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Sinner face</a></li>
															<li className="divider"></li>
														</ul>
														*/}



											</div>
										)
									} )
								)
							}
						</div>
					</div>
				)
			}
		}



		// Action class wrapper



		const abcStylePopup_dp={width:"99%",height:"1240px",position:"absolute",zIndex:10,backgroundColor:"transparent"};
		const popupPlaylistDf_dp={width:"100%",height:"100%",display:"flex",justifyContent:"center"};
		const actPlaylistQuestPopup_dp={width:"400px",height:"400px",border:"1px solid #e6ecf0",marginTop:"150px"};
		const playlistPopupHead_dp={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"10px"};
		const playlistPopupBody_dp={width:"100%",height:"340px",backgroundColor:"white"};
		const closePlaylistPopupBefore_dp={width:"70%",height:"100%",display:"inline",float:"left"};
		const closePlaylistPopupAfter_dp={width:"30%",height:"100%",display:"inline",float:"right"};
		const dflexCloseBefore_dp={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const dflexCloseAfter_dp={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
		const closingPopupFontwa_dp={cursor:"pointer"};
		const msgInformationToAddPlaylist_dp={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
		const actPlaylistDataStyle_dp={width:"100%",height:"260px",overflowY:"scroll"};
		const updatePlaylistStyle_dp={width:"100%",height:"40px"};
		const createPlaylistButtonDadaji_dp={width:"100%",height:"100%",display:"inline",float:"left"};
		const updatePlaylistButtonDadaji_dp={width:"50%",height:"100%",display:"inline",float:"right"};
		const createPlaylistButtonDady_dp={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
		const updatePlaylistButtonDady_dp={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const closingPopupFontwaOf_dp={cursor:"pointer"};
		const duniya_me_nahi_hai={width:"100%",height:"200px"};
		const kudrat_hans_paregi={width:"100%",height:"33%"};
		const man_amadeham={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"flex-end"};
		const man_amadeham_1={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const man_amadeham_2={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"flex-start"};
		const aa_v_ja_bahon_me={width:"80%",height:"25px"};
		class ChangeDPPopup extends React.Component {
			constructor(props) {
				super(props);
				this.state = {
					statusText:"",
					initBeg:0
				};
				this.componentWillMount=this.componentWillMount.bind(this);
				this.componentWillUnmount=this.componentWillUnmount.bind(this);
				this._closing_playlist_popup_bhai=this._closing_playlist_popup_bhai.bind(this);
				this._let_me_get_typed_array=this._let_me_get_typed_array.bind(this);
			}
			_let_me_get_typed_array(evt){
				evt.preventDefault();
				evt.stopPropagation();
				evt.persist();
				var that=this;
				var reader = new FileReader();
				reader.onload = function(event) {
    				var contents = event.target.result;
    				console.log(contents.byteLength);
    				var uAr=new Uint8Array(contents);
    				console.log(uAr);
						var who=window.__rasoola.allah[1];
						let typeMM=evt.target.files[0].type;
    				var xhttp = new XMLHttpRequest();

    				xhttp.onreadystatechange = function() {
    					if (this.readyState == 4 && this.status == 200) {
    						//console.log(this.responseText)
    						//_gotta_ok_main_shop_icon

    						let vx=JSON.parse(this.responseText);
    						console.log(vx)
    						sessionStorage.itemMap=JSON.stringify({vax:vx.name});
    						that.setState({
    							statusText:`!!Success!! Total uploaded size = ${vx.size}`,
    							fDisabled:true
    						});
								let dSand=JSON.stringify({Me:window.__rasoola.allah[1],Pkey:window.__rasoola.allah[4],ImageData:vx.name})
								$.ajax({
									url:`myDpWillBeEdittedPratibha?data=${dSand}`,
									type:"GET",
									contentType:"json",
									beforeSend:(jqXHR)=>{
										that.setState({
		    							statusText:`changing your dp please wait..`,
		    							fDisabled:true
		    						});
									},
									async:true
								}).done((data)=>{
									that.setState({
										statusText:`! YAY ! dp changed successfully.`,
										fDisabled:true
									});

									var event = new CustomEvent(
										"letMeEditMyDpPratibha",
											{
												detail: {
													message: data.Image,
													time: new Date(),
												},
												bubbles: true,
												cancelable: true
											}
										);
										window.dispatchEvent(event)
								}).fail((jqXHR,statusText)=>{
									console.log(statusText)
								})
    						//ReactDOM.render(<FakeIcon SR={vx.name} />,document.getElementById('_gotta_ok_main_shop_icon'))
    					}
    				};

    				//xhttp.open("POST", "https://www.linkedface.in/fileUploadClientIconDream", true);
						xhttp.open("POST", "https://pratibhash.herokuapp.com/postMyClientImagePratibha", true);
    				//xhttp.setRequestHeader('Content-Type','application/octet-stream')
    				//console.log(xhttp.upload)
    				xhttp.upload.addEventListener("progress",function(e) {
						var pc = parseInt((e.loaded / e.total * 100));
						//progress.style.backgroundPosition = pc + "% 0";
						//console.log(pc);
						that.setState({
							initBeg:pc
						})
					},false);
					xhttp.setRequestHeader('Content-Type', 'application/json');
					var s=JSON.stringify({Me:window.__rasoola.allah[1],Pkey:window.__rasoola.allah[4],Val:uAr,Ftype:typeMM});
					xhttp.send(s);
				};
				reader.onerror = function(event) {
    				console.error("File could not be read! Code " + event.target.error.code);
				};
				reader.readAsArrayBuffer(evt.target.files[0]);
			}
			_closing_playlist_popup_bhai(evt){
				//console.log(JSON.parse(sessionStorage.itemMap).vax);
				if (sessionStorage.itemMap!=undefined) {
					let trv=JSON.parse(sessionStorage.itemMap).vax;
					var eventsIm = new CustomEvent(
						"dpChanged",
						{
							detail: {
								message: trv,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(eventsIm);
				}
				/*var eventsIm = new CustomEvent(
					"dpChanged",
					{
						detail: {
							message: 0.2,
							time: new Date(),
					},
					bubbles: true,
					cancelable: true
				}
			 );
			 window.dispatchEvent(events);*/
				ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
			}
			componentWillMount(){
				var events = new CustomEvent(
					"opacity",
					{
						detail: {
							message: 0.2,
							time: new Date(),
					},
					bubbles: true,
					cancelable: true
				}
			 );
			 window.dispatchEvent(events);
			}
			componentWillUnmount(){
				var events = new CustomEvent(
					"opacity",
					{
						detail: {
							message: 1,
							time: new Date(),
					},
					bubbles: true,
					cancelable: true
				}
			 );
			 window.dispatchEvent(events);
			}
			render(){
				return (
					<div style={abcStylePopup_dp}>
						<div style={popupPlaylistDf_dp}>
							<div style={actPlaylistQuestPopup_dp}>
								<div style={playlistPopupHead_dp}>
									<div style={closePlaylistPopupBefore_dp}>
										<div style={dflexCloseBefore_dp}>
											<font size={4}>Change DP</font>
										</div>
									</div>
									<div style={closePlaylistPopupAfter_dp}>
										<div style={dflexCloseAfter_dp}>
											<font style={closingPopupFontwa_dp} size={5} onClick={this._closing_playlist_popup_bhai}>&#9932;</font>
										</div>
									</div>
								</div>
								<div style={playlistPopupBody_dp}>
									<div style={msgInformationToAddPlaylist_dp}>Please choose image to make new DP.
									</div>
									<div id="_jaaniye_heeriye_oo_hs" style={actPlaylistDataStyle_dp}>
										<div style={duniya_me_nahi_hai}>
											<div style={kudrat_hans_paregi}>
												<div style={man_amadeham}>
													<input type="file" name="change_new_dp" id="change_new_dp" className="change_new_dp" onChange={this._let_me_get_typed_array} />
												</div>
											</div>
											<div style={kudrat_hans_paregi}>
												<div style={man_amadeham_1}>
													<progress style={aa_v_ja_bahon_me} id="_change_dp_monitor" value={this.state.initBeg} max="100"></progress>
												</div>
											</div>
											<div style={kudrat_hans_paregi}>
												<div style={man_amadeham_2}>
													<font size={4}>{this.state.statusText}</font>
												</div>
											</div>
										</div>
									</div>
									<div style={updatePlaylistStyle_dp}>
										<div style={createPlaylistButtonDadaji_dp}>
											<div style={createPlaylistButtonDady_dp}>
												<font style={closingPopupFontwaOf_dp} size={5} onClick={this._closing_playlist_popup_bhai}>Finish</font>
											</div>
										</div>

									</div>
								</div>
							</div>
						</div>
					</div>
				)
			}
		}


		//change dp through modals


		class DpChangeWithModalsStyled extends React.Component {
			constructor(props) {
				super(props);
				this.state = {

				};
			}
			render(){
				return (
					<div id="modal1" className="modal modal-fixed-footer">
				    <div className="modal-content">
				      <h4>Modal Header</h4>
				      <p>A bunch of text</p>
				    </div>
				    <div className="modal-footer">
				      <a href="#!" className="modal-action modal-close waves-effect waves-green btn-flat ">Agree</a>
				    </div>
				  </div>
				)
			}
		}



		class PreloderCircularPartOneShop extends React.Component {
			constructor(props) {
				super(props);
				this.state = {

				};
			}
			render(){
				return(
					<div className="preloader-wrapper small active">
			<div className="spinner-layer spinner-blue">
				<div className="circle-clipper left">
					<div className="circle"></div>
				</div><div className="gap-patch">
					<div className="circle"></div>
				</div><div className="circle-clipper right">
					<div className="circle"></div>
				</div>
			</div>

			<div className="spinner-layer spinner-red">
				<div className="circle-clipper left">
					<div className="circle"></div>
				</div><div className="gap-patch">
					<div className="circle"></div>
				</div><div className="circle-clipper right">
					<div className="circle"></div>
				</div>
			</div>

			<div className="spinner-layer spinner-yellow">
				<div className="circle-clipper left">
					<div className="circle"></div>
				</div><div className="gap-patch">
					<div className="circle"></div>
				</div><div className="circle-clipper right">
					<div className="circle"></div>
				</div>
			</div>

			<div className="spinner-layer spinner-green">
				<div className="circle-clipper left">
					<div className="circle"></div>
				</div><div className="gap-patch">
					<div className="circle"></div>
				</div><div className="circle-clipper right">
					<div className="circle"></div>
				</div>
			</div>
		</div>
				)
			}
		}




		var main_hun_tara_ha_aankh_function=(width)=>{
			return {width:`${width}%`,height:"15px"}
		}
		const abcStylePopup_shop={width:"99%",height:"1240px",position:"absolute",zIndex:15,backgroundColor:"transparent"};
		const popupPlaylistDf_shop={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const actPlaylistQuestPopup_shop={width:"80%",height:"90%",border:"1px solid #e6ecf0"};
		const playlistPopupHead_shop={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"2px"};
		const playlistPopupBody_shop={width:"100%",height:"1110px",backgroundColor:"white"};
		const closePlaylistPopupBefore_shop={width:"95%",height:"100%",display:"inline",float:"left"};
		const closePlaylistPopupAfter_shop={width:"5%",height:"100%",display:"inline",float:"right"};
		const dflexCloseBefore_shop={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const dflexCloseAfter_shop={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
		const closingPopupFontwa_shop={cursor:"pointer"};
		const msgInformationToAddPlaylist_shop={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
		const actPlaylistDataStyle_shop={width:"100%",height:"100%"};
		const updatePlaylistStyle_shop={width:"100%",height:"40px"};
		const createPlaylistButtonDadaji_shop={width:"50%",height:"100%",display:"inline",float:"left"};
		const updatePlaylistButtonDadaji_shop={width:"50%",height:"100%",display:"inline",float:"right"};
		const createPlaylistButtonDady_shop={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
		const updatePlaylistButtonDady_shop={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const closingPopupFontwaOf_shop={cursor:"pointer"};
		const playlistNameBoxStyle_shop={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
		const playlistCreateBoxPopupStyle_shop={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
		const plNameProvider_shop={width:"65%",height:"80%"};
		const flexibleFlexSick_shop={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const ham_tumhe_itna_pyar_karenge={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",overflowY:"scroll"};
		const ham_tumhe_itna_pyar_karenge_lol={width:"60%",height:"100%"};
		const ham_tumhe_itna_pyar_karenge_lol_loler={width:"30%",height:"100%"};
		const cust_spanning_tree_bt_bate_dilo_ki={backgroundColor:"transparent"};
		const waise_ta_mitran_da_swag_billo={width:"50%",textAlign:"left"};
		const chugali_karunga_khwaja_ji_ke_paas_left={width:"49%",display:"inline",float:"left"};
		const chugali_karunga_khwaja_ji_ke_paas_right={width:"49%",display:"inline",float:"right"};
		const haye_mera_dil_chal_koina={width:"95%",height:"250px"}
		const main_hun_tara_ha_aankh={width:"50%",height:"15px"};
		const you_are_a_proper_patola={width:"100%",display:"flex",justifyContent:"center"};
		const highway_dont_care_but_i_do_pratibha={width:"100%",display:"flex",justifyContent:"center"};
		const textAlignGabru={textAlign:"center"};
		class CreateShopPopupCopy extends React.Component {
			constructor(props) {
				super(props);
				this.state = {
					newNamePl:"",
					thoriderTheharJa:"No",
					isqKaDastoor:"No",
					pincodes:[],
					initBeg:0,
					statusText:"",
					initialImage:"img-not-available.png",
					publishStart:0
				};
				this.componentWillMount=this.componentWillMount.bind(this);
				this.componentWillUnmount=this.componentWillUnmount.bind(this);
				this._closing_playlist_popup_bhai=this._closing_playlist_popup_bhai.bind(this);
				this._playlistNewNameChange=this._playlistNewNameChange.bind(this);
				this._mm_ll_clk_new_playlist_merge=this._mm_ll_clk_new_playlist_merge.bind(this);
				this.componentDidMount=this.componentDidMount.bind(this);
				this._you_can_make_the_whole_world_stare=this._you_can_make_the_whole_world_stare.bind(this);
				this._publish_my_shop_ajay=this._publish_my_shop_ajay.bind(this);
			}
			_publish_my_shop_ajay(evt){
				evt.preventDefault();
				evt.stopPropagation();
				evt.persist();
				let sh_name=$('#icon_prefix').val();
				let stype=new Set(window.__myShopType);
				let sh_type=Array.from(stype)
				let sh_start_date=$('#autocomplete-input_for').val();
				let sh_mobile=$('#icon_prefix_mobile').val();
				let spin=new Set(window.__myShopPinCode);
				let sh_pin=Array.from(spin)
				let sh_add_1=$('#icon_prefix_dassa_1').val();
				let sh_add_2=$('#icon_prefix_dassa_2').val();
				let sh_open_time=$('#autocompleteinput_for_teri_meri').val();
				let sh_close_time=$('#autocompleteinput_for_teri_meri_1').val();
				let sh_delivery_flag=$('#autocomplete-input_r').val();

				let deliveryTimeFrom;
				let deliveryTimeUpto;
				let sallDeliveryMyPinCode;
				let avgDeliverCharge;
				let maxDeliveryTime;
				if (sh_delivery_flag=="Yes") {
					deliveryTimeFrom=$('input#autocompleteinput_for_1').val();
					deliveryTimeUpto=$('input#autocompleteinput_for_2').val();
					let salldeliverypin=new Set(window.__myDeliveryPinCode);
					sallDeliveryMyPinCode=Array.from(salldeliverypin)
					avgDeliverCharge=$('input#icon_prefix_delivery_rate').val();
					maxDeliveryTime=$('input#autocomplete-input_r_or_sex_yara_saja_na').val();
				}else {
					deliveryTimeFrom="N.A.";
					deliveryTimeUpto="N.A.";
					sallDeliveryMyPinCode="N.A.";
					avgDeliverCharge="N.A.";
					maxDeliveryTime="N.A."
				}
				let feasiblePaymentOption=Array.from(new Set(window.__myPaymentOption));
				let collactibleFlag=$('input#autocomplete-input_r_or').val();
				let collactiblePreserveTime;
				if (collactibleFlag=="Yes") {
					collactiblePreserveTime=$('input#autocomplete-input_r_or_sex').val();
				}else {
					collactiblePreserveTime="N.A."
				}
				this.setState({
					publishStart:1
				})
				let shopIcon=this.state.initialImage;
				let owner=window.__rasoola.allah[1];
				let pKey=window.__rasoola.allah[4];
				console.log(sh_name);
				console.log(sh_type);
				console.log(sh_start_date);
				console.log(sh_mobile);
				console.log(sh_pin);
				console.log(sh_add_1);
				console.log(sh_add_2);
				console.log(sh_open_time);
				console.log(sh_close_time);
				console.log(sh_delivery_flag);
				console.log(deliveryTimeFrom);
				console.log(deliveryTimeUpto);
				console.log(sallDeliveryMyPinCode);
				console.log(avgDeliverCharge);
				console.log(maxDeliveryTime);
				console.log(feasiblePaymentOption);
				console.log(collactiblePreserveTime);
				console.log(shopIcon);
				let makedataSopInternal=JSON.stringify({ShopName:sh_name,ShopType:sh_type,ShopStartDate:sh_start_date,ShopMobile:sh_mobile,ShopPin:sh_pin,ShopAddFirst:sh_add_1,ShopAddSecond:sh_add_2,ShopOpenTime:sh_open_time,ShopCloseTime:sh_close_time,DeliveryFlag:sh_delivery_flag,DeliveryTimeFrom:deliveryTimeFrom,DeliveryTimeUpto:deliveryTimeUpto,SallDeliveryMyPinCode:sallDeliveryMyPinCode,AvgDeliverCharge:avgDeliverCharge,MaxDeliveryTime:maxDeliveryTime,FeasiblePaymentOption:feasiblePaymentOption,CollactiblePreserveTime:collactiblePreserveTime,ShopIcon:shopIcon,CollactibleFlag:collactibleFlag,Owner:owner,Pkey:pKey});
				$.ajax({
					url:`iLoveYouPratibhaSharmaAndIWillGetYouShopCreate?data=${makedataSopInternal}`,
					type:"GET",
					data:makedataSopInternal,
					dataType:"json",
					ContentType:"json",
					async:true
				}).done((data)=>{
					console.log(data);
				}).fail((jqXHR, textStatus)=>{
					console.log(jqXHR);
				})
			}
			_you_can_make_the_whole_world_stare(evt){
				evt.preventDefault();
				evt.stopPropagation();
				evt.persist();
				var that=this;
				var reader = new FileReader();
				reader.onload = function(event) {
					that.setState({
						statusText:"preparing for upload"
					})
    				var contents = event.target.result;
    				console.log(contents.byteLength);
    				var uAr=new Uint8Array(contents);
    				console.log(uAr);
						var who=window.__rasoola.allah[1];
    				var xhttp = new XMLHttpRequest();

    				xhttp.onreadystatechange = function() {
    					if (this.readyState == 4 && this.status == 200) {
    						//console.log(this.responseText)
    						//_gotta_ok_main_shop_icon

    						let vx=JSON.parse(this.responseText);
    						console.log(vx)
    						sessionStorage.__my_shop_icon=JSON.stringify({vax:vx.name});
    						that.setState({
    							statusText:`!!Success!! Total uploaded size = ${vx.size}`,
									initialImage:vx.name
    						});
    						//ReactDOM.render(<FakeIcon SR={vx.name} />,document.getElementById('_gotta_ok_main_shop_icon'))
    					}
    				};

    				xhttp.open("POST", "https://pratibhash.herokuapp.com/postMyClientImagePratibha", true);
    				//xhttp.setRequestHeader('Content-Type','application/octet-stream')
    				console.log(xhttp.upload)
    				xhttp.upload.addEventListener("progress",function(e) {
						var pc = parseInt((e.loaded / e.total * 100));
						//progress.style.backgroundPosition = pc + "% 0";
						//console.log(pc);
						if (pc>=1 && pc<100) {
							that.setState({
								initBeg:pc,
								statusText:"uploading file"
							})
						}
						that.setState({
							initBeg:pc
						})
					},false);
					xhttp.setRequestHeader('Content-Type', 'application/json');
					var s=JSON.stringify({val:uAr,who:who});
					xhttp.send(s);
				};
				reader.onerror = function(event) {
    				console.error("File could not be read! Code " + event.target.error.code);
				};
				reader.readAsArrayBuffer(evt.currentTarget.files[0]);
			}
			componentDidMount(){
				var that=this;
				$('input.autocomplete').autocomplete({
			    data: {
			      "Grocery": null,
			      "Kitchen": null,
			      "Furnishing": 'https://placehold.it/250x250'
			    },
			    limit: 20, // The max amount of results that can be shown at once. Default: Infinity.
			    onAutocomplete: function(val) {
			      // Callback function when value is autcompleted.
						alert("completed")
			    },
			    minLength: 1, // The minimum length of the input for the autocomplete to start. Default: 1.
			  });
				$('input#autocomplete-input_r').autocomplete({
			    data: {
			      "Yes": null,
			      "No": null
			    },
			    limit: 2, // The max amount of results that can be shown at once. Default: Infinity.
			    onAutocomplete: function(val) {
						if (val=="Yes") {
							that.setState({
								thoriderTheharJa:"Yes"
							})
						}
						else {
							that.setState({
								thoriderTheharJa:"No"
							})
						}
			      // Callback function when value is autcompleted.
						//alert("completed")
			    },
			    minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
			  });
				$('input#autocomplete-input_r_or').autocomplete({
			    data: {
			      "Yes": null,
			      "No": null
			    },
			    limit: 2, // The max amount of results that can be shown at once. Default: Infinity.
			    onAutocomplete: function(val) {
						if (val=="Yes") {
							that.setState({
								isqKaDastoor:"Yes"
							})
						}
						else {
							that.setState({
								isqKaDastoor:"No"
							})
						}
			      // Callback function when value is autcompleted.
						//alert("completed")
			    },
			    minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
			  });

				$('.datepicker').pickadate({
					selectMonths: true, // Creates a dropdown to control month
					selectYears: 15, // Creates a dropdown of 15 years to control year,
					today: 'Today',
					clear: 'Clear',
					close: 'Ok',
					closeOnSelect: false // Close upon selecting a date,
				});
				$('.timepicker').pickatime({
					default: 'now', // Set default time: 'now', '1:30AM', '16:30'
					fromnow: 0,       // set default time to * milliseconds from now (using with default = 'now')
					twelvehour: true, // Use AM/PM or 24-hour format
					donetext: 'OK', // text for done-button
					cleartext: 'Clear', // text for clear-button
					canceltext: 'Cancel', // Text for cancel-button
					autoclose: false, // automatic close timepicker
					ampmclickable: true, // make AM PM clickable
					aftershow: function(){
						//$('.timepicker').focus();
					} //Function for after opening timepicker
				});
				$('.collapsible').collapsible();
			}
			_mm_ll_clk_new_playlist_merge(evt){
				evt.preventDefault();
				evt.stopPropagation();
				var that=this;
				let golj=window.__rasoola.allah[1];
			}
			_playlistNewNameChange(evt){
				evt.preventDefault();
				evt.stopPropagation();
			}
			_closing_playlist_popup_bhai(evt){
				ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
			}
			componentWillMount(){
				var events = new CustomEvent(
					"opacity",
					{
						detail: {
							message: 0.2,
							time: new Date(),
					},
					bubbles: true,
					cancelable: true
				}
			 );
			 window.dispatchEvent(events);
			}
			componentWillUnmount(){
				window.__myDeliveryPinCode=undefined;
				var events = new CustomEvent(
					"opacity",
					{
						detail: {
							message: 1,
							time: new Date(),
					},
					bubbles: true,
					cancelable: true
				}
			 );
			 window.dispatchEvent(events);
			}
			render(){
				return (
					<div style={abcStylePopup_shop}>
						<div style={popupPlaylistDf_shop}>
							<div style={actPlaylistQuestPopup_shop}>
								<div style={playlistPopupHead_shop}>
									<div style={closePlaylistPopupBefore_shop}>
										<div className="truncate" style={dflexCloseBefore_shop}>
											<font size={4}>Create your own shop and let every one know about this</font>
										</div>
									</div>
									<div style={closePlaylistPopupAfter_shop}>
										<div style={dflexCloseAfter_shop}>
											<font style={closingPopupFontwa_shop} size={5} onClick={this._closing_playlist_popup_bhai}>&#9932;</font>
										</div>
									</div>
								</div>
								<div style={playlistPopupBody_shop}>

									<div style={flexibleFlexSick_shop}>
										<div style={actPlaylistDataStyle_shop}>
											<div style={ham_tumhe_itna_pyar_karenge}>
												<div style={ham_tumhe_itna_pyar_karenge_lol_loler}>
													<img src={this.state.initialImage} style={haye_mera_dil_chal_koina} />
													<br />
													<ul className="collapsible" data-collapsible="accordion">
														<li>
															<div className="collapsible-header"><i className="material-icons">filter_drama</i>Add shop cover image</div>
															<div className="collapsible-body">
																<div className="file-field input-field">
																	<div className="btn white black-text">
																		<span className="capital_capital_hoho">Choose file</span>
																		<input type="file" onChange={this._you_can_make_the_whole_world_stare} />
																	</div>
																	<div className="file-path-wrapper">
																		<input className="file-path validate" type="text" />
																	</div>
																</div>
																<br />
																<br />
																<div className="progress">
															     <div className="determinate" style={main_hun_tara_ha_aankh_function(this.state.initBeg)}></div>
															  </div>
																<br />
																<br />
																<p>
																	{
																		this.state.statusText
																	}
																</p>

															</div>
														</li>
														<li>
															<div style={you_are_a_proper_patola}>
																<a className="waves-effect waves-light btn white black-text capital_capital_hoho" onClick={this._publish_my_shop_ajay}>Publish Shop</a>
															</div>
														</li>
														<li>
															{
																this.state.publishStart==1?(
																	<div>
																		<div style={highway_dont_care_but_i_do_pratibha}>
																			<PreloderCircularPartOneShop />
																		</div>
																		<br />
																		<p style={textAlignGabru}>Publishing Shop</p>
																	</div>
																):false
															}
														</li>
													</ul>
												</div>
												<div style={ham_tumhe_itna_pyar_karenge_lol}>
													<ul className="collection">
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">account_circle</i>
																	<input id="icon_prefix" type="text" class="validate" />
																	<label for="icon_prefix">Shop Name</label>
																</div>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div className="input-field">
																<i className="material-icons prefix">view_module</i>
																	<div className="chips chips-autocomplete chips-initial chip_tar" id="tarang" ref={(elem)=>{
																		if (window.__myShopType!=undefined && window.__myShopType.length>0) {
																			let doNumber=[];
																			let sr=new Set(window.__myShopType);
																			let shpType=Array.from(sr)
																			shpType.map( (m,n)=>{
																				let ddMMnn={tag:m};
																				doNumber.push(ddMMnn);
																			} )
																			$('.chip_tar').material_chip({
																				placeholder:"",
																				secondaryPlaceholder:"",
																				data:doNumber,
																				autocompleteOptions: {
																					data: {
																						'Grocery': null,
																						'Kitchen': null,
																						'Fooding': null,
																						'Cloths': null,
																						'furnishing': null
																					},
																					limit: 10,
																					minLength: 0
																				}
																			});
																		}else {
																			$('.chip_tar').material_chip({
																				placeholder:"",
																				secondaryPlaceholder:"",
																				autocompleteOptions: {
																					data: {
																						'Grocery': null,
																						'Kitchen': null,
																						'Fooding': null,
																						'Cloths': null,
																						'furnishing': null
																					},
																					limit: 10,
																					minLength: 0
																				}
																			});
																		}
																		$('.chip_tar').on('chip.add', function(e, chip){
																			if (window.__myShopType==undefined) {
																				let arx=[];
																				arx.push(chip.tag)
																				window.__myShopType=arx;
																			}else{
																				let arx=window.__myShopType;
																				arx.push(chip.tag)
																				window.__myShopType=arx;
																			}
																		});
																		$('.chip_tar').on('chip.delete', function(e, chip){
																			let arxh=window.__myShopType;
																			let dtr=chip.tag;
																			let indi=arxh.indexOf(dtr);
																			if (indi>=0) {
																				arxh.splice(indi,1);
																			}
																			window.__myShopType=arxh;
																		});
																	}}></div>
																	<label for="tarang">Shop type</label>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">date_range</i>
																	<input type="text" id="autocomplete-input_for" className="datepicker" />
																	<label for="autocomplete-input_for">Shop started on.</label>
																</div>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">account_circle</i>
																	<input id="icon_prefix_mobile" type="text" class="validate" />
																	<label for="icon_prefix_mobile">Shop mobile number</label>
																</div>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div className="input-field">
																<i className="material-icons prefix">person_pin_circle</i>
																	<div className="chips chips-autocomplete" id="chipper_pin" ref={(elem)=>{
																		if (window.__myShopPinCode!=undefined && window.__myShopPinCode.length>0) {
																			let doNumber=[];
																			let sr=new Set(window.__myShopPinCode);
																			let shpType=Array.from(sr)
																			shpType.map( (m,n)=>{
																				let ddMMnn={tag:m};
																				doNumber.push(ddMMnn);
																			} )
																			$('#chipper_pin').material_chip({
																				placeholder:"",
																				secondaryPlaceholder:"",
																				data:doNumber,
																				autocompleteOptions: {
																					data: {
																						'700052': null,
																						'700156': null,
																						'700056': null,
																						'847224': null,
																						'110042': null,
																						'110084': null,
																						'847211': null,
																						'110005': null,
																						'110007': null,
																					},
																					limit: 10,
																					minLength: 0
																				}
																			});
																		}else {
																			$('#chipper_pin').material_chip({
																				placeholder:"",
																				secondaryPlaceholder:"",
																				autocompleteOptions: {
																					data: {
																						'700052': null,
																						'700156': null,
																						'700056': null,
																						'847224': null,
																						'110042': null,
																						'110084': null,
																						'847211': null,
																						'110005': null,
																						'110007': null,
																					},
																					limit: 10,
																					minLength: 0
																				}
																			});
																		}
																		$('#chipper_pin').on('chip.add', function(e, chip){
																			if (window.__myShopPinCode==undefined) {
																				let arx=[];
																				arx.push(chip.tag)
																				window.__myShopPinCode=arx;
																			}else{
																				let arx=window.__myShopPinCode;
																				arx.push(chip.tag)
																				window.__myShopPinCode=arx;
																			}
																		});
																		$('#chipper_pin').on('chip.delete', function(e, chip){
																			let arxh=window.__myShopPinCode;
																			let dtr=chip.tag;
																			let indi=arxh.indexOf(dtr);
																			if (indi>=0) {
																				arxh.splice(indi,1);
																			}
																			window.__myShopPinCode=arxh;
																		});
																	}}></div>
																	<label for="chipper_pin">Provide pincodes of all area in which your shop or its branch exist.</label>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">add_location</i>
																	<input id="icon_prefix_dassa_1" type="text" class="validate" />
																	<label for="icon_prefix_dassa_1">Shop physical address first line</label>
																</div>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">add_location</i>
																	<input id="icon_prefix_dassa_2" type="text" class="validate" />
																	<label for="icon_prefix_dassa_2">Shop physical address second line</label>
																</div>
															</div>
														</li>
														<li className="collection-item dismissable">
																	<div className="input-field">
																		<i className="material-icons prefix">access_time</i>
																		<input type="text" id="autocompleteinput_for_teri_meri" className="timepicker" placeholder="" ref={(elem)=>{
																		}} />
																		<label for="autocompleteinput_for_teri_meri">Shop open time</label>
																	</div>
														</li>
														<li className="collection-item dismissable">
																	<div className="input-field">
																		<i className="material-icons prefix">access_time</i>
																		<input type="text" id="autocompleteinput_for_teri_meri_1" className="timepicker" placeholder="" ref={(elem)=>{
																		}} />
																		<label for="autocompleteinput_for_teri_meri_1">Shop close time</label>
																	</div>
														</li>
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">local_shipping</i>
																	<input type="text" id="autocomplete-input_r" className="autocomplete" />
																	<label for="autocomplete-input_r">Will you provide home delivery ?</label>
																</div>
															</div>
														</li>
														{
															this.state.thoriderTheharJa=="Yes"?(
																<li className="collection-item dismissable">
																			<div className="input-field">
																				<i className="material-icons prefix">access_time</i>
																				<input type="text" id="autocompleteinput_for_1" className="timepicker" placeholder="" ref={(elem)=>{
																					$('.timepicker').pickatime({
																						default: 'now', // Set default time: 'now', '1:30AM', '16:30'
																						fromnow: 0,       // set default time to * milliseconds from now (using with default = 'now')
																						twelvehour: true, // Use AM/PM or 24-hour format
																						donetext: 'OK', // text for done-button
																						cleartext: 'Clear', // text for clear-button
																						canceltext: 'Cancel', // Text for cancel-button
																						autoclose: false, // automatic close timepicker
																						ampmclickable: true, // make AM PM clickable
																						aftershow: function(){
																							//$('.timepicker').focus();
																						} //Function for after opening timepicker
																					});
																				}} />
																				<label for="autocompleteinput_for_1">Delivery time from</label>
																			</div>
																</li>
															):false
														}
														{
															this.state.thoriderTheharJa=="Yes"?(
																<li className="collection-item dismissable">
																	<div className="input-field">
																		<i className="material-icons prefix">access_time</i>
																		<input type="text" id="autocompleteinput_for_2" className="timepicker" placeholder="" ref={(elem)=>{
																			$('.timepicker').pickatime({
																				default: 'now', // Set default time: 'now', '1:30AM', '16:30'
																				fromnow: 0,       // set default time to * milliseconds from now (using with default = 'now')
																				twelvehour: true, // Use AM/PM or 24-hour format
																				donetext: 'OK', // text for done-button
																				cleartext: 'Clear', // text for clear-button
																				canceltext: 'Cancel', // Text for cancel-button
																				autoclose: false, // automatic close timepicker
																				ampmclickable: true, // make AM PM clickable
																				aftershow: function(){
																					//$('.timepicker').focus();
																				} //Function for after opening timepicker
																			});
																		}} />
																		<label for="autocompleteinput_for_2">Delivery time upto</label>
																	</div>
																</li>
															):false
														}
														{
															this.state.thoriderTheharJa=="Yes"?(

																<li className="collection-item dismissable">
																	<div className="input-field">
																		<i className="material-icons prefix">person_pin_circle</i>
																			<div className="chips chips-autocomplete" id="chipper" ref={(elem)=>{
																				if (window.__myDeliveryPinCode!=undefined && window.__myDeliveryPinCode.length>0) {
																					let doNumber=[];
																					let sr=new Set(window.__myDeliveryPinCode);
																					let shpType=Array.from(sr)
																					shpType.map( (m,n)=>{
																						let ddMMnn={tag:m};
																						doNumber.push(ddMMnn);
																					} )
																					$('#chipper').material_chip({
																						placeholder:"",
																						data:doNumber,
																						secondaryPlaceholder:"",
																				    autocompleteOptions: {
																				      data: {
																				        '700052': null,
																				        '700156': null,
																				        '700056': null,
																								'847224': null,
																								'110042': null,
																								'110084': null,
																								'847211': null,
																								'110005': null,
																								'110007': null,
																				      },
																				      limit: 10,
																				      minLength: 0
																				    }
																				  });
																				}else{
																					$('#chipper').material_chip({
																						placeholder:"",
																						secondaryPlaceholder:"",
																				    autocompleteOptions: {
																				      data: {
																				        '700052': null,
																				        '700156': null,
																				        '700056': null,
																								'847224': null,
																								'110042': null,
																								'110084': null,
																								'847211': null,
																								'110005': null,
																								'110007': null,
																				      },
																				      limit: 10,
																				      minLength: 0
																				    }
																				  });
																				}

																				$('#chipper').on('chip.add', function(e, chip){
																					//console.log(e);
																					//console.log(chip);
																					if (window.__myDeliveryPinCode==undefined) {
																						let arx=[];
																						arx.push(chip.tag)
																						window.__myDeliveryPinCode=arx;
																					}else{
																						let arx=window.__myDeliveryPinCode;
																						arx.push(chip.tag)
																						window.__myDeliveryPinCode=arx;
																					}
																				});
																				$('#chipper').on('chip.delete', function(e, chip){
																					let arxh=window.__myDeliveryPinCode;
																					let dtr=chip.tag;
																					let indi=arxh.indexOf(dtr);
																					if (indi>=0) {
																						arxh.splice(indi,1);
																					}
																					window.__myDeliveryPinCode=arxh;
																			 	});
																			}}></div>
																			<label for="chipper">Provide pincodes of all area in which you want to deliver your product</label>
																	</div>
																</li>
															):false
														}
														{
															this.state.thoriderTheharJa=="Yes"?(
																<li className="collection-item dismissable">
																	<div>
																		<div className="input-field">
																			<i className="material-icons prefix">account_circle</i>
																			<input id="icon_prefix_delivery_rate" type="text" class="validate" />
																			<label for="icon_prefix_delivery_rate">Average delivery charge per K.M.(INR)</label>
																		</div>
																	</div>
																</li>
															):false
														}
														{
															this.state.thoriderTheharJa=="Yes"?(
																<li className="collection-item dismissable">
																	<div>
																		<div className="input-field">
																			<i className="material-icons prefix">watch_later</i>
																			<input type="text" id="autocomplete-input_r_or_sex_yara_saja_na" className="autocomplete" ref={(elem)=>{
																				$('#autocomplete-input_r_or_sex_yara_saja_na').autocomplete({
																			    data: {
																			      "1 day": null,
																			      "2 day": null,
																						"3 day": null,
																						"4 day": null,
																						"5 day": null,
																						"6 day": null,
																						"7 day": null,
																						"8 day": null,
																						"9 day": null,
																						"10 day": null
																			    },
																			    limit: 10, // The max amount of results that can be shown at once. Default: Infinity.
																			    onAutocomplete: function(val) {
																						/*if (val=="Yes") {
																							that.setState({
																								thoriderTheharJa:"Yes"
																							})
																						}
																						else {
																							that.setState({
																								thoriderTheharJa:"No"
																							})
																						}*/
																			      // Callback function when value is autcompleted.
																						//alert("completed")
																			    },
																			    minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
																			  });
																			}} />
																			<label for="autocomplete-input_r_or_sex_yara_saja_na">Maximum delivery time (!approximate!)</label>
																		</div>
																	</div>
																</li>
															):false
														}
														<li className="collection-item dismissable">
															<div className="input-field">
																<i className="material-icons prefix">payment</i>
																	<div className="chips chips-autocomplete" id="chipper_payment" ref={(elem)=>{
																		if (window.__myPaymentOption!=undefined && window.__myPaymentOption.length>0) {
																			let doNumber=[];
																			let sr=new Set(window.__myPaymentOption);
																			let shpType=Array.from(sr)
																			shpType.map( (m,n)=>{
																				let ddMMnn={tag:m};
																				doNumber.push(ddMMnn);
																			} )
																			$('#chipper_payment').material_chip({
																				placeholder:"",
																				secondaryPlaceholder:"",
																				data:doNumber,
																				autocompleteOptions: {
																					data: {
																						'theLinkedface wallet(Recommended)': null,
																						'cash on delivery': null,
																						'credit/debit card': null,
																						'net banking':null
																					},
																					limit: 10,
																					minLength: 0
																				}
																			});
																		}else {
																			$('#chipper_payment').material_chip({
																				placeholder:"",
																				secondaryPlaceholder:"",
																				autocompleteOptions: {
																					data: {
																						'theLinkedface wallet(Recommended)': null,
																						'cash on delivery': null,
																						'credit/debit card': null,
																						'net banking':null
																					},
																					limit: 10,
																					minLength: 0
																				}
																			});
																		}

																		$('#chipper_payment').on('chip.add', function(e, chip){
																			//console.log(e);
																			//console.log(chip);
																			if (window.__myPaymentOption==undefined) {
																				let arx=[];
																				arx.push(chip.tag)
																				window.__myPaymentOption=arx;
																			}else{
																				let arx=window.__myPaymentOption;
																				arx.push(chip.tag)
																				window.__myPaymentOption=arx;
																			}
																		});
																		$('#chipper_payment').on('chip.delete', function(e, chip){
																			let arxh=window.__myPaymentOption;
																			let dtr=chip.tag;
																			let indi=arxh.indexOf(dtr);
																			if (indi>=0) {
																				arxh.splice(indi,1);
																			}
																			window.__myPaymentOption=arxh;
																		});
																	}}></div>
																	<label for="chipper_payment">Please select your feasible payment option</label>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">watch_later</i>
																	<input type="text" id="autocomplete-input_r_or" className="autocomplete" />
																	<label for="autocomplete-input_r_or">Will you support later collectable booking ?</label>
																</div>
															</div>
														</li>
														{
															this.state.isqKaDastoor=="Yes"?(
																<li className="collection-item dismissable">
																	<div>
																		<div className="input-field">
																			<i className="material-icons prefix">watch_later</i>
																			<input type="text" id="autocomplete-input_r_or_sex" className="autocomplete" ref={(elem)=>{
																				$('input#autocomplete-input_r_or_sex').autocomplete({
																			    data: {
																			      "1 day": null,
																			      "2 day": null,
																						"3 day": null,
																						"4 day": null,
																						"5 day": null,
																						"6 day": null,
																						"7 day": null,
																						"8 day": null,
																						"9 day": null,
																						"10 day": null
																			    },
																			    limit: 10, // The max amount of results that can be shown at once. Default: Infinity.
																			    onAutocomplete: function(val) {
																						/*if (val=="Yes") {
																							that.setState({
																								thoriderTheharJa:"Yes"
																							})
																						}
																						else {
																							that.setState({
																								thoriderTheharJa:"No"
																							})
																						}*/
																			      // Callback function when value is autcompleted.
																						//alert("completed")
																			    },
																			    minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
																			  });
																			}} />
																			<label for="autocomplete-input_r_or_sex">How long Will you preserver later collectable booked product ?</label>
																		</div>
																	</div>
																</li>
															):false
														}
													</ul>
												</div>
											</div>
										</div>
									</div>

								</div>
							</div>
						</div>
					</div>
				)
			}
		}



		// job create function




		var main_hun_tara_ha_aankh_function_job=(width)=>{
			return {width:`${width}%`,height:"15px"}
		}
		const abcStylePopup_job_create={width:"99%",height:"1240px",position:"absolute",zIndex:15,backgroundColor:"transparent"};
		const popupPlaylistDf_job_create={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const actPlaylistQuestPopup_job_create={width:"80%",height:"90%",border:"1px solid #e6ecf0"};
		const playlistPopupHead_job_create={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"2px"};
		const playlistPopupBody_job_create={width:"100%",height:"1110px",backgroundColor:"white"};
		const closePlaylistPopupBefore_job_create={width:"95%",height:"100%",display:"inline",float:"left"};
		const closePlaylistPopupAfter_job_create={width:"5%",height:"100%",display:"inline",float:"right"};
		const dflexCloseBefore_job_create={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const dflexCloseAfter_job_create={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
		const closingPopupFontwa_job_create={cursor:"pointer"};
		const msgInformationToAddPlaylist_job_create={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
		const actPlaylistDataStyle_job_create={width:"100%",height:"100%"};
		const updatePlaylistStyle_job_create={width:"100%",height:"40px"};
		const createPlaylistButtonDadaji_job_create={width:"50%",height:"100%",display:"inline",float:"left"};
		const updatePlaylistButtonDadaji_job_create={width:"50%",height:"100%",display:"inline",float:"right"};
		const createPlaylistButtonDady_job_create={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
		const updatePlaylistButtonDady_job_create={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const closingPopupFontwaOf_job_create={cursor:"pointer"};
		const playlistNameBoxStyle_job_create={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
		const playlistCreateBoxPopupStyle_job_create={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
		const plNameProvider_job_create={width:"65%",height:"80%"};
		const flexibleFlexSick_job_create={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const ham_tumhe_itna_pyar_karenge_job_create={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",overflowY:"scroll"};
		const ham_tumhe_itna_pyar_karenge_lol_job_create={width:"60%",height:"100%"};
		const ham_tumhe_itna_pyar_karenge_lol_loler_job_create={width:"30%",height:"100%"};
		const cust_spanning_tree_bt_bate_dilo_ki_job_create={backgroundColor:"transparent"};
		const waise_ta_mitran_da_swag_billo_job_create={width:"50%",textAlign:"left"};
		const chugali_karunga_khwaja_ji_ke_paas_left_job_create={width:"49%",display:"inline",float:"left"};
		const chugali_karunga_khwaja_ji_ke_paas_right_job_create={width:"49%",display:"inline",float:"right"};
		const haye_mera_dil_chal_koina_job_create={width:"95%",height:"250px"}
		const main_hun_tara_ha_aankh_job_create={width:"50%",height:"15px"};
		const you_are_a_proper_patola_job_create={width:"100%",display:"flex",justifyContent:"center"};
		class CreateJobPopupPratibha extends React.Component {
			constructor(props) {
				super(props);
				this.state = {
					newNamePl:"",
					thoriderTheharJa:"No",
					isqKaDastoor:"No",
					pincodes:[],
					initBeg:0,
					statusText:"",
					initialImage:"img-not-available.png",
					publishStart:0
				};
				this.componentWillMount=this.componentWillMount.bind(this);
				this.componentWillUnmount=this.componentWillUnmount.bind(this);
				this._closing_playlist_popup_bhai=this._closing_playlist_popup_bhai.bind(this);
				this._playlistNewNameChange=this._playlistNewNameChange.bind(this);
				this._mm_ll_clk_new_playlist_merge=this._mm_ll_clk_new_playlist_merge.bind(this);
				this.componentDidMount=this.componentDidMount.bind(this);
				this._you_can_make_the_whole_world_stare=this._you_can_make_the_whole_world_stare.bind(this);
				this._publish_my_shop_ajay=this._publish_my_shop_ajay.bind(this);
			}
			_publish_my_shop_ajay(evt){
				evt.preventDefault();
				evt.stopPropagation();
				evt.persist();
				let sh_name=$('#icon_prefix').val();
				let stype=new Set(window.__myJobType);
				let sh_type=Array.from(stype)
				let sh_start_date=$('#autocomplete-input_for').val();
				let sh_mobile=$('#icon_prefix_mobile').val();
				let spin=new Set(window.__myJobPinCode);
				let sh_pin=Array.from(spin)
				let sh_add_1=$('#icon_prefix_dassa_1').val();
				let sh_add_2=$('#icon_prefix_dassa_2').val();
				let sh_open_time=$('#autocompleteinput_for_teri_meri').val();
				let sh_close_time=$('#autocompleteinput_for_teri_meri_1').val();
				//let sh_delivery_flag=$('#autocomplete-input_r').val();
				let sh_website=$('#icon_prefix_website').val();
				let sh_reg=$('#icon_prefix_reg').val();
				let sh_pay=$('#autocomplete-input_r_pay_scale').val();
				let sh_benefit=$('#autocomplete-input_benefit').val();
				let sh_onsite=$('#autocomplete-input_r_onsite').val();
				let sh_transport;
				let sh_insurance;
				let sh_perk;
				let sh_office_trip;
				let onsite_country;
				if (sh_benefit=="Yes") {
					sh_transport=$('').val();
					sh_insurance=$('').val();
					sh_perk=$('').val();
					sh_office_trip=$('').val();
				}else{
					sh_transport="N.A.";
					sh_insurance="N.A.";
					sh_perk="N.A.";
					sh_office_trip="N.A.";
				}
				if (sh_onsite=="Yes") {
					onsite_country=$('').val();
				}else {
					onsite_country="N.A.";
				}
				console.log(sh_name);
				console.log(sh_type);
				console.log(sh_start_date);
				console.log(sh_mobile);
				console.log(sh_pin);
				console.log(sh_add_1);
				console.log(sh_add_2);
				console.log(sh_open_time);
				console.log(sh_close_time);
				console.log(sh_website);
				console.log(sh_reg);
				console.log(sh_pay);
				console.log(sh_benefit);
				console.log(sh_onsite);
				console.log(sh_transport);
				console.log(sh_insurance);
				console.log(sh_perk);
				console.log(sh_office_trip);
				console.log(onsite_country);
				let tempMe=window.__rasoola.allah[1];
				let pubKey=window.__rasoola.allah[4];
				let jobIcon=JSON.parse(sessionStorage.__my_job_icon).vax;
				this.setState({
					publishStart:1
				});
				let sendableJsData={
					Name:sh_name,
					Type:sh_type,
					StartDate:sh_start_date,
					Mobile:sh_mobile,
					PinCode:sh_pin,
					AddressOne:sh_add_1,
					AddressTwo:sh_add_2,
					OpenTime:sh_open_time,
					CloseTime:sh_close_time,
					Website:sh_website,
					RegistrationNumber:sh_reg,
					Payscale:sh_pay,
					ExtraBenefit:sh_benefit,
					Onsite:sh_onsite,
					Transport:sh_transport,
					Insurance:sh_insurance,
					RegularPerk:sh_perk,
					OfficeTrip:sh_office_trip,
					OnsiteCountry:onsite_country,
					Me:tempMe,
					Pkey:pubKey,
					JobIcon:jobIcon
				}
				if (sh_name!="" && sh_type.length>0 && sh_start_date!="" && sh_mobile!="" && sh_pin.length>0 && sh_add_1!="" && sh_add_2!="" && sh_open_time!="" && sh_close_time!="" && sh_website!="" && sh_reg!="" && sh_pay!="" && sh_benefit!="" && sh_onsite!="" && sh_transport!="" && sh_insurance!="" && sh_perk!="" && sh_office_trip!="" && onsite_country!="") {
					$.ajax({
						url:`createMyJobPratibhaPleaseForMeSorry?data=${JSON.stringify(sendableJsData)}`,
						type:"GET",
						contentType:"json",
						async:true
					}).done((data)=>{
						console.log("ppppppppppppppppppppppppppppppprrrrrrrrrrrrrrrrrrroooooooooooooooffffesssssssionalllllllll");
						console.log(data);
					}).fail((jqXHR,statusText)=>{

					})
				}else {

				}
			}
			_you_can_make_the_whole_world_stare(evt){
				evt.preventDefault();
				evt.stopPropagation();
				evt.persist();
				var that=this;
				var reader = new FileReader();
				reader.onload = function(event) {
					that.setState({
						statusText:"preparing for upload"
					})
						var contents = event.target.result;
						console.log(contents.byteLength);
						var uAr=new Uint8Array(contents);
						console.log(uAr);
						var who=window.__rasoola.allah[1];
						var xhttp = new XMLHttpRequest();

						xhttp.onreadystatechange = function() {
							if (this.readyState == 4 && this.status == 200) {
								//console.log(this.responseText)
								//_gotta_ok_main_shop_icon

								let vx=JSON.parse(this.responseText);
								console.log(vx)
								sessionStorage.__my_job_icon=JSON.stringify({vax:vx.name});
								that.setState({
									statusText:`!!Success!! Total uploaded size = ${vx.size}`,
									initialImage:vx.name
								});
								//ReactDOM.render(<FakeIcon SR={vx.name} />,document.getElementById('_gotta_ok_main_shop_icon'))
							}
						};

						xhttp.open("POST", "https://pratibhash.herokuapp.com/postMyClientImagePratibha", true);
						//xhttp.setRequestHeader('Content-Type','application/octet-stream')
						console.log(xhttp.upload)
						xhttp.upload.addEventListener("progress",function(e) {
						var pc = parseInt((e.loaded / e.total * 100));
						//progress.style.backgroundPosition = pc + "% 0";
						//console.log(pc);
						if (pc>=1 && pc<100) {
							that.setState({
								initBeg:pc,
								statusText:"uploading file"
							})
						}
						that.setState({
							initBeg:pc
						})
					},false);
					xhttp.setRequestHeader('Content-Type', 'application/json');
					var s=JSON.stringify({val:uAr,who:who});
					xhttp.send(s);
				};
				reader.onerror = function(event) {
						console.error("File could not be read! Code " + event.target.error.code);
				};
				reader.readAsArrayBuffer(evt.currentTarget.files[0]);
			}
			componentDidMount(){
				var that=this;
				$('input.autocomplete').autocomplete({
					data: {
						"Grocery": null,
						"Kitchen": null,
						"Furnishing": 'https://placehold.it/250x250'
					},
					limit: 20, // The max amount of results that can be shown at once. Default: Infinity.
					onAutocomplete: function(val) {
						// Callback function when value is autcompleted.
						alert("completed")
					},
					minLength: 1, // The minimum length of the input for the autocomplete to start. Default: 1.
				});
				$('input#autocomplete-input_r').autocomplete({
					data: {
						"Yes": null,
						"No": null
					},
					limit: 2, // The max amount of results that can be shown at once. Default: Infinity.
					onAutocomplete: function(val) {
						/*if (val=="Yes") {
							that.setState({
								thoriderTheharJa:"Yes"
							})
						}
						else {
							that.setState({
								thoriderTheharJa:"No"
							})
						}*/
						// Callback function when value is autcompleted.
						//alert("completed")
					},
					minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
				});



				$('input#autocomplete-input_r_pay_scale').autocomplete({
					data: {
						"50K(INR) Annually": null,
						"100K(INR) Annually": null,
						"150K(INR) Annually": null,
						"200K(INR) Annually": null,
						"250K(INR) Annually": null,
						"300K(INR) Annually": null,
						"350K(INR) Annually": null,
						"400K(INR) Annually": null,
						"450K(INR) Annually": null,
						"500K(INR) Annually": null,
						"550K(INR) Annually": null,
						"600K(INR) Annually": null,
						"650K(INR) Annually": null,
						"700K(INR) Annually": null,
						"750K(INR) Annually": null,
						"800K(INR) Annually": null,
						"850K(INR) Annually": null,
						"900K(INR) Annually": null,
						"950K(INR) Annually": null,
						"1000K(INR) Annually": null
					},
					limit: 10, // The max amount of results that can be shown at once. Default: Infinity.
					onAutocomplete: function(val) {
						/*if (val=="Yes") {
							that.setState({
								thoriderTheharJa:"Yes"
							})
						}
						else {
							that.setState({
								thoriderTheharJa:"No"
							})
						}*/
						// Callback function when value is autcompleted.
						//alert("completed")
					},
					minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
				});


				$('input#autocomplete-input_r_or').autocomplete({
					data: {
						"Yes": null,
						"No": null
					},
					limit: 2, // The max amount of results that can be shown at once. Default: Infinity.
					onAutocomplete: function(val) {
						if (val=="Yes") {
							that.setState({
								isqKaDastoor:"Yes"
							})
						}
						else {
							that.setState({
								isqKaDastoor:"No"
							})
						}
						// Callback function when value is autcompleted.
						//alert("completed")
					},
					minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
				});

				$('.datepicker').pickadate({
					selectMonths: true, // Creates a dropdown to control month
					selectYears: 15, // Creates a dropdown of 15 years to control year,
					today: 'Today',
					clear: 'Clear',
					close: 'Ok',
					closeOnSelect: false // Close upon selecting a date,
				});
				$('.timepicker').pickatime({
					default: 'now', // Set default time: 'now', '1:30AM', '16:30'
					fromnow: 0,       // set default time to * milliseconds from now (using with default = 'now')
					twelvehour: true, // Use AM/PM or 24-hour format
					donetext: 'OK', // text for done-button
					cleartext: 'Clear', // text for clear-button
					canceltext: 'Cancel', // Text for cancel-button
					autoclose: false, // automatic close timepicker
					ampmclickable: true, // make AM PM clickable
					aftershow: function(){
						//$('.timepicker').focus();
					} //Function for after opening timepicker
				});
				$('.collapsible').collapsible();



				$('input#autocomplete-input_r_onsite').autocomplete({
					data: {
						"Yes": null,
						"No": null,
						"Depends":null
					},
					limit: 3, // The max amount of results that can be shown at once. Default: Infinity.
					onAutocomplete: function(val) {
						if (val=="Yes") {
	 					 that.setState({
	 						 thoriderTheharJaOnsite:"Yes"
	 					 })
	 				 }
	 				 else {
	 					 that.setState({
	 						 thoriderTheharJaOnsite:"No"
	 					 })
	 				 }

					},
					minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
				});

				$('input#autocomplete-input_benefit').autocomplete({
					data: {
						"Yes": null,
						"No": null
					},
					limit: 2, // The max amount of results that can be shown at once. Default: Infinity.
					onAutocomplete: function(val) {
						if (val=="Yes") {
	 					 that.setState({
	 						 thoriderTheharJa:"Yes"
	 					 })
	 				 }
	 				 else {
	 					 that.setState({
	 						 thoriderTheharJa:"No"
	 					 })
	 				 }

					},
					minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
				});
			}
			_mm_ll_clk_new_playlist_merge(evt){
				evt.preventDefault();
				evt.stopPropagation();
				var that=this;
				let golj=window.__rasoola.allah[1];
			}
			_playlistNewNameChange(evt){
				evt.preventDefault();
				evt.stopPropagation();
			}
			_closing_playlist_popup_bhai(evt){
				ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
			}
			componentWillMount(){
				var that=this;
				var events = new CustomEvent(
					"opacity",
					{
						detail: {
							message: 0.2,
							time: new Date(),
					},
					bubbles: true,
					cancelable: true
				}
			 );
			 window.dispatchEvent(events);

			}
			componentWillUnmount(){
				window.__myDeliveryPinCode=undefined;
				var events = new CustomEvent(
					"opacity",
					{
						detail: {
							message: 1,
							time: new Date(),
					},
					bubbles: true,
					cancelable: true
				}
			 );
			 window.dispatchEvent(events);

			}
			render(){
				return (
					<div style={abcStylePopup_job_create}>
						<div style={popupPlaylistDf_job_create}>
							<div style={actPlaylistQuestPopup_job_create}>
								<div style={playlistPopupHead_shop}>
									<div style={closePlaylistPopupBefore_job_create}>
										<div className="truncate" style={dflexCloseBefore_job_create}>
											<font size={4}>Create your own job and let every one know about this</font>
										</div>
									</div>
									<div style={closePlaylistPopupAfter_job_create}>
										<div style={dflexCloseAfter_job_create}>
											<font style={closingPopupFontwa_job_create} size={5} onClick={this._closing_playlist_popup_bhai}>&#9932;</font>
										</div>
									</div>
								</div>
								<div style={playlistPopupBody_job_create}>

									<div style={flexibleFlexSick_job_create}>
										<div style={actPlaylistDataStyle_job_create}>
											<div style={ham_tumhe_itna_pyar_karenge_job_create}>
												<div style={ham_tumhe_itna_pyar_karenge_lol_loler_job_create}>
													<img src={this.state.initialImage} style={haye_mera_dil_chal_koina_job_create} />
													<br />
													<ul className="collapsible" data-collapsible="accordion">
														<li>
															<div className="collapsible-header"><i className="material-icons">filter_drama</i>Add Job cover image</div>
															<div className="collapsible-body">
																<div className="file-field input-field">
																	<div className="btn white black-text">
																		<span className="capital_capital_hoho">Choose file</span>
																		<input type="file" onChange={this._you_can_make_the_whole_world_stare} />
																	</div>
																	<div className="file-path-wrapper">
																		<input className="file-path validate" type="text" />
																	</div>
																</div>
																<br />
																<br />
																<div className="progress">
																	 <div className="determinate" style={main_hun_tara_ha_aankh_function(this.state.initBeg)}></div>
																</div>
																<br />
																<br />
																<p>
																	{
																		this.state.statusText
																	}
																</p>

															</div>
														</li>
														<li>
															<div style={you_are_a_proper_patola_job_create}>
																<a className="waves-effect waves-light btn white black-text capital_capital_hoho" onClick={this._publish_my_shop_ajay}>Publish Job</a>
															</div>
														</li>
														<li>
															{
																this.state.publishStart==1?(
																	<div>
																		<div style={highway_dont_care_but_i_do_pratibha}>
																			<PreloderCircularPartOneShop />
																		</div>
																		<br />
																		<p sty={textAlignGabru}>Publishing Job</p>
																	</div>
																):false
															}
														</li>
													</ul>
												</div>
												<div style={ham_tumhe_itna_pyar_karenge_lol_job_create}>
													<ul className="collection">
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">account_circle</i>
																	<input id="icon_prefix" type="text" class="validate" />
																	<label for="icon_prefix">Job Title</label>
																</div>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div className="input-field">
																<i className="material-icons prefix">view_module</i>
																	<div className="chips chips-autocomplete chips-initial chip_tar" id="tarang" ref={(elem)=>{
																		if (window.__myJobType!=undefined && window.__myJobType.length>0) {
																			let doNumber=[];
																			let sr=new Set(window.__myJobType);
																			let shpType=Array.from(sr)
																			shpType.map( (m,n)=>{
																				let ddMMnn={tag:m};
																				doNumber.push(ddMMnn);
																			} )
																			$('.chip_tar').material_chip({
																				placeholder:"",
																				secondaryPlaceholder:"",
																				data:doNumber,
																				autocompleteOptions: {
																					data: {
																						'Software Developement': null,
																						'Web Developement': null,
																						'Automation Developement': null,
																						'Software Testing(Manual)': null,
																						'Software Testing(Automation)': null,
																						'Project Testing(Manual)': null,
																						'Project Testing(Automation)': null,
																						'Machine Learning': null
																					},
																					limit: 10,
																					minLength: 0
																				}
																			});
																		}else {
																			$('.chip_tar').material_chip({
																				placeholder:"",
																				secondaryPlaceholder:"",
																				autocompleteOptions: {
																					data: {
																						'Software Developement': null,
																						'Web Developement': null,
																						'Automation Developement': null,
																						'Software Testing(Manual)': null,
																						'Software Testing(Automation)': null,
																						'Project Testing(Manual)': null,
																						'Project Testing(Automation)': null,
																						'Machine Learning': null
																					},
																					limit: 10,
																					minLength: 0
																				}
																			});
																		}
																		$('.chip_tar').on('chip.add', function(e, chip){
																			if (window.__myJobType==undefined) {
																				let arx=[];
																				arx.push(chip.tag)
																				window.__myJobType=arx;
																			}else{
																				let arx=window.__myJobType;
																				arx.push(chip.tag)
																				window.__myJobType=arx;
																			}
																		});
																		$('.chip_tar').on('chip.delete', function(e, chip){
																			let arxh=window.__myJobType;
																			let dtr=chip.tag;
																			let indi=arxh.indexOf(dtr);
																			if (indi>=0) {
																				arxh.splice(indi,1);
																			}
																			window.__myJobType=arxh;
																		});
																	}}></div>
																	<label for="tarang">Job type</label>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">date_range</i>
																	<input type="text" id="autocomplete-input_for" className="datepicker" />
																	<label for="autocomplete-input_for">Company started on.</label>
																</div>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">account_circle</i>
																	<input id="icon_prefix_mobile" type="text" class="validate" />
																	<label for="icon_prefix_mobile">Company mobile number</label>
																</div>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div className="input-field">
																<i className="material-icons prefix">person_pin_circle</i>
																	<div className="chips chips-autocomplete" id="chipper_pin" ref={(elem)=>{
																		if (window.__myJobPinCode!=undefined && window.__myJobPinCode.length>0) {
																			let doNumber=[];
																			let sr=new Set(window.__myJobPinCode);
																			let shpType=Array.from(sr)
																			shpType.map( (m,n)=>{
																				let ddMMnn={tag:m};
																				doNumber.push(ddMMnn);
																			} )
																			$('#chipper_pin').material_chip({
																				placeholder:"",
																				secondaryPlaceholder:"",
																				data:doNumber,
																				autocompleteOptions: {
																					data: {
																						'700052': null,
																						'700156': null,
																						'700056': null,
																						'847224': null,
																						'110042': null,
																						'110084': null,
																						'847211': null,
																						'110005': null,
																						'110007': null,
																					},
																					limit: 10,
																					minLength: 0
																				}
																			});
																		}else {
																			$('#chipper_pin').material_chip({
																				placeholder:"",
																				secondaryPlaceholder:"",
																				autocompleteOptions: {
																					data: {
																						'700052': null,
																						'700156': null,
																						'700056': null,
																						'847224': null,
																						'110042': null,
																						'110084': null,
																						'847211': null,
																						'110005': null,
																						'110007': null,
																					},
																					limit: 10,
																					minLength: 0
																				}
																			});
																		}
																		$('#chipper_pin').on('chip.add', function(e, chip){
																			if (window.__myJobPinCode==undefined) {
																				let arx=[];
																				arx.push(chip.tag)
																				let tempS=new Set(arx);
																				let arrTmp=Array.from(tempS);
																				window.__myJobPinCode=arrTmp;
																			}else{
																				let arx=window.__myJobPinCode;
																				arx.push(chip.tag)
																				let tempS=new Set(arx);
																				let arrTmp=Array.from(tempS);
																				window.__myJobPinCode=arrTmp;
																			}
																		});
																		$('#chipper_pin').on('chip.delete', function(e, chip){
																			let arxh=window.__myJobPinCode;
																			let dtr=chip.tag;
																			let indi=arxh.indexOf(dtr);
																			if (indi>=0) {
																				arxh.splice(indi,1);
																			}
																			let tempS=new Set(arxh);
																			let arrTmp=Array.from(tempS);
																			window.__myJobPinCode=arrTmp;
																		});
																	}}></div>
																	<label for="chipper_pin">Job location (Pin Code)</label>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">add_location</i>
																	<input id="icon_prefix_dassa_1" type="text" class="validate" />
																	<label for="icon_prefix_dassa_1">Company physical address first line</label>
																</div>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">add_location</i>
																	<input id="icon_prefix_dassa_2" type="text" class="validate" />
																	<label for="icon_prefix_dassa_2">Company physical address second line</label>
																</div>
															</div>
														</li>
														<li className="collection-item dismissable">
																	<div className="input-field">
																		<i className="material-icons prefix">access_time</i>
																		<input type="text" id="autocompleteinput_for_teri_meri" className="timepicker" placeholder="" ref={(elem)=>{
																		}} />
																		<label for="autocompleteinput_for_teri_meri">Office start time</label>
																	</div>
														</li>
														<li className="collection-item dismissable">
																	<div className="input-field">
																		<i className="material-icons prefix">access_time</i>
																		<input type="text" id="autocompleteinput_for_teri_meri_1" className="timepicker" placeholder="" ref={(elem)=>{
																		}} />
																		<label for="autocompleteinput_for_teri_meri_1">Office close time</label>
																	</div>
														</li>
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">web</i>
																	<input id="icon_prefix_website" type="text" class="validate" />
																	<label for="icon_prefix_website">Company website</label>
																</div>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">copyright</i>
																	<input id="icon_prefix_reg" type="text" class="validate" />
																	<label for="icon_prefix_reg">Company registration no</label>
																</div>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">attach_money</i>
																	<input type="text" id="autocomplete-input_r_pay_scale" className="autocomplete" />
																	<label for="autocomplete-input_r_pay_scale">Average pay scale</label>
																</div>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">card_giftcard</i>
																	<input type="text" id="autocomplete-input_benefit" className="autocomplete" />
																	<label for="autocomplete-input_r_benefit">Will you provide any other benefits to your employee ? </label>
																</div>
															</div>
														</li>
														{
															this.state.thoriderTheharJa=="Yes"?(
																<li className="collection-item dismissable">
																	<div>
																		<div className="input-field">
																			<i className="material-icons prefix">card_giftcard</i>
																			<input type="text" id="autocomplete-input_r_transport" className="autocomplete" ref={(elem)=>{
																				$(elem).autocomplete({
																					data: {
																						"Yes": null,
																						"No": null
																					},
																					limit: 2, // The max amount of results that can be shown at once. Default: Infinity.
																					onAutocomplete: function(val) {
																						/*if (val=="Yes") {
																							that.setState({
																								isqKaDastoor:"Yes"
																							})
																						}
																						else {
																							that.setState({
																								isqKaDastoor:"No"
																							})
																						}*/
																						// Callback function when value is autcompleted.
																						//alert("completed")
																					},
																					minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
																				});


																			}} />
																			<label for="autocomplete-input_r_transport">Will you provide transport facility to your employee ? </label>
																		</div>
																	</div>
																</li>
															):false
														}
														{
															this.state.thoriderTheharJa=="Yes"?(
																<li className="collection-item dismissable">
																	<div>
																		<div className="input-field">
																			<i className="material-icons prefix">card_giftcard</i>
																			<input type="text" id="autocomplete-input_r_health_insurance" className="autocomplete" ref={(elem)=>{
																					$(elem).autocomplete({
																						data: {
																							"Yes": null,
																							"No": null
																						},
																						limit: 2, // The max amount of results that can be shown at once. Default: Infinity.
																						onAutocomplete: function(val) {
																							/*if (val=="Yes") {
																								that.setState({
																									isqKaDastoor:"Yes"
																								})
																							}
																							else {
																								that.setState({
																									isqKaDastoor:"No"
																								})
																							}*/
																							// Callback function when value is autcompleted.
																							//alert("completed")
																						},
																						minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
																					});
																			}} />
																			<label for="autocomplete-input_r_health_insurance">Will you provide health insurance to your employee ? </label>
																		</div>
																	</div>
																</li>
															):false
														}
														{
															this.state.thoriderTheharJa=="Yes"?(
																<li className="collection-item dismissable">
																	<div>
																		<div className="input-field">
																			<i className="material-icons prefix">card_giftcard</i>
																			<input type="text" id="autocomplete-input_r_regular_perks" className="autocomplete" ref={(elem)=>{
																				$(elem).autocomplete({
																					data: {
																						"Yes": null,
																						"No": null
																					},
																					limit: 2, // The max amount of results that can be shown at once. Default: Infinity.
																					onAutocomplete: function(val) {
																						/*if (val=="Yes") {
																							that.setState({
																								isqKaDastoor:"Yes"
																							})
																						}
																						else {
																							that.setState({
																								isqKaDastoor:"No"
																							})
																						}*/
																						// Callback function when value is autcompleted.
																						//alert("completed")
																					},
																					minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
																				});
																			}} />
																			<label for="autocomplete-input_r_regular_perks">Will you provide regular perks to your employee ? </label>
																		</div>
																	</div>
																</li>
															):false
														}
														{
															this.state.thoriderTheharJa=="Yes"?(
																<li className="collection-item dismissable">
																	<div>
																		<div className="input-field">
																			<i className="material-icons prefix">card_giftcard</i>
																			<input type="text" id="autocomplete-input_r_office_trips" className="autocomplete" ref={(elem)=>{
																				$(elem).autocomplete({
																					data: {
																						"Yes": null,
																						"No": null,
																						"Ocassionally":null
																					},
																					limit: 3, // The max amount of results that can be shown at once. Default: Infinity.
																					onAutocomplete: function(val) {
																						/*if (val=="Yes") {
																							that.setState({
																								isqKaDastoor:"Yes"
																							})
																						}
																						else {
																							that.setState({
																								isqKaDastoor:"No"
																							})
																						}*/
																						// Callback function when value is autcompleted.
																						//alert("completed")
																					},
																					minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
																				});
																			}} />
																			<label for="autocomplete-input_r_office_trips">Will you take your employees to office trips ? </label>
																		</div>
																	</div>
																</li>
															):false
														}
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">card_giftcard</i>
																	<input type="text" id="autocomplete-input_r_onsite" className="autocomplete" ref={(elem)=>{

																	}} />
																	<label for="autocomplete-input_r_onsite">Any onsite opportunity in this job ? </label>
																</div>
															</div>
														</li>
														{
															this.state.thoriderTheharJaOnsite=="Yes"?(
																<li className="collection-item dismissable">
																	<div>
																		<div className="input-field">
																			<i className="material-icons prefix">card_giftcard</i>
																			<input type="text" id="autocomplete-input_r_onsite_country" className="autocomplete" ref={(elem)=>{
																				$(elem).autocomplete({
																					data: {
																						"USA": null,
																						"UK": null,
																						"Asia":null
																					},
																					limit: 10, // The max amount of results that can be shown at once. Default: Infinity.
																					onAutocomplete: function(val) {
																						/*if (val=="Yes") {
																							that.setState({
																								isqKaDastoor:"Yes"
																							})
																						}
																						else {
																							that.setState({
																								isqKaDastoor:"No"
																							})
																						}*/
																						// Callback function when value is autcompleted.
																						//alert("completed")
																					},
																					minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
																				});
																			}} />
																			<label for="autocomplete-input_r_onsite_country">Select most probable onsite country . </label>
																		</div>
																	</div>
																</li>
															):false
														}
													</ul>
												</div>
											</div>
										</div>
									</div>

								</div>
							</div>
						</div>
					</div>
				)
			}
		}




		// end job create function






		// add items to the shop function






		var main_hun_tara_ha_aankh_function_job=(width)=>{
			return {width:`${width}%`,height:"15px"}
		}
		const abcStylePopup_add_items={width:"99%",height:"1240px",position:"absolute",zIndex:15,backgroundColor:"transparent"};
		const popupPlaylistDf_add_items={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const actPlaylistQuestPopup_add_items={width:"80%",height:"90%",border:"1px solid #e6ecf0"};
		const playlistPopupHead_add_items={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"2px"};
		const playlistPopupBody_add_items={width:"100%",height:"1110px",backgroundColor:"white"};
		const closePlaylistPopupBefore_add_items={width:"95%",height:"100%",display:"inline",float:"left"};
		const closePlaylistPopupAfter_add_items={width:"5%",height:"100%",display:"inline",float:"right"};
		const dflexCloseBefore_add_items={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const dflexCloseAfter_add_items={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
		const closingPopupFontwa_add_items={cursor:"pointer"};
		const msgInformationToAddPlaylist_add_items={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
		const actPlaylistDataStyle_add_items={width:"100%",height:"100%"};
		const updatePlaylistStyle_add_items={width:"100%",height:"40px"};
		const createPlaylistButtonDadaji_add_items={width:"50%",height:"100%",display:"inline",float:"left"};
		const updatePlaylistButtonDadaji_add_items={width:"50%",height:"100%",display:"inline",float:"right"};
		const createPlaylistButtonDady_add_items={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
		const updatePlaylistButtonDady_add_items={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const closingPopupFontwaOf_add_items={cursor:"pointer"};
		const playlistNameBoxStyle_add_items={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
		const playlistCreateBoxPopupStyle_add_items={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
		const plNameProvider_add_items={width:"65%",height:"80%"};
		const flexibleFlexSick_add_items={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const ham_tumhe_itna_pyar_karenge_add_items={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",overflowY:"scroll"};
		const ham_tumhe_itna_pyar_karenge_lol_add_items={width:"60%",height:"100%"};
		const ham_tumhe_itna_pyar_karenge_lol_loler_add_items={width:"30%",height:"100%"};
		const cust_spanning_tree_bt_bate_dilo_ki_add_items={backgroundColor:"transparent"};
		const waise_ta_mitran_da_swag_billo_add_items={width:"50%",textAlign:"left"};
		const chugali_karunga_khwaja_ji_ke_paas_left_add_items={width:"49%",display:"inline",float:"left"};
		const chugali_karunga_khwaja_ji_ke_paas_right_add_items={width:"49%",display:"inline",float:"right"};
		const haye_mera_dil_chal_koina_add_items={width:"95%",height:"250px"}
		const main_hun_tara_ha_aankh_job_add_items={width:"50%",height:"15px"};
		const you_are_a_proper_patola_job_add_items={width:"100%",display:"flex",justifyContent:"center"};
		const tujhePyarSeDekhneWalaTujheApnaSamajhneWalaDilPratibha={width:"100%"};
		const yeDinYeMahineSaalPratibhaILU={width:"40%",height:"250px",marginLeft:"4%",marginRight:"4%",display:"inline-block"};
		const yeDinYeMahineSaalPratibhaILU_img={width:"100%",height:"100%"};
		class CreateAddItemPopupPratibha extends React.Component {
			constructor(props) {
				super(props);
				this.state = {
					newNamePl:"",
					thoriderTheharJa:"No",
					isqKaDastoor:"No",
					pincodes:[],
					initBeg:0,
					statusText:"",
					initialImage:"img-not-available.png",
					publishStart:0,
					myShopData:JSON.parse(this.props.MyShopData).All,
					myItemTypePratibha:window.__myItemType!=undefined?window.__myItemType[window.__myItemType.length-1]:"",
					meraDilHaiMeraDilHiToHai:[]
				};
				this.componentWillMount=this.componentWillMount.bind(this);
				this.componentWillUnmount=this.componentWillUnmount.bind(this);
				this._closing_playlist_popup_bhai=this._closing_playlist_popup_bhai.bind(this);
				this._playlistNewNameChange=this._playlistNewNameChange.bind(this);
				this._mm_ll_clk_new_playlist_merge=this._mm_ll_clk_new_playlist_merge.bind(this);
				this.componentDidMount=this.componentDidMount.bind(this);
				this._you_can_make_the_whole_world_stare=this._you_can_make_the_whole_world_stare.bind(this);
				this._publish_my_shop_ajay=this._publish_my_shop_ajay.bind(this);
				this.componentDidUpdate=this.componentDidUpdate.bind(this);
				this.a=window.__myItemType!=undefined?window.__myItemType[window.__myItemType.length-1]:"";
				console.log(this._a);
			}
			componentDidUpdate(prevProps, prevState){
				this.a=window.__myItemType!=undefined?window.__myItemType[window.__myItemType.length-1]:"";
				console.log(this._a);
			}
			_publish_my_shop_ajay(evt){
				evt.preventDefault();
				evt.stopPropagation();
				evt.persist();
				let itemName=$("#icon_prefix").val();
				let itType=new Set(window.__myItemType);
				let itemType=Array.from(itType)
				let itCategory=new Set(window.__myItemCetegory);
				let itemCategory=Array.from(itCategory)
				let itemQuantity=(this.state.myItemTypePratibha=="Weighable")?($("#autocomplete-input_r_item_quantity_weighable").val()):((this.state.myItemTypePratibha=="Countable")?($("#autocomplete-input_r_item_quantity_countable").val()):"");
				let itemPrice=(this.state.myItemTypePratibha=="Weighable")?($("#autocomplete-input_r_item_quantity_weighable_price").val()):((this.state.myItemTypePratibha=="Countable")?($("#autocomplete-input_r_item_quantity_weighable_price").val()):"");
				let mfgDate=$("#autocompleteinput_for_teri_meri").val();
				let expDate=$("#autocompleteinput_for_teri_meri_1").val();
				let maxAvailability=$("#autocompleteinput_for_teri_meri_2").val();
				let iconArray=this.state.meraDilHaiMeraDilHiToHai;
				let whoMeHelper=JSON.parse(this.state.myShopData)
				let whoMe=whoMeHelper[whoMeHelper.length-1];
				//let whoMe=window.__rasoola.allah[1];
				let pKey=window.__rasoola.allah[4];
				console.log("shopdata");
				console.log(whoMeHelper);
				console.log(this.state.myShopData);
				let owwwweeeerrr=window.__rasoola.allah[1]
				let sendMejson={ItemName:itemName,ItemType:itemType,ItemCategory:itemCategory,ItemQuantity:itemQuantity,ItemPrice:itemPrice,MfgDate:mfgDate,ExpDate:expDate,MaxAvailability:maxAvailability,IconArray:iconArray,Me:whoMe,Pkey:pKey,OwwnMe:owwwweeeerrr};
				console.log(sendMejson);
				$.ajax({
					url:`addItemToMyShopPratibhaPleaseLU?data=${JSON.stringify(sendMejson)}`,
					type:"GET",
					dataType:"json",
					async:true
				}).done((data)=>{
					console.log(data);
				}).fail((jqXHR,statusText)=>{
					console.log(statusText);
				})
				console.log(itemName);
				console.log(itemType);
				console.log(itemCategory);
				console.log(itemQuantity);
				console.log(itemPrice);
				console.log(mfgDate);
				console.log(expDate);
				console.log(maxAvailability);
				this.setState({
					publishStart:1
				})
			}
			_you_can_make_the_whole_world_stare(evt){
				evt.preventDefault();
				evt.stopPropagation();
				evt.persist();
				var that=this;
				var reader = new FileReader();
				reader.onload = function(event) {
					that.setState({
						statusText:"preparing for upload"
					})
						var contents = event.target.result;
						console.log(contents.byteLength);
						var uAr=new Uint8Array(contents);
						console.log(uAr);
						var who=window.__rasoola.allah[1];
						var xhttp = new XMLHttpRequest();

						xhttp.onreadystatechange = function() {
							if (this.readyState == 4 && this.status == 200) {
								//console.log(this.responseText)
								//_gotta_ok_main_shop_icon

								let vx=JSON.parse(this.responseText);
								console.log(vx)
								sessionStorage.__my_shop_icon=JSON.stringify({vax:vx.name});
								let arx;
								if (that.state.meraDilHaiMeraDilHiToHai.length==0) {
									arx=[];
									arx.push(vx.name)
								}else {
									arx=that.state.meraDilHaiMeraDilHiToHai;
									arx.push(vx.name)
								}
								that.setState({
									statusText:`!!Success!! Total uploaded size = ${vx.size}`,
									initialImage:vx.name,
									meraDilHaiMeraDilHiToHai:arx
								});
								//ReactDOM.render(<FakeIcon SR={vx.name} />,document.getElementById('_gotta_ok_main_shop_icon'))
							}
						};

						xhttp.open("POST", "https://pratibhash.herokuapp.com/postMyClientImagePratibha", true);
						//xhttp.setRequestHeader('Content-Type','application/octet-stream')
						console.log(xhttp.upload)
						xhttp.upload.addEventListener("progress",function(e) {
						var pc = parseInt((e.loaded / e.total * 100));
						//progress.style.backgroundPosition = pc + "% 0";
						//console.log(pc);
						if (pc>=1 && pc<100) {
							that.setState({
								initBeg:pc,
								statusText:"uploading file"
							})
						}
						that.setState({
							initBeg:pc
						})
					},false);
					xhttp.setRequestHeader('Content-Type', 'application/json');
					var s=JSON.stringify({val:uAr,who:who});
					xhttp.send(s);
				};
				reader.onerror = function(event) {
						console.error("File could not be read! Code " + event.target.error.code);
				};
				reader.readAsArrayBuffer(evt.currentTarget.files[0]);
			}
			componentDidMount(){
				var that=this;
				$('.datepicker').pickadate({
					 selectMonths: true, // Creates a dropdown to control month
					 selectYears: 15, // Creates a dropdown of 15 years to control year,
					 today: 'Today',
					 clear: 'Clear',
					 close: 'Ok',
					 closeOnSelect: false // Close upon selecting a date,
				 });

				$('.timepicker').pickatime({
					default: 'now', // Set default time: 'now', '1:30AM', '16:30'
					fromnow: 0,       // set default time to * milliseconds from now (using with default = 'now')
					twelvehour: true, // Use AM/PM or 24-hour format
					donetext: 'OK', // text for done-button
					cleartext: 'Clear', // text for clear-button
					canceltext: 'Cancel', // Text for cancel-button
					autoclose: false, // automatic close timepicker
					ampmclickable: true, // make AM PM clickable
					aftershow: function(){
						//$('.timepicker').focus();
					} //Function for after opening timepicker
				});
				$('.collapsible').collapsible();
				if (window.__myItemType!=undefined && window.__myItemType.length>0) {
					let doNumber=[];
					let sr=new Set(window.__myItemType);
					let shpType=Array.from(sr)
					shpType.map( (m,n)=>{
						let ddMMnn={tag:m};
						doNumber.push(ddMMnn);
					} )
					let arxlenminusone=shpType[shpType.length-1];
					this.setState({
						myItemTypePratibha:arxlenminusone
					})
					$('.chip_tar').material_chip({
						placeholder:"",
						secondaryPlaceholder:"",
						data:doNumber,
						autocompleteOptions: {
							data: {
								'Weighable': null,
								'Countable': null
							},
							limit: 10,
							minLength: 0
						}
					});
				}else {

					$('.chip_tar').material_chip({
						placeholder:"",
						secondaryPlaceholder:"",
						autocompleteOptions: {
							data: {
								'Weighable': null,
								'Countable': null
							},
							limit: 10,
							minLength: 0
						}
					});
				}
				$('.chip_tar').on('chip.add', function(e, chip){
					if (window.__myItemType==undefined) {
						let arx=[];
						arx.push(chip.tag)
						window.__myItemType=arx;
						let arxlenminusone=arx[arx.length-1];
						that.setState({
							myItemTypePratibha:arxlenminusone
						})
					}else{
						let arx=window.__myItemType;
						arx.push(chip.tag)
						window.__myItemType=arx;
						let arxlenminusone=arx[arx.length-1];
						that.setState({
							myItemTypePratibha:arxlenminusone
						})
					}
				});
				$('.chip_tar').on('chip.delete', function(e, chip){
					let arxh=window.__myItemType;
					let dtr=chip.tag;
					let indi=arxh.indexOf(dtr);
					if (indi>=0) {
						arxh.splice(indi,1);
					}
					window.__myItemType=arxh;
					let arxlenminusone=arxh[arxh.length-1];
					that.setState({
						myItemTypePratibha:arxlenminusone
					})
				});
			}
			_mm_ll_clk_new_playlist_merge(evt){
				evt.preventDefault();
				evt.stopPropagation();
				var that=this;
				let golj=window.__rasoola.allah[1];
			}
			_playlistNewNameChange(evt){
				evt.preventDefault();
				evt.stopPropagation();
			}
			_closing_playlist_popup_bhai(evt){
				ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
			}
			componentWillMount(){
				var that=this;
				var events = new CustomEvent(
					"opacity",
					{
						detail: {
							message: 0.2,
							time: new Date(),
					},
					bubbles: true,
					cancelable: true
				}
			 );
			 window.dispatchEvent(events);
			 window.addEventListener("changeMyStateIemTypeDataPratibhaPlease",(evt)=>{
				 that.setState({
					 myItemTypePratibha:evt.detail.message
				 });
			 },true)
			}
			componentWillUnmount(){
				window.__myDeliveryPinCode=undefined;
				var events = new CustomEvent(
					"opacity",
					{
						detail: {
							message: 1,
							time: new Date(),
					},
					bubbles: true,
					cancelable: true
				}
			 );
			 window.dispatchEvent(events);
			}
			render(){
				return (
					<div style={abcStylePopup_add_items}>
						<div style={popupPlaylistDf_add_items}>
							<div style={actPlaylistQuestPopup_add_items}>
								<div style={playlistPopupHead_shop}>
									<div style={closePlaylistPopupBefore_add_items}>
										<div className="truncate" style={dflexCloseBefore_add_items}>
											<font size={4}>Hi {window.__rasoola.allah[0]} please add the relevant items to your shop - {JSON.parse(this.state.myShopData)[0]}</font>
										</div>
									</div>
									<div style={closePlaylistPopupAfter_add_items}>
										<div style={dflexCloseAfter_add_items}>
											<font style={closingPopupFontwa_job_create} size={5} onClick={this._closing_playlist_popup_bhai}>&#9932;</font>
										</div>
									</div>
								</div>
								<div style={playlistPopupBody_job_create}>
									<div style={flexibleFlexSick_add_items}>
										<div style={actPlaylistDataStyle_add_items}>
											<div style={ham_tumhe_itna_pyar_karenge_add_items}>
												<div style={ham_tumhe_itna_pyar_karenge_lol_loler_add_items}>
													<img src={this.state.initialImage} style={haye_mera_dil_chal_koina_add_items} />
													<br />
													<p className="truncate _align_my_text_pratibha_center">Latest icon</p>
													<p className="truncate _align_my_text_pratibha_center">* you can add multiple icon</p>
													<br />
													<ul className="collapsible" data-collapsible="accordion">
														<li>
															<div className="collapsible-header"><i className="material-icons">filter_drama</i>Add item cover image</div>
															<div className="collapsible-body">
																<div className="file-field input-field">
																	<div className="btn white black-text">
																		<span className="capital_capital_hoho">Choose file</span>
																		<input type="file" onChange={this._you_can_make_the_whole_world_stare} />
																	</div>
																	<div className="file-path-wrapper">
																		<input className="file-path validate" type="text" />
																	</div>
																</div>
																<br />
																<br />
																<div className="progress">
																	 <div className="determinate" style={main_hun_tara_ha_aankh_function(this.state.initBeg)}></div>
																</div>
																<br />
																<br />
																<p>
																	{
																		this.state.statusText
																	}
																</p>

															</div>
														</li>
														<li>
															<div style={you_are_a_proper_patola_job_create}>
																<a className="waves-effect waves-light btn white black-text capital_capital_hoho" onClick={this._publish_my_shop_ajay}>Save item</a>
															</div>
														</li>
														<li>
															{
																this.state.publishStart==1?(
																	<div>
																		<div style={highway_dont_care_but_i_do_pratibha}>
																			<PreloderCircularPartOneShop />
																		</div>
																		<br />
																		<p style={textAlignGabru}>Saving items</p>
																	</div>
																):false
															}
														</li>
													</ul>
												</div>
												<div style={ham_tumhe_itna_pyar_karenge_lol_job_create}>
													<ul className="collection">
														<li className="collection-item dismissable">
															<div>
																<div className="input-field">
																	<i className="material-icons prefix">account_circle</i>
																	<input id="icon_prefix" type="text" class="validate" />
																	<label for="icon_prefix">Item Name</label>
																</div>
															</div>
														</li>
														<li className="collection-item dismissable">
															<div className="input-field">
																<i className="material-icons prefix">view_module</i>
																	<div className="chips chips-autocomplete chips-initial chip_tar" id="tarang" ref={(elem)=>{

																			$("#tarang_cat_wt").material_chip({
																				placeholder:"",
																				secondaryPlaceholder:"",
																				data:"",
																				autocompleteOptions: {
																					data: {
																						'Rice': null,
																						'Pulse': null
																					},
																					limit: 10,
																					minLength: 0
																				}
																			});

																		$("#tarang_cat_wt").on('chip.add', function(e, chip){
																			if (window.__myItemCetegory==undefined) {
																				let arx=[];
																				arx.push(chip.tag)
																				window.__myItemCetegory=arx;

																				/*that.setState({
																					myItemTypePratibha:arxlenminusone
																				})*/
																			}else{
																				let arx=window.__myItemCetegory;
																				arx.push(chip.tag)
																				window.__myItemCetegory=arx;

																				/*that.setState({
																					myItemTypePratibha:arxlenminusone
																				})*/
																			}
																		});
																		$("#tarang_cat_wt").on('chip.delete', function(e, chip){
																			let arxh=window.__myItemCetegory;
																			let dtr=chip.tag;
																			let indi=arxh.indexOf(dtr);
																			if (indi>=0) {
																				arxh.splice(indi,1);
																			}
																			window.__myItemCetegory=arxh;

																			/*that.setState({
																				myItemTypePratibha:arxlenminusone
																			})*/
																		});



																	}}></div>
																	<label for="tarang">Item type</label>
															</div>
														</li>
														{
															(this.state.myItemTypePratibha=="Weighable")?(
																<li className="collection-item dismissable">
																	<div className="input-field">
																		<i className="material-icons prefix">view_module</i>
																			<div className="chips chips-autocomplete chips-initial chip_tar_cat_wt" id="tarang_cat_wt" ref={(elem)=>{

																					$("#tarang_cat_wt").material_chip({
																						placeholder:"",
																						secondaryPlaceholder:"",
																						data:"",
																						autocompleteOptions: {
																							data: {
																								'Rice': null,
																								'lentils': null
																							},
																							limit: 10,
																							minLength: 0
																						}
																					});

																				$("#tarang_cat_wt").on('chip.add', function(e, chip){
																					if (window.__myItemCetegory==undefined) {
																						let arx=[];
																						arx.push(chip.tag)
																						window.__myItemCetegory=arx;

																						/*that.setState({
																							myItemTypePratibha:arxlenminusone
																						})*/
																					}else{
																						let arx=window.__myItemCetegory;
																						arx.push(chip.tag)
																						window.__myItemCetegory=arx;

																						/*that.setState({
																							myItemTypePratibha:arxlenminusone
																						})*/
																					}
																				});
																				$("#tarang_cat_wt").on('chip.delete', function(e, chip){
																					let arxh=window.__myItemCetegory;
																					let dtr=chip.tag;
																					let indi=arxh.indexOf(dtr);
																					if (indi>=0) {
																						arxh.splice(indi,1);
																					}
																					window.__myItemCetegory=arxh;

																					/*that.setState({
																						myItemTypePratibha:arxlenminusone
																					})*/
																				});
																			}.bind(this)}></div>
																			<label for="tarang_cat_wt">Item category</label>
																	</div>
																</li>
															):false
														}
														{
															(this.state.myItemTypePratibha=="Countable")?(
																<li className="collection-item dismissable">
																	<div className="input-field">
																		<i className="material-icons prefix">view_module</i>
																			<div className="chips chips-autocomplete chips-initial chip_tar_cat_cnt" id="tarang_cat_cnt" ref={(elem)=>{

																					$("#tarang_cat_cnt").material_chip({
																						placeholder:"",
																						secondaryPlaceholder:"",
																						data:"",
																						autocompleteOptions: {
																							data: {
																								'Watter bottle': null,
																								'Choclates': null
																							},
																							limit: 10,
																							minLength: 0
																						}
																					});

																				$("#tarang_cat_cnt").on('chip.add', function(e, chip){
																					if (window.__myItemCetegory==undefined) {
																						let arx=[];
																						arx.push(chip.tag)
																						window.__myItemCetegory=arx;

																						/*that.setState({
																							myItemTypePratibha:arxlenminusone
																						})*/
																					}else{
																						let arx=window.__myItemCetegory;
																						arx.push(chip.tag)
																						window.__myItemCetegory=arx;

																						/*that.setState({
																							myItemTypePratibha:arxlenminusone
																						})*/
																					}
																				});
																				$("#tarang_cat_cnt").on('chip.delete', function(e, chip){
																					let arxh=window.__myItemCetegory;
																					let dtr=chip.tag;
																					let indi=arxh.indexOf(dtr);
																					if (indi>=0) {
																						arxh.splice(indi,1);
																					}
																					window.__myItemCetegory=arxh;

																					/*that.setState({
																						myItemTypePratibha:arxlenminusone
																					})*/
																				});
																			}}></div>
																			<label for="tarang_cat_cnt">Item category</label>
																	</div>
																</li>
															):false
														}
														{
															(this.state.myItemTypePratibha=="Weighable")?(
																<li className="collection-item dismissable">
																	<div>
																		<div className="input-field">
																			<i className="material-icons prefix">view_module</i>
																			<input type="text" id="autocomplete-input_r_item_quantity_weighable" className="autocomplete" ref={(elem)=>{
																				$(elem).autocomplete({
																					data: {
																						"10kg": null,
																						"20kg": null,
																						"30kg": null,
																						"40kg": null,
																						"50kg": null,
																						"60kg": null,
																						"70kg": null,
																						"80kg": null,
																						"90kg": null,
																						"100kg": null,
																						"150kg": null,
																						"200kg": null,
																						"250kg": null,
																						"300kg": null,
																						"350kg": null,
																						"400kg": null,
																						"450kg": null,
																						"500kg": null,
																						"550kg": null,
																						"600kg": null,
																						"650kg": null,
																						"700kg": null,
																						"750kg": null,
																						"800kg": null,
																						"850kg": null,
																						"900kg": null,
																						"950kg": null,
																						"1000kg": null,
																						" >> 1000kg": null
																					},
																					limit: 10, // The max amount of results that can be shown at once. Default: Infinity.
																					onAutocomplete: function(val) {
																						if (val==" >> 1000kg") {

																						}
																						else {

																						}
																						// Callback function when value is autcompleted.
																						//alert("completed")
																					},
																					minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
																				});
																			}} />
																			<label for="autocomplete-input_r_item_quantity_weighable">Item quantity available</label>
																		</div>
																	</div>
																</li>
															):false
														}
														{
															(this.state.myItemTypePratibha=="Countable")?(
																<li className="collection-item dismissable">
																	<div>
																		<div className="input-field">
																			<i className="material-icons prefix">view_module</i>
																			<input type="text" id="autocomplete-input_r_item_quantity_countable" className="autocomplete" ref={(elem)=>{
																				$(elem).autocomplete({
																					data: {
																						"10 Piece": null,
																						"20 Piece": null,
																						"30 Piece": null,
																						"40 Piece": null,
																						"50 Piece": null,
																						"60 Piece": null,
																						"70 Piece": null,
																						"80 Piece": null,
																						"90 Piece": null,
																						"100 Piece": null,
																						"150 Piece": null,
																						"200 Piece": null,
																						"250 Piece": null,
																						"300 Piece": null,
																						"350 Piece": null,
																						"400 Piece": null,
																						"450 Piece": null,
																						"500 Piece": null,
																						"550 Piece": null,
																						"600 Piece": null,
																						"650 Piece": null,
																						"700 Piece": null,
																						"750 Piece": null,
																						"800 Piece": null,
																						"850 Piece": null,
																						"900 Piece": null,
																						"950 Piece": null,
																						"1000 Piece": null,
																						" >> 1000 Piece": null
																					},
																					limit: 10, // The max amount of results that can be shown at once. Default: Infinity.
																					onAutocomplete: function(val) {
																						if (val==" >> 1000 Piece") {

																						}
																						else {

																						}
																						// Callback function when value is autcompleted.
																						//alert("completed")
																					},
																					minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
																				});
																			}} />
																			<label for="autocomplete-input_r_item_quantity_countable">Item quantity available</label>
																		</div>
																	</div>
																</li>
															):false
														}
														{
															(this.state.myItemTypePratibha=="Weighable")?(
																<li className="collection-item dismissable">
																	<div>
																		<div className="input-field">
																			<i className="material-icons prefix">view_module</i>
																			<input type="text" id="autocomplete-input_r_item_quantity_weighable_price" className="autocomplete" ref={(elem)=>{
																				$(elem).autocomplete({
																					data: {
																						"10 (INR)/kg": null,
																						"20 (INR)/kg": null,
																						"30 (INR)/kg": null,
																						"40 (INR)/kg": null,
																						"50 (INR)/kg": null,
																						"60 (INR)/kg": null,
																						"70 (INR)/kg": null,
																						"80 (INR)/kg": null,
																						"90 (INR)/kg": null,
																						"100 (INR)/kg": null,
																						"150 (INR)/kg": null,
																						"200 (INR)/kg": null,
																						"250 (INR)/kg": null,
																						"300 (INR)/kg": null,
																						"350 (INR)/kg": null,
																						"400 (INR)/kg": null,
																						"450 (INR)/kg": null,
																						"500 (INR)/kg": null,
																						"550 (INR)/kg": null,
																						"600 (INR)/kg": null,
																						"650 (INR)/kg": null,
																						"700 (INR)/kg": null,
																						"750 (INR)/kg": null,
																						"800 (INR)/kg": null,
																						"850 (INR)/kg": null,
																						"900 (INR)/kg": null,
																						"950 (INR)/kg": null,
																						"1000 (INR)/kg": null,
																						" >> 1000 (INR)/kg": null
																					},
																					limit: 10, // The max amount of results that can be shown at once. Default: Infinity.
																					onAutocomplete: function(val) {
																						if (val==" >> 1000 (INR)/kg") {

																						}
																						else {

																						}
																						// Callback function when value is autcompleted.
																						//alert("completed")
																					},
																					minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
																				});
																			}} />
																			<label for="autocomplete-input_r_item_quantity_weighable_price">Item price (INR)</label>
																		</div>
																	</div>
																</li>
															):false
														}
														{
															(this.state.myItemTypePratibha=="Countable")?(
																<li className="collection-item dismissable">
																	<div>
																		<div className="input-field">
																			<i className="material-icons prefix">view_module</i>
																			<input type="text" id="autocomplete-input_r_item_quantity_countable_price" className="autocomplete" ref={(elem)=>{
																				$(elem).autocomplete({
																					data: {
																						"10 (INR)/Piece": null,
																						"20 (INR)/Piece": null,
																						"30 (INR)/Piece": null,
																						"40 (INR)/Piece": null,
																						"50 (INR)/Piece": null,
																						"60 (INR)/Piece": null,
																						"70 (INR)/Piece": null,
																						"80 (INR)/Piece": null,
																						"90 (INR)/Piece": null,
																						"100 (INR)/Piece": null,
																						"150 (INR)/Piece": null,
																						"200 (INR)/Piece": null,
																						"250 (INR)/Piece": null,
																						"300 (INR)/Piece": null,
																						"350 (INR)/Piece": null,
																						"400 (INR)/Piece": null,
																						"450 (INR)/Piece": null,
																						"500 (INR)/Piece": null,
																						"550 (INR)/Piece": null,
																						"600 (INR)/Piece": null,
																						"650 (INR)/Piece": null,
																						"700 (INR)/Piece": null,
																						"750 (INR)/Piece": null,
																						"800 (INR)/Piece": null,
																						"850 (INR)/Piece": null,
																						"900 (INR)/Piece": null,
																						"950 (INR)/Piece": null,
																						"1000 (INR)/Piece": null,
																						" >> 1000 (INR)/Piece": null
																					},
																					limit: 10, // The max amount of results that can be shown at once. Default: Infinity.
																					onAutocomplete: function(val) {
																						if (val==" >> 1000 (INR)/Piece") {

																						}
																						else {

																						}
																						// Callback function when value is autcompleted.
																						//alert("completed")
																					},
																					minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
																				});
																			}} />
																			<label for="autocomplete-input_r_item_quantity_countable_price">Item price (INR)</label>
																		</div>
																	</div>
																</li>
															):false
														}
														<li className="collection-item dismissable">
																	<div className="input-field">
																		<i className="material-icons prefix">access_time</i>
																		<input type="text" id="autocompleteinput_for_teri_meri" className="datepicker" placeholder="" ref={(elem)=>{
																		}} />
																		<label for="autocompleteinput_for_teri_meri">Mfg. date</label>
																	</div>
														</li>
														<li className="collection-item dismissable">
																	<div className="input-field">
																		<i className="material-icons prefix">access_time</i>
																		<input type="text" id="autocompleteinput_for_teri_meri_1" className="datepicker" placeholder="" ref={(elem)=>{
																		}} />
																		<label for="autocompleteinput_for_teri_meri_1">Exp. date</label>
																	</div>
														</li>
														<li className="collection-item dismissable">
																	<div className="input-field">
																		<i className="material-icons prefix">access_time</i>
																		<input type="text" id="autocompleteinput_for_teri_meri_2" className="datepicker" placeholder="" ref={(elem)=>{
																		}} />
																		<label for="autocompleteinput_for_teri_meri_2">Item will available till ?</label>
																	</div>
														</li>
													</ul>
													<br />
													{
														(this.state.meraDilHaiMeraDilHiToHai.length>0)?(
															<p className="truncate _align_my_text_pratibha_center">Total {this.state.meraDilHaiMeraDilHiToHai.length} icon added for this item.</p>
														):false
													}
													<div style={tujhePyarSeDekhneWalaTujheApnaSamajhneWalaDilPratibha}>
														{
															this.state.meraDilHaiMeraDilHiToHai.map( (a,b)=>{
																return (
																	<div key={b} style={yeDinYeMahineSaalPratibhaILU}>
																		<img src={a} style={yeDinYeMahineSaalPratibhaILU_img} />
																	</div>
																)
															} )
														}
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				)
			}
		}









		//end add items to the shop function











		const abcStylePopup_shop_filter={width:"99%",height:"1240px",position:"absolute",zIndex:10,backgroundColor:"transparent"};
		const popupPlaylistDf_shop_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center"};
		const actPlaylistQuestPopup_shop_filter={width:"400px",height:"400px",border:"1px solid #e6ecf0",marginTop:"150px"};
		const playlistPopupHead_shop_filter={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"10px"};
		const playlistPopupBody_shop_filter={width:"100%",height:"340px",backgroundColor:"white"};
		const closePlaylistPopupBefore_shop_filter={width:"70%",height:"100%",display:"inline",float:"left"};
		const closePlaylistPopupAfter_shop_filter={width:"30%",height:"100%",display:"inline",float:"right"};
		const dflexCloseBefore_shop_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const dflexCloseAfter_shop_filter={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
		const closingPopupFontwa_shop_filter={cursor:"pointer"};
		const msgInformationToAddPlaylist_shop_filter={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
		const actPlaylistDataStyle_shop_filter={width:"100%",height:"40%"};
		const updatePlaylistStyle_shop_filter={width:"100%",height:"40px"};
		const createPlaylistButtonDadaji_shop_filter={width:"50%",height:"100%",display:"inline",float:"left"};
		const updatePlaylistButtonDadaji_shop_filter={width:"50%",height:"100%",display:"inline",float:"right"};
		const createPlaylistButtonDady_shop_filter={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
		const updatePlaylistButtonDady_shop_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const closingPopupFontwaOf_shop_filter={cursor:"pointer"};
		const playlistNameBoxStyle_shop_filter={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
		const playlistCreateBoxPopupStyle_shop_filter={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
		const plNameProvider_shop_filter={width:"65%",height:"80%"};
		const flexibleFlexSick_shop_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"}
		class CreateShopFilterPopupCopy extends React.Component {
			constructor(props) {
				super(props);
				this.state = {
					newNamePl:""
				};
				this.componentWillMount=this.componentWillMount.bind(this);
				this.componentWillUnmount=this.componentWillUnmount.bind(this);
				this._closing_playlist_popup_bhai=this._closing_playlist_popup_bhai.bind(this);
				this._playlistNewNameChange=this._playlistNewNameChange.bind(this);
				this._mm_ll_clk_new_playlist_merge=this._mm_ll_clk_new_playlist_merge.bind(this);
			}
			_mm_ll_clk_new_playlist_merge(evt){
				evt.preventDefault();
				evt.stopPropagation();
				var that=this;
				let golj=window.__rasoola.allah[1];
			}
			_playlistNewNameChange(evt){
				evt.preventDefault();
				evt.stopPropagation();
			}
			_closing_playlist_popup_bhai(evt){
				ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
			}
			componentWillMount(){
				var events = new CustomEvent(
					"opacity",
					{
						detail: {
							message: 0.2,
							time: new Date(),
					},
					bubbles: true,
					cancelable: true
				}
			 );
			 window.dispatchEvent(events);
			}
			componentWillUnmount(){
				var events = new CustomEvent(
					"opacity",
					{
						detail: {
							message: 1,
							time: new Date(),
					},
					bubbles: true,
					cancelable: true
				}
			 );
			 window.dispatchEvent(events);
			}
			render(){
				return (
					<div style={abcStylePopup_shop_filter}>
						<div style={popupPlaylistDf_shop_filter}>
							<div style={actPlaylistQuestPopup_shop_filter}>
								<div style={playlistPopupHead_shop_filter}>
									<div style={closePlaylistPopupBefore_shop_filter}>
										<div style={dflexCloseBefore_shop_filter}>
											<font size={4}>New playlist</font>
										</div>
									</div>
									<div style={closePlaylistPopupAfter_shop_filter}>
										<div style={dflexCloseAfter_shop_filter}>
											<font style={closingPopupFontwa_shop_filter} size={5} onClick={this._closing_playlist_popup_bhai}>&#9932;</font>
										</div>
									</div>
								</div>
								<div style={playlistPopupBody_shop_filter}>

									<div style={flexibleFlexSick_shop_filter}>
										<div style={actPlaylistDataStyle_shop_filter}>
											<div style={playlistNameBoxStyle_shop_filter}>
												<input type="text" style={plNameProvider_shop_filter} placeholder="enter playlist name" value={this.state.newNamePl} onChange={this._playlistNewNameChange} />
											</div>
											<div style={playlistCreateBoxPopupStyle_shop_filter}>
												<input ref={(elem)=>{

												}} type="button" value="create" onClick={this._mm_ll_clk_new_playlist_merge} />
											</div>
										</div>
									</div>

								</div>
							</div>
						</div>
					</div>
				)
			}
		}







		const cheej_tu_to_bari_hai_mast_mast_scr={width:"100%",height:"480px",overflowY:"scroll"};
		const cheej_tu_to_bari_hai_mast_mast={width:"100%"}
		class CreateYourOwnShopOverTheLnkedFace extends React.Component {
			constructor(props) {
				super(props);
				this.state = {
					myExistedShop:this.props.MyExistedShop
				}
				this._let_me_create_my_new_shop=this._let_me_create_my_new_shop.bind(this);
				this._let_me_create_my_new_filter=this._let_me_create_my_new_filter.bind(this);
				this.componentDidMount=this.componentDidMount.bind(this);
				this._display_my_shop_add_items_pratibha_please=this._display_my_shop_add_items_pratibha_please.bind(this);
			}
			_display_my_shop_add_items_pratibha_please(evt){
				evt.preventDefault();
				evt.stopPropagation();
				let tar=evt.currentTarget?evt.currentTarget:evt.target;
				let meShopData=tar.lastChild.value;
				ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
				ReactDOM.render(<CreateAddItemPopupPratibha MyShopData={JSON.stringify({All:meShopData})} />,document.getElementById('_js_root_animation'))
			}
			componentDidMount(){
				$('.dropdown-button').dropdown({
					 inDuration: 300,
					 outDuration: 225,
					 constrainWidth: false, // Does not change width of dropdown to that of the activator
					 hover: false, // Activate on hover
					 gutter: 0, // Spacing from edge
					 belowOrigin: false, // Displays dropdown below the button
					 alignment: 'right', // Displays dropdown with edge aligned to the left of button
					 stopPropagation: false // Stops event propagation
				 }
			 );
			 $('.tooltipped').tooltip({delay: 50});
			}
			_let_me_create_my_new_shop(evt){
				ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
				ReactDOM.render(<CreateShopPopupCopy />,document.getElementById('_js_root_animation'));
			}
			_let_me_create_my_new_filter(evt){
				ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
				ReactDOM.render(<CreateShopFilterPopupCopy />,document.getElementById('_js_root_animation'));
			}
			render(){
				return (
					<div style={cheej_tu_to_bari_hai_mast_mast}>
						<div style={playlistCreateNewCont}>
							<ul style={myUl}>
								<li><input type="button" value="Create new shop" style={newPlaylistBtStyle} className="btn" onClick={this._let_me_create_my_new_shop} /></li>
							</ul>
						</div>
						<br />
						<p style={main_fir_v_tmk_chunga_huhhu} className="truncate">My shops</p>
						<div style={cheej_tu_to_bari_hai_mast_mast_scr} className="its_ok_shreya_i_am_alright_ok">
							{
								this.state.myExistedShop.map( (a,b) => {
									return (
										<div key={b} style={forgive_me_please_o_my_love}>
											{/*<ul key={b} style={myUl}>
												<li style={clickableListOnMainPage}><font size={3} color="black" style={mmActFontingCursor} onClick={this._pyar_tune_kya_kiya_clk} >{a}</font></li>
												<li style={nonerLi}><div className="tu_mera_rog_hai" ></div></li>
											</ul>*/}

												<a style={myUniqueFaceSelectStyle_midina} className='dropdown-button btn truncate tooltipped' href='#' data-activates={`dropdown1ooMMaaaaasssssTTTT${b}`} data-position="right" data-delay="50" data-tooltip={`Shop - ${a[0]} ,Type - ${a[1]}`}>{a[0]}</a>
												<a className="waves-effect waves-light btn tooltipped" style={cursorStyling_g_icon} data-position="right" data-delay="50" data-tooltip="Click me to delete this shop"><i className="material-icons">close</i></a>
												<ul id={`dropdown1ooMMaaaaasssssTTTT${b}`} style={tears_from_falling} className='dropdown-content'>
													<li className="divider"></li>
													<li>
														<a style={myUniqueFaceSelectStyle_child_midina} href="#!">Manage Shop</a>
														<input type="hidden" value={JSON.stringify(a)} />
													</li>
													<li className="divider"></li>
													<li onClick={this._display_my_shop_add_items_pratibha_please}>
														<a style={myUniqueFaceSelectStyle_child_midina} href="#!">Add Items</a>
														<input type="hidden" value={JSON.stringify(a)} />
													</li>
													<li className="divider"></li>
												</ul>



										</div>
									)
								} )
							}
						</div>
					</div>
				)
			}
		}









			const abcStylePopup_job={width:"99%",height:"1240px",position:"absolute",zIndex:10,backgroundColor:"transparent"};
			const popupPlaylistDf_job={width:"100%",height:"100%",display:"flex",justifyContent:"center"};
			const actPlaylistQuestPopup_job={width:"400px",height:"400px",border:"1px solid #e6ecf0",marginTop:"150px"};
			const playlistPopupHead_job={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"10px"};
			const playlistPopupBody_job={width:"100%",height:"340px",backgroundColor:"white"};
			const closePlaylistPopupBefore_job={width:"70%",height:"100%",display:"inline",float:"left"};
			const closePlaylistPopupAfter_job={width:"30%",height:"100%",display:"inline",float:"right"};
			const dflexCloseBefore_job={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const dflexCloseAfter_job={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
			const closingPopupFontwa_job={cursor:"pointer"};
			const msgInformationToAddPlaylist_job={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
			const actPlaylistDataStyle_job={width:"100%",height:"40%"};
			const updatePlaylistStyle_job={width:"100%",height:"40px"};
			const createPlaylistButtonDadaji_job={width:"50%",height:"100%",display:"inline",float:"left"};
			const updatePlaylistButtonDadaji_job={width:"50%",height:"100%",display:"inline",float:"right"};
			const createPlaylistButtonDady_job={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
			const updatePlaylistButtonDady_job={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const closingPopupFontwaOf_job={cursor:"pointer"};
			const playlistNameBoxStyle_job={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const playlistCreateBoxPopupStyle_job={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const plNameProvider_job={width:"65%",height:"80%"};
			const flexibleFlexSick_job={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"}
			class CreateJobPopupCopy extends React.Component {
				constructor(props) {
					super(props);
					this.state = {
						newNamePl:""
					};
					this.componentWillMount=this.componentWillMount.bind(this);
					this.componentWillUnmount=this.componentWillUnmount.bind(this);
					this._closing_playlist_popup_bhai=this._closing_playlist_popup_bhai.bind(this);
					this._playlistNewNameChange=this._playlistNewNameChange.bind(this);
					this._mm_ll_clk_new_playlist_merge=this._mm_ll_clk_new_playlist_merge.bind(this);
				}
				_mm_ll_clk_new_playlist_merge(evt){
					evt.preventDefault();
					evt.stopPropagation();
					var that=this;
					let golj=window.__rasoola.allah[1];
				}
				_playlistNewNameChange(evt){
					evt.preventDefault();
					evt.stopPropagation();
				}
				_closing_playlist_popup_bhai(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
				}
				componentWillMount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 0.2,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				componentWillUnmount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 1,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				render(){
					return (
						<div style={abcStylePopup_job}>
							<div style={popupPlaylistDf_job}>
								<div style={actPlaylistQuestPopup_job}>
									<div style={playlistPopupHead_job}>
										<div style={closePlaylistPopupBefore_job}>
											<div style={dflexCloseBefore_job}>
												<font size={4}>New playlist</font>
											</div>
										</div>
										<div style={closePlaylistPopupAfter_job}>
											<div style={dflexCloseAfter_job}>
												<font style={closingPopupFontwa_job} size={5} onClick={this._closing_playlist_popup_bhai}>&#9932;</font>
											</div>
										</div>
									</div>
									<div style={playlistPopupBody_job}>

										<div style={flexibleFlexSick_job}>
											<div style={actPlaylistDataStyle_job}>
												<div style={playlistNameBoxStyle_job}>
													<input type="text" style={plNameProvider_job} placeholder="enter playlist name" value={this.state.newNamePl} onChange={this._playlistNewNameChange} />
												</div>
												<div style={playlistCreateBoxPopupStyle_job}>
													<input ref={(elem)=>{

													}} type="button" value="create" onClick={this._mm_ll_clk_new_playlist_merge} />
												</div>
											</div>
										</div>

									</div>
								</div>
							</div>
						</div>
					)
				}
			}





			const abcStylePopup_job_filter={width:"99%",height:"1240px",position:"absolute",zIndex:10,backgroundColor:"transparent"};
			const popupPlaylistDf_job_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center"};
			const actPlaylistQuestPopup_job_filter={width:"400px",height:"400px",border:"1px solid #e6ecf0",marginTop:"150px"};
			const playlistPopupHead_job_filter={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"10px"};
			const playlistPopupBody_job_filter={width:"100%",height:"340px",backgroundColor:"white"};
			const closePlaylistPopupBefore_job_filter={width:"70%",height:"100%",display:"inline",float:"left"};
			const closePlaylistPopupAfter_job_filter={width:"30%",height:"100%",display:"inline",float:"right"};
			const dflexCloseBefore_job_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const dflexCloseAfter_job_filter={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
			const closingPopupFontwa_job_filter={cursor:"pointer"};
			const msgInformationToAddPlaylist_job_filter={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
			const actPlaylistDataStyle_job_filter={width:"100%",height:"40%"};
			const updatePlaylistStyle_job_filter={width:"100%",height:"40px"};
			const createPlaylistButtonDadaji_job_filter={width:"50%",height:"100%",display:"inline",float:"left"};
			const updatePlaylistButtonDadaji_job_filter={width:"50%",height:"100%",display:"inline",float:"right"};
			const createPlaylistButtonDady_job_filter={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
			const updatePlaylistButtonDady_job_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const closingPopupFontwaOf_job_filter={cursor:"pointer"};
			const playlistNameBoxStyle_job_filter={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const playlistCreateBoxPopupStyle_job_filter={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const plNameProvider_job_filter={width:"65%",height:"80%"};
			const flexibleFlexSick_job_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const pallo_latke_ho_yara_pallo_latke_hehe_temp_p=Object.freeze({width:"100%",height:"60px"});
			const pallo_latke_ho_yara_pallo_latke_hehe_temp_p_d_flx=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"});
			class CreateJobFilterPopupCopy extends React.Component {
				constructor(props) {
					super(props);
					this.state = {
						newNamePl:"",
						donationTension:"Please fill following to seek new job"
					};
					this.componentWillMount=this.componentWillMount.bind(this);
					this.componentWillUnmount=this.componentWillUnmount.bind(this);
					this._i_love_you_pratibha_a_lot_my_loyality=this._i_love_you_pratibha_a_lot_my_loyality.bind(this);
					this._playlistNewNameChange=this._playlistNewNameChange.bind(this);
					this._mm_ll_clk_new_playlist_merge=this._mm_ll_clk_new_playlist_merge.bind(this);
					this.componentDidMount=this.componentDidMount.bind(this);
					this._le_ja_mujhe_saath_tere_hehe=this._le_ja_mujhe_saath_tere_hehe.bind(this);
				}
				_le_ja_mujhe_saath_tere_hehe(evt){
					evt.preventDefault();
					evt.stopPropagation();
					let masoom_type=window.__myJobTypeSeek;
					let masoom_location=window.__myJobPinCodeSeek;

					let masoom_money=$('#autocomplete-input_r_pay_scale').val();
					if (masoom_type != undefined && masoom_location != undefined && masoom_money != "") {
						let senDablaJs=JSON.stringify({JobType:masoom_type,JobLocation:masoom_location,PayScale:masoom_money,Me:window.__rasoola.allah[1],Pkey:window.__rasoola.allah[4],Domain:window.__pageType})
						$.ajax({
							url:`letMeSeekMyJobPratibhaPlease?data=${senDablaJs}`,
							type:"GET",
							contentType:"json",
							async:true
						}).done((data)=>{
							console.log(data);
						}).fail((jqXHR,statusText)=>{
							console.log(statusText);
						})
					}else {

					}
				}
				componentDidMount(){
					$('input#autocomplete-input_r_pay_scale').autocomplete({
						data: {
							"50K(INR) Annually": null,
							"100K(INR) Annually": null,
							"150K(INR) Annually": null,
							"200K(INR) Annually": null,
							"250K(INR) Annually": null,
							"300K(INR) Annually": null,
							"350K(INR) Annually": null,
							"400K(INR) Annually": null,
							"450K(INR) Annually": null,
							"500K(INR) Annually": null,
							"550K(INR) Annually": null,
							"600K(INR) Annually": null,
							"650K(INR) Annually": null,
							"700K(INR) Annually": null,
							"750K(INR) Annually": null,
							"800K(INR) Annually": null,
							"850K(INR) Annually": null,
							"900K(INR) Annually": null,
							"950K(INR) Annually": null,
							"1000K(INR) Annually": null
						},
						limit: 10, // The max amount of results that can be shown at once. Default: Infinity.
						onAutocomplete: function(val) {

						},
						minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
					});

				}
				_mm_ll_clk_new_playlist_merge(evt){
					evt.preventDefault();
					evt.stopPropagation();
					var that=this;
					let golj=window.__rasoola.allah[1];
				}
				_playlistNewNameChange(evt){
					evt.preventDefault();
					evt.stopPropagation();
				}
				_i_love_you_pratibha_a_lot_my_loyality(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
				}
				componentWillMount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 0.2,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				componentWillUnmount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 1,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				render(){
					return (
						<div style={hoth_rasile_tere_hoth_rasile_my_loyality}>
							<div style={proper_patola_u_r_pratibha_my_loyality}>
								<div style={_bato_me_phul_dhalte_hai_pratibha_my_loyality}>
									<div style={wada_wada_hai_sath_na_chhutiya_be_my_loyality}>
										<div style={tujhse_muhabbat_ho_gayi_allah_maaf_kare_job_my_loyality}>
											<div style={_job_crate_option_head_view_my_loyality}>
												<div style={head_style_job_create_closable_not_1_my_loyality}>
													<div style={adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_my_loyality}>
														<div style={_head_job_create_d_flex_cont_unique_my_loyality}>
															<p className="large_font_pratibha truncate">
																{
																	this.state.donationTension
																}
															</p>
														</div>
													</div>
												</div>
												<div style={head_style_job_create_closable_not_2_my_loyality}>
													<div style={adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_my_loyality}>
														<div style={_head_job_create_d_flex_cont_my_loyality}>
															<i className="small material-icons _design_my_cursor_pratibha" onClick={this._i_love_you_pratibha_a_lot_my_loyality}>close</i>
														</div>
													</div>
												</div>
											</div>
											<div style={_oye_raju_pyaar_na_kariyo_betichod}>
											</div>
											<div style={_job_crate_option_body_view_my_loyality}>
												<div style={tu_la_laka_belari_job_my_loyality}>
													<div style={_hey_u_thank_you_for_all_this_my_loyality}>
														<div style={teri_ummeed_tera_intezar_karte_hai_my_loyality}>
															<ul className="collection">
																<li className="collection-item dismissable">
																	<div className="input-field">
																		<i className="material-icons prefix">view_module</i>
																			<div className="chips chips-autocomplete chips-initial chip_tar" id="tarang" ref={(elem)=>{
																				if (window.__myJobTypeSeek!=undefined && window.__myJobTypeSeek.length>0) {
																					let doNumber=[];
																					let sr=new Set(window.__myJobTypeSeek);
																					let shpType=Array.from(sr)
																					shpType.map( (m,n)=>{
																						let ddMMnn={tag:m};
																						doNumber.push(ddMMnn);
																					} )
																					$('.chip_tar').material_chip({
																						placeholder:"",
																						secondaryPlaceholder:"",
																						data:doNumber,
																						autocompleteOptions: {
																							data: {
																								'Software Developement': null,
																								'Web Developement': null,
																								'Automation Developement': null,
																								'Software Testing(Manual)': null,
																								'Software Testing(Automation)': null,
																								'Project Testing(Manual)': null,
																								'Project Testing(Automation)': null,
																								'Machine Learning': null
																							},
																							limit: 10,
																							minLength: 0
																						}
																					});
																				}else {
																					$('.chip_tar').material_chip({
																						placeholder:"",
																						secondaryPlaceholder:"",
																						autocompleteOptions: {
																							data: {
																								'Software Developement': null,
																								'Web Developement': null,
																								'Automation Developement': null,
																								'Software Testing(Manual)': null,
																								'Software Testing(Automation)': null,
																								'Project Testing(Manual)': null,
																								'Project Testing(Automation)': null,
																								'Machine Learning': null
																							},
																							limit: 10,
																							minLength: 0
																						}
																					});
																				}
																				$('.chip_tar').on('chip.add', function(e, chip){
																					if (window.__myJobTypeSeek==undefined) {
																						let arx=[];
																						arx.push(chip.tag)
																						let tempS=new Set(arx);
																						let arrTmp=Array.from(tempS);
																						window.__myJobTypeSeek=arrTmp;
																					}else{
																						let arx=window.__myJobTypeSeek;
																						arx.push(chip.tag)
																						let tempS=new Set(arx);
																						let arrTmp=Array.from(tempS);
																						window.__myJobTypeSeek=arrTmp;
																					}
																				});
																				$('.chip_tar').on('chip.delete', function(e, chip){
																					let arxh=window.__myJobTypeSeek;
																					let dtr=chip.tag;
																					let indi=arxh.indexOf(dtr);
																					if (indi>=0) {
																						arxh.splice(indi,1);
																					}
																					let tempS=new Set(arxh);
																					let arrTmp=Array.from(tempS);
																					window.__myJobTypeSeek=arrTmp;
																				});
																			}}></div>
																			<label for="tarang">Job type</label>
																	</div>
																</li>
																<li className="collection-item dismissable">
																	<div className="input-field">
																		<i className="material-icons prefix">person_pin_circle</i>
																			<div className="chips chips-autocomplete" id="chipper_pin" ref={(elem)=>{
																				if (window.__myJobPinCodeSeek!=undefined && window.__myJobPinCodeSeek.length>0) {
																					let doNumber=[];
																					let sr=new Set(window.__myJobPinCodeSeek);
																					let shpType=Array.from(sr)
																					shpType.map( (m,n)=>{
																						let ddMMnn={tag:m};
																						doNumber.push(ddMMnn);
																					} )
																					$('#chipper_pin').material_chip({
																						placeholder:"",
																						secondaryPlaceholder:"",
																						data:doNumber,
																						autocompleteOptions: {
																							data: {
																								'700052': null,
																								'700156': null,
																								'700056': null,
																								'847224': null,
																								'110042': null,
																								'110084': null,
																								'847211': null,
																								'110005': null,
																								'110007': null,
																							},
																							limit: 10,
																							minLength: 0
																						}
																					});
																				}else {
																					$('#chipper_pin').material_chip({
																						placeholder:"",
																						secondaryPlaceholder:"",
																						autocompleteOptions: {
																							data: {
																								'700052': null,
																								'700156': null,
																								'700056': null,
																								'847224': null,
																								'110042': null,
																								'110084': null,
																								'847211': null,
																								'110005': null,
																								'110007': null,
																							},
																							limit: 10,
																							minLength: 0
																						}
																					});
																				}
																				$('#chipper_pin').on('chip.add', function(e, chip){
																					if (window.__myJobPinCodeSeek==undefined) {
																						let arx=[];
																						arx.push(chip.tag)
																						let tempS=new Set(arx);
																						let arrTmp=Array.from(tempS);
																						window.__myJobPinCodeSeek=arrTmp;
																					}else{
																						let arx=window.__myJobPinCodeSeek;
																						arx.push(chip.tag)
																						let tempS=new Set(arx);
																						let arrTmp=Array.from(tempS);
																						window.__myJobPinCodeSeek=arrTmp;
																					}
																				});
																				$('#chipper_pin').on('chip.delete', function(e, chip){
																					let arxh=window.__myJobPinCodeSeek;
																					let dtr=chip.tag;
																					let indi=arxh.indexOf(dtr);
																					if (indi>=0) {
																						arxh.splice(indi,1);
																					}
																					let tempS=new Set(arxh);
																					let arrTmp=Array.from(tempS);
																					window.__myJobPinCodeSeek=arrTmp;
																				});
																			}}></div>
																			<label for="chipper_pin">Job location (Pin Code)</label>
																	</div>
																</li>
																<li className="collection-item dismissable">
																	<div>
																		<div className="input-field">
																			<i className="material-icons prefix">attach_money</i>
																			<input type="text" id="autocomplete-input_r_pay_scale" className="autocomplete" />
																			<label for="autocomplete-input_r_pay_scale">Average pay scale</label>
																		</div>
																	</div>
																</li>
															</ul>
															<br />
															<div style={pallo_latke_ho_yara_pallo_latke_hehe_temp_p}>
																<div style={pallo_latke_ho_yara_pallo_latke_hehe_temp_p_d_flx}>
																	<a className="waves-effect waves-light btn _pratibha_capitalize_my_text white black-text" onClick={this._le_ja_mujhe_saath_tere_hehe}>Seek job</a>
																</div>
															</div>
														</div>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					)
				}
			}







			const cheej_tu_to_bari_hai_mast_mast_scr_pro={width:"100%",height:"480px",overflowY:"scroll"};
			const cheej_tu_to_bari_hai_mast_mast_pro={width:"100%"}
			class CreateYourOwnJobOverTheLnkedFace extends React.Component {
				constructor(props) {
					super(props);
					this.state = {
						myExistedShop:["hello","ajay"]
					}
					this._let_me_create_my_new_job=this._let_me_create_my_new_job.bind(this);
					this._let_me_create_my_new_filter=this._let_me_create_my_new_filter.bind(this);
					this.componentDidMount=this.componentDidMount.bind(this);
				}
				componentDidMount(){
					$('.dropdown-button').dropdown({
						 inDuration: 300,
						 outDuration: 225,
						 constrainWidth: false, // Does not change width of dropdown to that of the activator
						 hover: false, // Activate on hover
						 gutter: 0, // Spacing from edge
						 belowOrigin: false, // Displays dropdown below the button
						 alignment: 'right', // Displays dropdown with edge aligned to the left of button
						 stopPropagation: false // Stops event propagation
					 }
				 );
				 $('.tooltipped').tooltip({delay: 50});
				}
				_let_me_create_my_new_job(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
					ReactDOM.render(<CreateJobPopupPratibha />,document.getElementById('_js_root_animation'));
				}
				_let_me_create_my_new_filter(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
					ReactDOM.render(<CreateJobFilterPopupCopy />,document.getElementById('_js_root_animation'));
				}
				render(){
					return (
						<div style={cheej_tu_to_bari_hai_mast_mast_pro}>
							<div style={playlistCreateNewCont}>
								<ul style={myUl}>
									<li><input type="button" value="Create new job" style={newPlaylistBtStyle} className="btn truncate" onClick={this._let_me_create_my_new_job} /></li>
								</ul>
							</div>
							<br />
							<br />
							<div style={playlistCreateNewCont}>
								<ul style={myUl}>
									<li><input type="button" value="Seek new job" style={newPlaylistBtStyle} className="btn truncate" onClick={this._let_me_create_my_new_filter} /></li>
								</ul>
							</div>
							<br />
							<p style={main_fir_v_tmk_chunga_huhhu} className="truncate">My Jobs</p>
							<div style={cheej_tu_to_bari_hai_mast_mast_scr_pro} className="its_ok_shreya_i_am_alright_ok">
								{
									this.state.myExistedShop.map( (a,b) => {
										return (
											<div key={b} style={forgive_me_please_o_my_love}>
												{/*<ul key={b} style={myUl}>
													<li style={clickableListOnMainPage}><font size={3} color="black" style={mmActFontingCursor} onClick={this._pyar_tune_kya_kiya_clk} >{a}</font></li>
													<li style={nonerLi}><div className="tu_mera_rog_hai" ></div></li>
												</ul>*/}

													<a style={myUniqueFaceSelectStyle_midina} className='dropdown-button btn truncate tooltipped' href='#' data-activates={`dropdown1ooMast${b}`} data-position="right" data-delay="50" data-tooltip={`Shop - ${a}`}>{a}</a>
													<a className="waves-effect waves-light btn tooltipped" style={cursorStyling_g_icon} data-position="right" data-delay="50" data-tooltip="Click me to delete this playlist"><i className="material-icons">close</i></a>
													<ul id={`dropdown1ooMast${b}`} style={tears_from_falling} className='dropdown-content'>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Social face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Professional face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Consumer face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Writer face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Dating face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Sinner face</a></li>
														<li className="divider"></li>
													</ul>



											</div>
										)
									} )
								}
							</div>
						</div>
					)
				}
			}








			const abcStylePopup_book={width:"99%",height:"1240px",position:"absolute",zIndex:10,backgroundColor:"transparent"};
			const popupPlaylistDf_book={width:"100%",height:"100%",display:"flex",justifyContent:"center"};
			const actPlaylistQuestPopup_book={width:"400px",height:"400px",border:"1px solid #e6ecf0",marginTop:"150px"};
			const playlistPopupHead_book={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"10px"};
			const playlistPopupBody_book={width:"100%",height:"340px",backgroundColor:"white"};
			const closePlaylistPopupBefore_book={width:"70%",height:"100%",display:"inline",float:"left"};
			const closePlaylistPopupAfter_book={width:"30%",height:"100%",display:"inline",float:"right"};
			const dflexCloseBefore_book={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const dflexCloseAfter_book={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
			const closingPopupFontwa_book={cursor:"pointer"};
			const msgInformationToAddPlaylist_book={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
			const actPlaylistDataStyle_book={width:"100%",height:"40%"};
			const updatePlaylistStyle_book={width:"100%",height:"40px"};
			const createPlaylistButtonDadaji_book={width:"50%",height:"100%",display:"inline",float:"left"};
			const updatePlaylistButtonDadaji_book={width:"50%",height:"100%",display:"inline",float:"right"};
			const createPlaylistButtonDady_book={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
			const updatePlaylistButtonDady_book={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const closingPopupFontwaOf_book={cursor:"pointer"};
			const playlistNameBoxStyle_book={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const playlistCreateBoxPopupStyle_book={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const plNameProvider_book={width:"65%",height:"80%"};
			const flexibleFlexSick_book={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"}
			class CreateBookPopupCopy extends React.Component {
				constructor(props) {
					super(props);
					this.state = {
						newNamePl:""
					};
					this.componentWillMount=this.componentWillMount.bind(this);
					this.componentWillUnmount=this.componentWillUnmount.bind(this);
					this._closing_playlist_popup_bhai=this._closing_playlist_popup_bhai.bind(this);
					this._playlistNewNameChange=this._playlistNewNameChange.bind(this);
					this._mm_ll_clk_new_playlist_merge=this._mm_ll_clk_new_playlist_merge.bind(this);
				}
				_mm_ll_clk_new_playlist_merge(evt){
					evt.preventDefault();
					evt.stopPropagation();
					var that=this;
					let golj=window.__rasoola.allah[1];
				}
				_playlistNewNameChange(evt){
					evt.preventDefault();
					evt.stopPropagation();
				}
				_closing_playlist_popup_bhai(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
				}
				componentWillMount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 0.2,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				componentWillUnmount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 1,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				render(){
					return (
						<div style={abcStylePopup_book}>
							<div style={popupPlaylistDf_book}>
								<div style={actPlaylistQuestPopup_book}>
									<div style={playlistPopupHead_book}>
										<div style={closePlaylistPopupBefore_book}>
											<div style={dflexCloseBefore_book}>
												<font size={4}>New playlist</font>
											</div>
										</div>
										<div style={closePlaylistPopupAfter_book}>
											<div style={dflexCloseAfter_book}>
												<font style={closingPopupFontwa_book} size={5} onClick={this._closing_playlist_popup_bhai}>&#9932;</font>
											</div>
										</div>
									</div>
									<div style={playlistPopupBody_book}>

										<div style={flexibleFlexSick_book}>
											<div style={actPlaylistDataStyle_book}>
												<div style={playlistNameBoxStyle_book}>
													<input type="text" style={plNameProvider_book} placeholder="enter playlist name" value={this.state.newNamePl} onChange={this._playlistNewNameChange} />
												</div>
												<div style={playlistCreateBoxPopupStyle_book}>
													<input ref={(elem)=>{

													}} type="button" value="create" onClick={this._mm_ll_clk_new_playlist_merge} />
												</div>
											</div>
										</div>

									</div>
								</div>
							</div>
						</div>
					)
				}
			}





			const abcStylePopup_book_filter={width:"99%",height:"1240px",position:"absolute",zIndex:10,backgroundColor:"transparent"};
			const popupPlaylistDf_book_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center"};
			const actPlaylistQuestPopup_book_filter={width:"400px",height:"400px",border:"1px solid #e6ecf0",marginTop:"150px"};
			const playlistPopupHead_book_filter={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"10px"};
			const playlistPopupBody_book_filter={width:"100%",height:"340px",backgroundColor:"white"};
			const closePlaylistPopupBefore_book_filter={width:"70%",height:"100%",display:"inline",float:"left"};
			const closePlaylistPopupAfter_book_filter={width:"30%",height:"100%",display:"inline",float:"right"};
			const dflexCloseBefore_book_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const dflexCloseAfter_book_filter={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
			const closingPopupFontwa_book_filter={cursor:"pointer"};
			const msgInformationToAddPlaylist_book_filter={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
			const actPlaylistDataStyle_book_filter={width:"100%",height:"40%"};
			const updatePlaylistStyle_book_filter={width:"100%",height:"40px"};
			const createPlaylistButtonDadaji_book_filter={width:"50%",height:"100%",display:"inline",float:"left"};
			const updatePlaylistButtonDadaji_book_filter={width:"50%",height:"100%",display:"inline",float:"right"};
			const createPlaylistButtonDady_book_filter={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
			const updatePlaylistButtonDady_book_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const closingPopupFontwaOf_book_filter={cursor:"pointer"};
			const playlistNameBoxStyle_book_filter={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const playlistCreateBoxPopupStyle_book_filter={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const plNameProvider_book_filter={width:"65%",height:"80%"};
			const flexibleFlexSick_book_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"}
			class CreateBookFilterPopupCopy extends React.Component {
				constructor(props) {
					super(props);
					this.state = {
						newNamePl:""
					};
					this.componentWillMount=this.componentWillMount.bind(this);
					this.componentWillUnmount=this.componentWillUnmount.bind(this);
					this._closing_playlist_popup_bhai=this._closing_playlist_popup_bhai.bind(this);
					this._playlistNewNameChange=this._playlistNewNameChange.bind(this);
					this._mm_ll_clk_new_playlist_merge=this._mm_ll_clk_new_playlist_merge.bind(this);
				}
				_mm_ll_clk_new_playlist_merge(evt){
					evt.preventDefault();
					evt.stopPropagation();
					var that=this;
					let golj=window.__rasoola.allah[1];
				}
				_playlistNewNameChange(evt){
					evt.preventDefault();
					evt.stopPropagation();
				}
				_closing_playlist_popup_bhai(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
				}
				componentWillMount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 0.2,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				componentWillUnmount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 1,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				render(){
					return (
						<div style={abcStylePopup_book_filter}>
							<div style={popupPlaylistDf_book_filter}>
								<div style={actPlaylistQuestPopup_book_filter}>
									<div style={playlistPopupHead_book_filter}>
										<div style={closePlaylistPopupBefore_book_filter}>
											<div style={dflexCloseBefore_book_filter}>
												<font size={4}>New playlist</font>
											</div>
										</div>
										<div style={closePlaylistPopupAfter_book_filter}>
											<div style={dflexCloseAfter_book_filter}>
												<font style={closingPopupFontwa_book_filter} size={5} onClick={this._closing_playlist_popup_bhai}>&#9932;</font>
											</div>
										</div>
									</div>
									<div style={playlistPopupBody_book_filter}>

										<div style={flexibleFlexSick_book_filter}>
											<div style={actPlaylistDataStyle_book_filter}>
												<div style={playlistNameBoxStyle_book_filter}>
													<input type="text" style={plNameProvider_book_filter} placeholder="enter playlist name" value={this.state.newNamePl} onChange={this._playlistNewNameChange} />
												</div>
												<div style={playlistCreateBoxPopupStyle_book_filter}>
													<input ref={(elem)=>{

													}} type="button" value="create" onClick={this._mm_ll_clk_new_playlist_merge} />
												</div>
											</div>
										</div>

									</div>
								</div>
							</div>
						</div>
					)
				}
			}












			const cheej_tu_to_bari_hai_mast_mast_scr_book={width:"100%",height:"480px",overflowY:"scroll"};
			const cheej_tu_to_bari_hai_mast_mast_book={width:"100%"};
			const main_fir_v_tmk_chunga_huhhu={textAlign:"center",fontSize:"large"};
			class CreateYourOwnBookstoreOverTheLnkedFace extends React.Component {
				constructor(props) {
					super(props);
					this.state = {
						myExistedShop:["hello","ajay"]
					}
					this._let_me_create_my_new_job=this._let_me_create_my_new_job.bind(this);
					this._let_me_create_my_new_filter=this._let_me_create_my_new_filter.bind(this);
				}
				_let_me_create_my_new_job(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
					ReactDOM.render(<CreateBookPopupCopy />,document.getElementById('_js_root_animation'));
				}
				_let_me_create_my_new_filter(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
					ReactDOM.render(<CreateBookFilterPopupCopy />,document.getElementById('_js_root_animation'));
				}
				render(){
					return (
						<div style={cheej_tu_to_bari_hai_mast_mast_book}>
							{/*<div style={playlistCreateNewCont}>
								<ul style={myUl}>
									<li><input type="button" value="Create new bookstore" style={newPlaylistBtStyle} className="dropdown-button btn truncate" onClick={this._let_me_create_my_new_job} /></li>
								</ul>
							</div>
							<br />
							<br />
							<div style={playlistCreateNewCont}>
								<ul style={myUl}>
									<li><input type="button" value="Share bookstore" style={newPlaylistBtStyle} className="dropdown-button btn" onClick={this._let_me_create_my_new_filter} /></li>
								</ul>
							</div><br />*/}
							<p style={main_fir_v_tmk_chunga_huhhu}>My readings</p>
							<div style={cheej_tu_to_bari_hai_mast_mast_scr_book} className="its_ok_shreya_i_am_alright_ok">
								{
									this.state.myExistedShop.map( (a,b) => {
										return (
											<div key={b} style={forgive_me_please_o_my_love}>
												{/*<ul key={b} style={myUl}>
													<li style={clickableListOnMainPage}><font size={3} color="black" style={mmActFontingCursor} onClick={this._pyar_tune_kya_kiya_clk} >{a}</font></li>
													<li style={nonerLi}><div className="tu_mera_rog_hai" ></div></li>
												</ul>*/}

													<a style={myUniqueFaceSelectStyle_midina} className='dropdown-button btn truncate tooltipped' href='#' data-activates={`dropdown1oo${b}`} data-position="right" data-delay="50" data-tooltip={`Shop - ${a}`}>{a}</a>
													<a className="waves-effect waves-light btn tooltipped" style={cursorStyling_g_icon} data-position="right" data-delay="50" data-tooltip="Click me to delete this playlist"><i className="material-icons">close</i></a>
													<ul id={`dropdown1oo${b}`} style={tears_from_falling} className='dropdown-content'>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Social face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Professional face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Consumer face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Writer face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Dating face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Sinner face</a></li>
														<li className="divider"></li>
													</ul>



											</div>
										)
									} )
								}
							</div>
						</div>
					)
				}
			}









			const abcStylePopup_date={width:"99%",height:"1240px",position:"absolute",zIndex:10,backgroundColor:"transparent"};
			const popupPlaylistDf_date={width:"100%",height:"100%",display:"flex",justifyContent:"center"};
			const actPlaylistQuestPopup_date={width:"400px",height:"400px",border:"1px solid #e6ecf0",marginTop:"150px"};
			const playlistPopupHead_date={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"10px"};
			const playlistPopupBody_date={width:"100%",height:"340px",backgroundColor:"white"};
			const closePlaylistPopupBefore_date={width:"70%",height:"100%",display:"inline",float:"left"};
			const closePlaylistPopupAfter_date={width:"30%",height:"100%",display:"inline",float:"right"};
			const dflexCloseBefore_date={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const dflexCloseAfter_date={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
			const closingPopupFontwa_date={cursor:"pointer"};
			const msgInformationToAddPlaylist_date={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
			const actPlaylistDataStyle_date={width:"100%",height:"40%"};
			const updatePlaylistStyle_date={width:"100%",height:"40px"};
			const createPlaylistButtonDadaji_date={width:"50%",height:"100%",display:"inline",float:"left"};
			const updatePlaylistButtonDadaji_date={width:"50%",height:"100%",display:"inline",float:"right"};
			const createPlaylistButtonDady_date={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
			const updatePlaylistButtonDady_date={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const closingPopupFontwaOf_date={cursor:"pointer"};
			const playlistNameBoxStyle_date={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const playlistCreateBoxPopupStyle_date={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const plNameProvider_date={width:"65%",height:"80%"};
			const flexibleFlexSick_date={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"}
			class CreateDatePopupCopy extends React.Component {
				constructor(props) {
					super(props);
					this.state = {
						newNamePl:""
					};
					this.componentWillMount=this.componentWillMount.bind(this);
					this.componentWillUnmount=this.componentWillUnmount.bind(this);
					this._closing_playlist_popup_bhai=this._closing_playlist_popup_bhai.bind(this);
					this._playlistNewNameChange=this._playlistNewNameChange.bind(this);
					this._mm_ll_clk_new_playlist_merge=this._mm_ll_clk_new_playlist_merge.bind(this);
				}
				_mm_ll_clk_new_playlist_merge(evt){
					evt.preventDefault();
					evt.stopPropagation();
					var that=this;
					let golj=window.__rasoola.allah[1];
				}
				_playlistNewNameChange(evt){
					evt.preventDefault();
					evt.stopPropagation();
				}
				_closing_playlist_popup_bhai(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
				}
				componentWillMount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 0.2,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				componentWillUnmount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 1,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				render(){
					return (
						<div style={abcStylePopup_date}>
							<div style={popupPlaylistDf_date}>
								<div style={actPlaylistQuestPopup_date}>
									<div style={playlistPopupHead_date}>
										<div style={closePlaylistPopupBefore_date}>
											<div style={dflexCloseBefore_date}>
												<font size={4}>New playlist</font>
											</div>
										</div>
										<div style={closePlaylistPopupAfter_date}>
											<div style={dflexCloseAfter_date}>
												<font style={closingPopupFontwa_date} size={5} onClick={this._closing_playlist_popup_bhai}>&#9932;</font>
											</div>
										</div>
									</div>
									<div style={playlistPopupBody_date}>

										<div style={flexibleFlexSick_date}>
											<div style={actPlaylistDataStyle_date}>
												<div style={playlistNameBoxStyle_date}>
													<input type="text" style={plNameProvider_date} placeholder="enter playlist name" value={this.state.newNamePl} onChange={this._playlistNewNameChange} />
												</div>
												<div style={playlistCreateBoxPopupStyle_date}>
													<input ref={(elem)=>{

													}} type="button" value="create" onClick={this._mm_ll_clk_new_playlist_merge} />
												</div>
											</div>
										</div>

									</div>
								</div>
							</div>
						</div>
					)
				}
			}





			const abcStylePopup_date_filter={width:"99%",height:"1240px",position:"absolute",zIndex:10,backgroundColor:"transparent"};
			const popupPlaylistDf_date_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center"};
			const actPlaylistQuestPopup_date_filter={width:"400px",height:"400px",border:"1px solid #e6ecf0",marginTop:"150px"};
			const playlistPopupHead_date_filter={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"10px"};
			const playlistPopupBody_date_filter={width:"100%",height:"340px",backgroundColor:"white"};
			const closePlaylistPopupBefore_date_filter={width:"70%",height:"100%",display:"inline",float:"left"};
			const closePlaylistPopupAfter_date_filter={width:"30%",height:"100%",display:"inline",float:"right"};
			const dflexCloseBefore_date_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const dflexCloseAfter_date_filter={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
			const closingPopupFontwa_date_filter={cursor:"pointer"};
			const msgInformationToAddPlaylist_date_filter={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
			const actPlaylistDataStyle_date_filter={width:"100%",height:"40%"};
			const updatePlaylistStyle_date_filter={width:"100%",height:"40px"};
			const createPlaylistButtonDadaji_date_filter={width:"50%",height:"100%",display:"inline",float:"left"};
			const updatePlaylistButtonDadaji_date_filter={width:"50%",height:"100%",display:"inline",float:"right"};
			const createPlaylistButtonDady_date_filter={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
			const updatePlaylistButtonDady_date_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const closingPopupFontwaOf_date_filter={cursor:"pointer"};
			const playlistNameBoxStyle_date_filter={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const playlistCreateBoxPopupStyle_date_filter={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const plNameProvider_date_filter={width:"65%",height:"80%"};
			const flexibleFlexSick_date_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"}
			class CreateDateFilterPopupCopy extends React.Component {
				constructor(props) {
					super(props);
					this.state = {
						newNamePl:""
					};
					this.componentWillMount=this.componentWillMount.bind(this);
					this.componentWillUnmount=this.componentWillUnmount.bind(this);
					this._closing_playlist_popup_bhai=this._closing_playlist_popup_bhai.bind(this);
					this._playlistNewNameChange=this._playlistNewNameChange.bind(this);
					this._mm_ll_clk_new_playlist_merge=this._mm_ll_clk_new_playlist_merge.bind(this);
				}
				_mm_ll_clk_new_playlist_merge(evt){
					evt.preventDefault();
					evt.stopPropagation();
					var that=this;
					let golj=window.__rasoola.allah[1];
				}
				_playlistNewNameChange(evt){
					evt.preventDefault();
					evt.stopPropagation();
				}
				_closing_playlist_popup_bhai(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
				}
				componentWillMount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 0.2,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				componentWillUnmount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 1,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				render(){
					return (
						<div style={abcStylePopup_date_filter}>
							<div style={popupPlaylistDf_date_filter}>
								<div style={actPlaylistQuestPopup_date_filter}>
									<div style={playlistPopupHead_date_filter}>
										<div style={closePlaylistPopupBefore_date_filter}>
											<div style={dflexCloseBefore_date_filter}>
												<font size={4}>New playlist</font>
											</div>
										</div>
										<div style={closePlaylistPopupAfter_date_filter}>
											<div style={dflexCloseAfter_date_filter}>
												<font style={closingPopupFontwa_date_filter} size={5} onClick={this._closing_playlist_popup_bhai}>&#9932;</font>
											</div>
										</div>
									</div>
									<div style={playlistPopupBody_date_filter}>

										<div style={flexibleFlexSick_date_filter}>
											<div style={actPlaylistDataStyle_date_filter}>
												<div style={playlistNameBoxStyle_date_filter}>
													<input type="text" style={plNameProvider_date_filter} placeholder="enter playlist name" value={this.state.newNamePl} onChange={this._playlistNewNameChange} />
												</div>
												<div style={playlistCreateBoxPopupStyle_date_filter}>
													<input ref={(elem)=>{

													}} type="button" value="create" onClick={this._mm_ll_clk_new_playlist_merge} />
												</div>
											</div>
										</div>

									</div>
								</div>
							</div>
						</div>
					)
				}
			}


			const enableBackgroundMDateRect={enableBackground:"new 0 0 50 50"};
			class SpinnerRectType extends React.Component {
							constructor(props){
								super(props);
								this.state = {
								};
							}
							render(){
								return (
									<div className="loader loader--style5" title="4">
											<svg version="1.1" id="Layer_1" xmlns="https://www.w3.org/2000/svg" xmlnsXlink="https://www.w3.org/1999/xlink" x="0px" y="0px"
				width="24px" height="30px" viewBox="0 0 24 30" style={enableBackgroundMDateRect} xmlSpace="preserve">
					<rect x="0" y="0" width="4" height="20" fill="#333">
						<animateTransform attributeType="xml"
							attributeName="transform" type="translate"
							values="0 0; 0 20; 0 0"
							begin="0" dur="0.6s" repeatCount="indefinite" />
					</rect>
					<rect x="10" y="0" width="4" height="10" fill="#333">
						<animateTransform attributeType="xml"
							attributeName="transform" type="translate"
							values="0 0; 0 20; 0 0"
							begin="0.2s" dur="0.6s" repeatCount="indefinite" />
					</rect>
					<rect x="20" y="0" width="4" height="20" fill="#333">
						<animateTransform attributeType="xml"
							attributeName="transform" type="translate"
							values="0 0; 0 20; 0 0"
							begin="0.4s" dur="0.6s" repeatCount="indefinite" />
					</rect>
				</svg>
			</div>
								)
							}
						}





			// Request dating directly with the linkedface one to one





			const hoth_rasile_tere_hoth_rasile_date_r=Object.freeze({width:"99%",height:"1240px",position:"absolute",zIndex:"15",backgroundColor:"transparent"});
			const proper_patola_u_r_pratibha_date_r=Object.freeze({width:"100%",height:"100%"});
			const _bato_me_phul_dhalte_hai_pratibha_date_r=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"});
			const wada_wada_hai_sath_na_chhutiya_be_date_r=Object.freeze({width:"70%",height:"90%",display:"block"});
			const tujhse_muhabbat_ho_gayi_allah_maaf_kare_job_date_r=Object.freeze({width:"100%",height:"100%"});
			const _job_crate_option_head_view_date_r=Object.freeze({width:"100%",height:"5%",backgroundColor:"white"});
			const _job_crate_option_body_view_date_r=Object.freeze({width:"100%",height:"90%",overflowY:"scroll",backgroundColor:"white"});
			const tu_la_laka_belari_job_date_r=Object.freeze({width:"100%",height:"100%"});
			const tera_sarafa_aisa_hai_hamdam_job_1_date_r=Object.freeze({width:"35%",height:"100%",display:"inline",float:"left"});
			const tera_sarafa_aisa_hai_hamdam_job_2_date_r=Object.freeze({width:"65%",height:"100%",display:"inline",float:"right"});
			const _head_job_create_d_flex_cont_date_r=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"});
			const _head_job_create_d_flex_cont_unique_date_r=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"});
			const head_style_job_create_closable_not_1_date_r=Object.freeze({width:"90%",height:"100%",display:"inline",float:"left"});
			const head_style_job_create_closable_not_2_date_r=Object.freeze({width:"10%",height:"100%",display:"inline",float:"right"});
			const adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_date_r=Object.freeze({width:"100%",height:"100%"});
			const _job_title_container_job_create_me_pratibha_date_r=Object.freeze({width:"100%",height:"40px"});
			const _job_type_container_job_create_me_pratibha_date_r=Object.freeze({width:"100%",height:"40px"});
			const _wrap_job_input_data_d_flex_pratibha_date_r=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"flex-start",alignItems:"center"});
			const job_title_input_act_style_date_r=Object.freeze({width:"70%",height:"30px"});
			const _hey_u_thank_you_for_all_this_date_r=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"flex-start"});
			const teri_ummeed_tera_intezar_karte_hai_date_r=Object.freeze({width:"500px"});
			const target_dater_find_input_date_r=Object.freeze({width:"100%",height:"35px"});
			const target_dater_find_message_to_target_date_r=Object.freeze({width:"100%",height:"120px"});
			const target_dater_find_input_dflex_date_r=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"flex-start",alignItems:"center",cursor:"pointer"});
			const tu_meri_jindagi_hai_tu_meri_har_khusi_hai_date_date_r=Object.freeze({width:"90%",height:"25px"});
			const main_tujhe_bhul_nahi_paunga_date_date_r=Object.freeze({width:"100%"});
			const main_tujhe_bhul_nahi_paunga_date_r_2_date_r=Object.freeze({width:"100%"});
			const indi_suggest_date_r_2_date_r=Object.freeze({width:"100%",height:"35px"});
			const _act_text_area_style_main_act_date_r=Object.freeze({width:"90%",height:"100px"});
			const text_align_req_dating_bt_date_r=Object.freeze({textAlign:"center"});
			const _act_text_area_style_main_act_my_date_r=Object.freeze({width:"90%"});
			const i_will_always_love_you_my_life=Object.freeze({width:"30px",height:"30px",verticalAlign:"center"})
			const target_dater_find_input_dflex_centi_ment_me_date_r=Object.freeze({width:"90%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"});
			const _date_warga_me_pratibha_style_spin_box=Object.freeze({width:"100%"});
			const _date_warga_me_pratibha_style_spin_box_d_flx=Object.freeze({width:"100%",display:"flex",justifyContent:"center"});
			const _transparantable_mitron_shaba_shaba=Object.freeze({width:"100%",height:"10px",backgroundColor:"transparent"})
			class CreateMyDateRequestPratibha extends React.Component {
				constructor(props){
					super(props);
					this.state = {
						headMessage:"Hi there welcome to the request dating area",
						suggestBox:[],
						datingSelected:[],
						targetFaceText:"",
						emotionalMessage:"",
						suggestSpin:false,
						firstCallHappened:false
					};
					this._i_love_you_pratibha_a_lot=this._i_love_you_pratibha_a_lot.bind(this);
					this._mm_let_me_change_my_target_face_text=this._mm_let_me_change_my_target_face_text.bind(this);
					this._change_my_emotional_text=this._change_my_emotional_text.bind(this);
					this.componentWillMount=this.componentWillMount.bind(this);
					this.componentWillUnmount=this.componentWillUnmount.bind(this);
					this.componentDidMount=this.componentDidMount.bind(this);
					this._tere_bajo_main_hun_ki_kara_o_yara=this._tere_bajo_main_hun_ki_kara_o_yara.bind(this);
					this._request_my_date_pratibha=this._request_my_date_pratibha.bind(this);
				}
				_request_my_date_pratibha(evt){
					evt.preventDefault();
					evt.stopPropagation();
					let targetFace=this.state.datingSelected;
					let emotionalText=this.state.emotionalMessage;
					let mmMee=window.__rasoola.allah[1];
					let pKey=window.__rasoola.allah[4];
					console.log(targetFace);
					console.log(emotionalText);
					let dataDendable=JSON.stringify({Me:mmMee,Target:targetFace[0][1],EmotionalMessage:emotionalText,Pkey:pKey});
					console.log(dataDendable);
					$.ajax({
						url:`sendMyDateRequestPratibhaPlease?data=${dataDendable}`,
						type:"GET",
						contentType:"json",
						async:true
					}).done((data)=>{
						//console.log(data);
						Materialize.toast('Yippi your date request has been submitted successfully we will notify you once they will approve your request. !! Happy Dating !!', 4000)
						ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
					}).fail((jqXHR,statusText)=>{
						console.log(statusText);
					})
				}
				_tere_bajo_main_hun_ki_kara_o_yara(evt){
					evt.preventDefault();
					evt.stopPropagation();
					let tarVal=JSON.parse(evt.currentTarget.lastChild.value);
					let arrMyMain=[];
					arrMyMain.push(tarVal);
					this.setState({
						datingSelected:arrMyMain
					})
				}
				componentDidMount(){
					var that=this;
					var inp=this.refs._my_date_request_ref_pratibha;
					let mainBahutTanhaHunYaar=window.__rasoola.allah[1];
					let pKey=window.__rasoola.allah[4];
					const source = Rx.Observable.fromEvent(inp, 'input');
					const sour1=source.debounceTime(500).map(evt=>evt.target.value);
					const subscribe = sour1.subscribe((val) => {
					console.log("vallll facccceeeeessssss");
					console.log(val);
					if (val!="") {
						Rx.Observable.ajax({ url: `/getMyCommonActionFacePratibha/${mainBahutTanhaHunYaar}/${pKey}/${val}`, responseType: 'json',method:'GET'}).map(data=>data.response.All)
	  				.subscribe(
		    			function (data) {
		      			console.log(data);
								that.setState({
									suggestBox:data,
									suggestSpin:false,
									firstCallHappened:true
								});
		    			},
			    		function (error) {
				      		console.log(error);
			    			}
			  			);

					}else {
						that.setState({
							firstCallHappened:false
						})
					}
					});
				}
				_change_my_emotional_text(evt){
					evt.preventDefault();
					evt.stopPropagation();
					this.setState({
							emotionalMessage:evt.target.value
						});
				}
				_mm_let_me_change_my_target_face_text(evt){
					evt.preventDefault();
					evt.stopPropagation();
					this.setState({
							targetFaceText:evt.target.value,
							suggestSpin:true
						});
				}
				_i_love_you_pratibha_a_lot(evt){
					evt.preventDefault();
					evt.stopPropagation();
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'));
				}
				componentWillMount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 0.2,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				componentWillUnmount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 1,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				render(){
					return (
						<div style={hoth_rasile_tere_hoth_rasile_date_r}>
							<div style={proper_patola_u_r_pratibha_date_r}>
								<div style={_bato_me_phul_dhalte_hai_pratibha_date_r}>
									<div style={wada_wada_hai_sath_na_chhutiya_be_date_r}>
										<div style={tujhse_muhabbat_ho_gayi_allah_maaf_kare_job_date_r}>
											<div style={_job_crate_option_head_view_date_r}>
												<div style={head_style_job_create_closable_not_1_date_r}>
													<div style={adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_date_r}>
														<div style={_head_job_create_d_flex_cont_unique_date_r}>
															<p className="large_font_pratibha truncate">
																{
																	this.state.headMessage
																}
															</p>
														</div>
													</div>
												</div>
												<div style={head_style_job_create_closable_not_2_date_r}>
													<div style={adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_date_r}>
														<div style={_head_job_create_d_flex_cont_date_r}>
															<i className="small material-icons _design_my_cursor_pratibha" onClick={this._i_love_you_pratibha_a_lot}>close</i>
														</div>
													</div>
												</div>
											</div>
											<div style={_transparantable_mitron_shaba_shaba}>
											</div>
											<div style={_job_crate_option_body_view_date_r}>
												<div style={tu_la_laka_belari_job_date_r}>
													<div style={_hey_u_thank_you_for_all_this_date_r}>
														<div style={teri_ummeed_tera_intezar_karte_hai_date_r}>
															<br />
															<br />
															<div style={target_dater_find_input_date_r}>
																<div style={target_dater_find_input_dflex_date_r}>
																	<input className="_sorry_pratibha_am_really_sorry_forgive_me" type="text" placeholder="Type name to request dating" style={tu_meri_jindagi_hai_tu_meri_har_khusi_hai_date_date_r} value={this.state.targetFaceText} onChange={this._mm_let_me_change_my_target_face_text} ref="_my_date_request_ref_pratibha" />
																</div>
															</div>
															<div id="_har_jakhm_dil_ka_tujhe_dil_se_dua_de_dating" style={main_tujhe_bhul_nahi_paunga_date_date_r}>
																{
																	(this.state.suggestSpin==true)?(
																		<div style={_date_warga_me_pratibha_style_spin_box}>
																			<div style={_date_warga_me_pratibha_style_spin_box_d_flx}>
																				<SpinnerRectType />
																			</div>
																		</div>
																	):(
																		(this.state.suggestBox.length==0)?(
																			(this.state.firstCallHappened)?(
																				<p>Ooops !! there is no face present with letter " {this.state.targetFaceText} " in your linked face .</p>
																			):false
																		):(
																			this.state.suggestBox.map( (a,b)=>{
																				return (
																					<div style={indi_suggest_date_r_2_date_r} key={b}>
																						<div style={target_dater_find_input_dflex_date_r} onClick={this._tere_bajo_main_hun_ki_kara_o_yara}>
																							<img style={i_will_always_love_you_my_life} src={a[2]} /><font size="large">{a[0]}</font>
																							<input type="hidden" value={JSON.stringify(a)} />
																						</div>
																					</div>
																				)
																			} )
																		)
																	)
																}
															</div>
															{
																(this.state.datingSelected.length>0)?(
																	<p>Selected face for dating</p>
																):false
															}
															<div style={main_tujhe_bhul_nahi_paunga_date_r_2_date_r}>
																{
																	this.state.datingSelected.map( (a,b)=>{
																		return (
																			<div style={indi_suggest_date_r_2_date_r} key={b}>
																				<div style={target_dater_find_input_dflex_date_r}>
																					<img style={i_will_always_love_you_my_life} src={a[2]} /><font size="large">{a[0]}</font>
																					<input type="hidden" value={JSON.stringify(a)} />
																				</div>
																			</div>
																		)
																	} )
																}
															</div>
															<textarea className="materialize-textarea _sorry_pratibha_am_really_sorry_forgive_me" placeholder="Please write some message so that they can understand you before taking any decision about you" value={this.state.emotionalMessage} onChange={this._change_my_emotional_text} style={_act_text_area_style_main_act_my_date_r}></textarea>
															<div style={target_dater_find_input_date_r}>
																<div style={target_dater_find_input_dflex_centi_ment_me_date_r}>
																	<a className="waves-effect waves-light btn white black-text capital_capital_hoho" onClick={this._request_my_date_pratibha}>Request Dating</a>
																</div>
															</div>
														</div>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					)
				}
			}
			//ReactDOM.render(<CreateMyDateRequestPratibha />,document.getElementById('_js_root_animation'));






			// End request dating directly one to one



			// Check loyality of any people with whom yoy want to date







			const hoth_rasile_tere_hoth_rasile_my_loyality=Object.freeze({width:"99%",height:"1240px",position:"absolute",zIndex:"15",backgroundColor:"transparent"});
			const proper_patola_u_r_pratibha_my_loyality=Object.freeze({width:"100%",height:"100%"});
			const _bato_me_phul_dhalte_hai_pratibha_my_loyality=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"});
			const wada_wada_hai_sath_na_chhutiya_be_my_loyality=Object.freeze({width:"70%",height:"90%",display:"block"});
			const tujhse_muhabbat_ho_gayi_allah_maaf_kare_job_my_loyality=Object.freeze({width:"100%",height:"100%"});
			const _job_crate_option_head_view_my_loyality=Object.freeze({width:"100%",height:"5%",backgroundColor:"white"});
			const _job_crate_option_body_view_my_loyality=Object.freeze({width:"100%",height:"90%",backgroundColor:"white"});
			const tu_la_laka_belari_job_my_loyality=Object.freeze({width:"100%",height:"100%"});
			const tera_sarafa_aisa_hai_hamdam_job_1_my_loyality=Object.freeze({width:"35%",height:"100%",display:"inline",float:"left"});
			const tera_sarafa_aisa_hai_hamdam_job_2_my_loyality=Object.freeze({width:"65%",height:"100%",display:"inline",float:"right"});
			const _head_job_create_d_flex_cont_my_loyality=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"});
			const _head_job_create_d_flex_cont_unique_my_loyality=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"});
			const head_style_job_create_closable_not_1_my_loyality=Object.freeze({width:"90%",height:"100%",display:"inline",float:"left"});
			const head_style_job_create_closable_not_2_my_loyality=Object.freeze({width:"10%",height:"100%",display:"inline",float:"right"});
			const adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_my_loyality=Object.freeze({width:"100%",height:"100%"});
			const _job_title_container_job_create_me_pratibha_my_loyality=Object.freeze({width:"100%",height:"40px"});
			const _job_type_container_job_create_me_pratibha_my_loyality=Object.freeze({width:"100%",height:"40px"});
			const _wrap_job_input_data_d_flex_pratibha_my_loyality=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"flex-start",alignItems:"center"});
			const job_title_input_act_style_my_loyality=Object.freeze({width:"70%",height:"30px"});
			const _hey_u_thank_you_for_all_this_my_loyality=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"flex-start"});
			const teri_ummeed_tera_intezar_karte_hai_my_loyality=Object.freeze({width:"500px"});
			const target_dater_find_input_my_loyality=Object.freeze({width:"100%",height:"35px"});
			const target_dater_find_message_to_target_my_loyality=Object.freeze({width:"100%",height:"120px"});
			const target_dater_find_input_dflex_my_loyality=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"flex-start",alignItems:"center"});
			const tu_meri_jindagi_hai_tu_meri_har_khusi_hai_date_my_loyality=Object.freeze({width:"90%",height:"25px"});
			const main_tujhe_bhul_nahi_paunga_date_my_loyality=Object.freeze({width:"100%"});
			const main_tujhe_bhul_nahi_paunga_date_r_2_my_loyality=Object.freeze({width:"100%"});
			const indi_suggest_date_r_2_my_loyality=Object.freeze({width:"100%",height:"35px"});
			const _act_text_area_style_main_act_my_loyality=Object.freeze({width:"90%"});
			const text_align_req_dating_bt_my_loyality=Object.freeze({textAlign:"center"});
			const target_dater_find_input_dflex_centi_ment_me_my_loyality=Object.freeze({width:"90%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"});
			const _oye_raju_pyaar_na_kariyo_betichod=Object.freeze({width:"100%",height:"10px",backgroundColor:"transparent"});
			class PleaseCheckMyLoyalityPratibha extends React.Component {
				constructor(props){
					super(props);
					this.state = {
						headMessage:"Hi there welcome to the loyality checking area",
						datingSelected:[],
						targetFaceText:"",
						targetFaceTextLoyal:"",
						emotionalMessage:"",
						datingSelectedTarget:[],
						suggestSpin:false,
						firstCallHappened:false,
						suggestBox:[],
						suggestSpinLoyal:false,
						firstCallHappenedLoyal:false,
						suggestBoxLoyal:[]
					};
					this._i_love_you_pratibha_a_lot_my_loyality=this._i_love_you_pratibha_a_lot_my_loyality.bind(this);
					this._mm_let_me_change_my_target_face_text=this._mm_let_me_change_my_target_face_text.bind(this);
					this._change_my_emotional_text=this._change_my_emotional_text.bind(this);
					this.componentWillMount=this.componentWillMount.bind(this);
					this.componentWillUnmount=this.componentWillUnmount.bind(this);
					this.componentDidMount=this.componentDidMount.bind(this);
					this._tere_bajo_main_hun_ki_kara_o_yara=this._tere_bajo_main_hun_ki_kara_o_yara.bind(this);
					this._tampRemoveMemberFromTamp=this._tampRemoveMemberFromTamp.bind(this);
					this._publish_my_shop_ajay=this._publish_my_shop_ajay.bind(this);
					this._mm_let_me_change_my_target_face_text_loyal=this._mm_let_me_change_my_target_face_text_loyal.bind(this);
					this._tere_bajo_main_hun_ki_kara_o_yara_loyal=this._tere_bajo_main_hun_ki_kara_o_yara_loyal.bind(this);
				}
				_publish_my_shop_ajay(evt){
					evt.preventDefault();
					evt.stopPropagation();
					let jsDant=JSON.stringify({Me:window.__rasoola.allah[1],Pkey:window.__rasoola.allah[4],Target:this.state.datingSelectedTarget,Mentor:this.state.datingSelected,EmotionalMessage:this.state.emotionalMessage});
					console.log("dddddaaaaaaaaaaaaaannnnnnnnnnnnnnnnttttttttttttttt");
					//console.log(jsDant);

					$.ajax({
						url:`submitMyLoyalityFormPratibhaPlsInDatingZone?data=${jsDant}`,
						type:"GET",
						contentType:"json",
						async:true
					}).done((data)=>{
						console.log(data);
						Materialize.toast('Hi there your loyality check form has been submitted successfully and will let you know for further updates', 4000)
						ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
					}).fail((jqXHR,statusText)=>{
						console.log(statusText);
					})
				}
				_tampRemoveMemberFromTamp(evt){
					evt.preventDefault();
					evt.stopPropagation();
					console.log(evt.target);
					console.log(evt.currentTarget);
					var that=this;
					let tarVal=JSON.parse(evt.currentTarget.parentElement.lastChild.value);
					let arrMyMain=window.__chhota_chetan_temp!=undefined?window.__chhota_chetan_temp:[];
					//arrMyMain.push(tarVal);
					let stTamp=new Set(arrMyMain);
					let TampBacker=Array.from(stTamp)
					let indable=0;
					for (var i = 0; i < TampBacker.length; i++) {
						if (TampBacker[i][1]==tarVal[1]) {
							indable=i;
						}
					}
					console.log(indable);
					TampBacker.splice(indable,1)
					that.setState({
						datingSelected:TampBacker
					})
					window.__chhota_chetan_temp=TampBacker;
				}
				_tere_bajo_main_hun_ki_kara_o_yara_loyal(evt){
					evt.preventDefault();
					evt.stopPropagation();
					var that=this;
					console.log(evt.target);
					console.log(evt.currentTarget);
					let tarVal=JSON.parse(evt.currentTarget.parentElement.lastChild.value);
					let arrMyMain=window.__chhota_chetan_temp!=undefined?window.__chhota_chetan_temp:[];
					//let arrAllerTamp=[];
					let indable=[]
					for (let x in arrMyMain) {
						if (arrMyMain[x][1]==tarVal[1]) {
							indable.push(x)
						}
					}
					indable.map( (l,m) => {
						arrMyMain.splice(m,1)
					} )
					let StWalaArr=new Set();
					arrMyMain.map( (a,b) => {
						if (!StWalaArr.has(a)) {
							StWalaArr.add(a)
						}
					} )
					if (!StWalaArr.has(tarVal)) {
						StWalaArr.add(tarVal)
					}
					//let TapperMan=Array.from(StWalaArr)
					//TapperMan.push(tarVal);
					//let stTamp=new Set(TapperMan);
					let TampBacker=Array.from(StWalaArr)
					window.__chhota_chetan_temp=TampBacker;
					that.setState({
						datingSelected:TampBacker
					})

				}
				_tere_bajo_main_hun_ki_kara_o_yara(evt){
					evt.preventDefault();
					evt.stopPropagation();
					let tarVal=JSON.parse(evt.currentTarget.lastChild.value);
					let arrMyMain=[];
					arrMyMain.push(tarVal);
					this.setState({
						datingSelectedTarget:arrMyMain
					})
				}
				componentDidMount(){
					var that=this;
					var inp=this.refs._my_date_request_ref_pratibha;
					let mainBahutTanhaHunYaar=window.__rasoola.allah[1];
					let pKey=window.__rasoola.allah[4];
					const source = Rx.Observable.fromEvent(inp, 'input');
					const sour1=source.debounceTime(500).map(evt=>evt.target.value);
					const subscribe = sour1.subscribe((val) => {
					console.log("vallll facccceeeeessssss");
					console.log(val);
					if (val!="") {
						Rx.Observable.ajax({ url: `/getMyCommonActionFacePratibha/${mainBahutTanhaHunYaar}/${pKey}/${val}`, responseType: 'json',method:'GET'}).map(data=>data.response.All)
	  				.subscribe(
		    			function (data) {
		      			console.log(data);
								that.setState({
									suggestBox:data,
									suggestSpin:false,
									firstCallHappened:true
								});
		    			},
			    		function (error) {
				      		console.log(error);
			    			}
			  			);

					}else {
						that.setState({
							firstCallHappened:false
						})
					}
					});



					var inpK=this.refs._my_date_request_ref_pratibha_mentor;
					const sourceLL = Rx.Observable.fromEvent(inpK, 'input');
					const sourPPPkk=sourceLL.debounceTime(500).map(evt=>evt.target.value);
					const subscribeLLL = sourPPPkk.subscribe((val) => {
					console.log("vallll facccceeeeessssss");
					console.log(val);
					if (val!="") {
						Rx.Observable.ajax({ url: `/getMyCommonActionFacePratibha/${mainBahutTanhaHunYaar}/${pKey}/${val}`, responseType: 'json',method:'GET'}).map(data=>data.response.All)
	  				.subscribe(
		    			function (data) {
		      			console.log(data);
								that.setState({
									suggestBoxLoyal:data,
									suggestSpinLoyal:false,
									firstCallHappenedLoyal:true
								});
		    			},
			    		function (error) {
				      		console.log(error);
			    			}
			  			);

					}else {
						that.setState({
							firstCallHappened:false
						})
					}
					});

				}
				_change_my_emotional_text(evt){
					evt.preventDefault();
					evt.stopPropagation();
					this.setState({
							emotionalMessage:evt.target.value
						});
				}
				_mm_let_me_change_my_target_face_text(evt){
					evt.preventDefault();
					evt.stopPropagation();
					this.setState({
							targetFaceText:evt.target.value,
							suggestSpin:true,
							targetFaceTextLoyal:"",
							suggestBoxLoyal:[],
							firstCallHappenedLoyal:false
						});
				}
				_mm_let_me_change_my_target_face_text_loyal(evt){
					evt.preventDefault();
					evt.stopPropagation();
					this.setState({
							targetFaceTextLoyal:evt.target.value,
							suggestSpinLoyal:true,
							targetFaceText:"",
							suggestBox:[],
							firstCallHappened:false,
						});
						window.__chhota_chetan_temp=undefined;
				}
				_i_love_you_pratibha_a_lot_my_loyality(evt){
					evt.preventDefault();
					evt.stopPropagation();
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'));
				}
				componentWillMount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 0.2,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				componentWillUnmount(){
					window.__chhota_chetan_temp=undefined;
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 1,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				render(){
					return (
						<div style={hoth_rasile_tere_hoth_rasile_my_loyality}>
							<div style={proper_patola_u_r_pratibha_my_loyality}>
								<div style={_bato_me_phul_dhalte_hai_pratibha_my_loyality}>
									<div style={wada_wada_hai_sath_na_chhutiya_be_my_loyality}>
										<div style={tujhse_muhabbat_ho_gayi_allah_maaf_kare_job_my_loyality}>
											<div style={_job_crate_option_head_view_my_loyality}>
												<div style={head_style_job_create_closable_not_1_my_loyality}>
													<div style={adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_my_loyality}>
														<div style={_head_job_create_d_flex_cont_unique_my_loyality}>
															<p className="large_font_pratibha truncate">
																{
																	this.state.headMessage
																}
															</p>
														</div>
													</div>
												</div>
												<div style={head_style_job_create_closable_not_2_my_loyality}>
													<div style={adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_my_loyality}>
														<div style={_head_job_create_d_flex_cont_my_loyality}>
															<i className="small material-icons _design_my_cursor_pratibha" onClick={this._i_love_you_pratibha_a_lot_my_loyality}>close</i>
														</div>
													</div>
												</div>
											</div>
											<div style={_oye_raju_pyaar_na_kariyo_betichod}>
											</div>
											<div style={_job_crate_option_body_view_my_loyality}>
												<div style={tu_la_laka_belari_job_my_loyality}>
													<div style={_hey_u_thank_you_for_all_this_my_loyality}>
														<div style={teri_ummeed_tera_intezar_karte_hai_my_loyality}>
															<br />
															<br />
															<div style={target_dater_find_input_my_loyality}>
																<div style={target_dater_find_input_dflex_my_loyality}>
																	<input className="_sorry_pratibha_am_really_sorry_forgive_me" type="text" placeholder="Type name of the target face" style={tu_meri_jindagi_hai_tu_meri_har_khusi_hai_date_my_loyality} value={this.state.targetFaceText} onChange={this._mm_let_me_change_my_target_face_text} ref="_my_date_request_ref_pratibha" />
																</div>
															</div>
															<div id="_har_jakhm_dil_ka_tujhe_dil_se_dua_de_dating_loyality" style={main_tujhe_bhul_nahi_paunga_date_my_loyality}>
															{
																(this.state.suggestSpin==true)?(
																	<div style={_date_warga_me_pratibha_style_spin_box}>
																		<div style={_date_warga_me_pratibha_style_spin_box_d_flx}>
																			<SpinnerRectType />
																		</div>
																	</div>
																):(
																	(this.state.suggestBox.length==0)?(
																		(this.state.firstCallHappened)?(
																			<p>Ooops !! there is no face present with letter " {this.state.targetFaceText} " in your linked face .</p>
																		):false
																	):(
																		this.state.suggestBox.map( (a,b)=>{
																			return (
																				<div style={indi_suggest_date_r_2_date_r} key={b}>
																					<div style={target_dater_find_input_dflex_date_r} onClick={this._tere_bajo_main_hun_ki_kara_o_yara}>
																						<img style={i_will_always_love_you_my_life} src={a[2]} /><font size="large">{a[0]}</font>
																						<input type="hidden" value={JSON.stringify(a)} />
																					</div>
																				</div>
																			)
																		} )
																	)
																)
															}
															</div>

															{
																(this.state.datingSelectedTarget.length>0)?(
																	<p>Selected face for loyality checking</p>
																):false
															}
															<div style={main_tujhe_bhul_nahi_paunga_date_r_2_my_loyality}>
																{
																	this.state.datingSelectedTarget.map( (a,b)=>{
																		return (
																			<div style={indi_suggest_date_r_2_my_loyality} key={b}>
																				<div style={target_dater_find_input_dflex_my_loyality}>
																					{
																						a[0]
																					}
																				</div>
																			</div>
																		)
																	} )
																}
															</div>
															<br />
															<div style={target_dater_find_input_my_loyality}>
																<div style={target_dater_find_input_dflex_my_loyality}>
																	<input className="_sorry_pratibha_am_really_sorry_forgive_me" type="text" placeholder="Type mentor's name to request loyality check" style={tu_meri_jindagi_hai_tu_meri_har_khusi_hai_date_my_loyality} value={this.state.targetFaceTextLoyal} onChange={this._mm_let_me_change_my_target_face_text_loyal} ref="_my_date_request_ref_pratibha_mentor" />
																</div>
															</div>
															<div id="_har_jakhm_dil_ka_tujhe_dil_se_dua_de_dating" style={main_tujhe_bhul_nahi_paunga_date_my_loyality}>
															{
																(this.state.suggestSpinLoyal==true)?(
																	<div style={_date_warga_me_pratibha_style_spin_box}>
																		<div style={_date_warga_me_pratibha_style_spin_box_d_flx}>
																			<SpinnerRectType />
																		</div>
																	</div>
																):(
																	(this.state.suggestBoxLoyal.length==0)?(
																		(this.state.firstCallHappenedLoyal)?(
																			<p>Ooops !! there is no face present with letter " {this.state.targetFaceTextLoyal} " in your linked face .</p>
																		):false
																	):(
																		this.state.suggestBoxLoyal.map( (a,b)=>{
																			return (
																				<div style={indi_suggest_date_r_2_date_r} key={b}>
																					<div style={target_dater_find_input_dflex_date_r} >
																						<a className="waves-effect waves-light btn white black-text" ><img style={i_will_always_love_you_my_life} src={a[2]} /></a><a className="waves-effect waves-light btn white black-text" onClick={this._tere_bajo_main_hun_ki_kara_o_yara_loyal}><font size="large" >{a[0]}</font></a>
																						<a className="waves-effect waves-light btn white black-text" onClick={this._tampRemoveMemberFromTamp}><i className="material-icons left">close</i></a>
																						<input type="hidden" value={JSON.stringify(a)} />
																					</div>
																				</div>
																			)
																		} )
																	)
																)
															}
															</div>
															{
																(this.state.datingSelected.length>0)?(
																	<p>Selected mentors face for loyality checking</p>
																):false
															}
															<div style={main_tujhe_bhul_nahi_paunga_date_r_2_my_loyality}>
																{
																	this.state.datingSelected.map( (a,b)=>{
																		return (
																			<div style={indi_suggest_date_r_2_my_loyality} key={b}>
																				<div style={target_dater_find_input_dflex_my_loyality}>
																					{
																						a[0]
																					}
																				</div>
																			</div>
																		)
																	} )
																}
															</div>
															<textarea className="materialize-textarea _sorry_pratibha_am_really_sorry_forgive_me" placeholder="Please write some message to your mentor so that they can know that why you want to check loyality of anyone" value={this.state.emotionalMessage} onChange={this._change_my_emotional_text} style={_act_text_area_style_main_act_my_loyality}></textarea>
															<div style={target_dater_find_input_my_loyality}>
																<div style={target_dater_find_input_dflex_centi_ment_me_my_loyality}>
																	<a className="waves-effect waves-light btn white black-text capital_capital_hoho" onClick={this._publish_my_shop_ajay}>Check Loyality</a>
																</div>
															</div>
														</div>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					)
				}
			}
			//ReactDOM.render(<PleaseCheckMyLoyalityPratibha />,document.getElementById('_js_root_animation'));







			// End check loyality with the people whom you want to date





			const cheej_tu_to_bari_hai_mast_mast_scr_date={width:"100%",height:"480px",overflowY:"scroll"};
			const cheej_tu_to_bari_hai_mast_mast_date={width:"100%"}
			class CreateYourOwnDatestoreOverTheLnkedFace extends React.Component {
				constructor(props) {
					super(props);
					this.state = {
						myExistedShop:["hello","ajay"]
					}
					this._let_me_create_my_new_date=this._let_me_create_my_new_date.bind(this);
					this._let_me_create_my_new_filter=this._let_me_create_my_new_filter.bind(this);
				}
				_let_me_create_my_new_date(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
					//ReactDOM.render(<CreateDatePopupCopy />,document.getElementById('_js_root_animation'));
					ReactDOM.render(<CreateMyDateRequestPratibha />,document.getElementById('_js_root_animation'));

				}
				_let_me_create_my_new_filter(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
					//ReactDOM.render(<CreateDateFilterPopupCopy />,document.getElementById('_js_root_animation'));
					ReactDOM.render(<PleaseCheckMyLoyalityPratibha />,document.getElementById('_js_root_animation'));
				}
				render(){
					return (
						<div style={cheej_tu_to_bari_hai_mast_mast_date}>
							<div style={playlistCreateNewCont}>
								<ul style={myUl}>
									<li><input type="button" value="Request dating" style={newPlaylistBtStyle} className="btn truncate" onClick={this._let_me_create_my_new_date} /></li>
								</ul>
							</div>
							<br />
							<br />
							<div style={playlistCreateNewCont}>
								<ul style={myUl}>
									<li><input type="button" value="Check loyality" style={newPlaylistBtStyle} className="btn truncate" onClick={this._let_me_create_my_new_filter} /></li>
								</ul>
							</div>
							<br />
							<p style={main_fir_v_tmk_chunga_huhhu} className="truncate">My datings</p>
							<div style={cheej_tu_to_bari_hai_mast_mast_scr_date} className="its_ok_shreya_i_am_alright_ok">
								{
									this.state.myExistedShop.map( (a,b) => {
										return (
											<div key={b} style={forgive_me_please_o_my_love}>
												{/*<ul key={b} style={myUl}>
													<li style={clickableListOnMainPage}><font size={3} color="black" style={mmActFontingCursor} onClick={this._pyar_tune_kya_kiya_clk} >{a}</font></li>
													<li style={nonerLi}><div className="tu_mera_rog_hai" ></div></li>
												</ul>*/}

													<a style={myUniqueFaceSelectStyle_midina} className='dropdown-button btn truncate tooltipped' href='#' data-activates={`dropdown1oopp${b}`} data-position="right" data-delay="50" data-tooltip={`Shop - ${a}`}>{a}</a>
													<a className="waves-effect waves-light btn tooltipped" style={cursorStyling_g_icon} data-position="right" data-delay="50" data-tooltip="Click me to delete this playlist"><i className="material-icons">close</i></a>
													<ul id={`dropdown1oopp${b}`} style={tears_from_falling} className='dropdown-content'>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Social face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Professional face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Consumer face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Writer face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Dating face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Sinner face</a></li>
														<li className="divider"></li>
													</ul>



											</div>
										)
									} )
								}
							</div>
						</div>
					)
				}
			}









			const abcStylePopup_donate={width:"99%",height:"1240px",position:"absolute",zIndex:10,backgroundColor:"transparent"};
			const popupPlaylistDf_donate={width:"100%",height:"100%",display:"flex",justifyContent:"center"};
			const actPlaylistQuestPopup_donate={width:"400px",height:"400px",border:"1px solid #e6ecf0",marginTop:"150px"};
			const playlistPopupHead_donate={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"10px"};
			const playlistPopupBody_donate={width:"100%",height:"340px",backgroundColor:"white"};
			const closePlaylistPopupBefore_donate={width:"70%",height:"100%",display:"inline",float:"left"};
			const closePlaylistPopupAfter_donate={width:"30%",height:"100%",display:"inline",float:"right"};
			const dflexCloseBefore_donate={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const dflexCloseAfter_donate={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
			const closingPopupFontwa_donate={cursor:"pointer"};
			const msgInformationToAddPlaylist_donate={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
			const actPlaylistDataStyle_donate={width:"100%",height:"40%"};
			const updatePlaylistStyle_donate={width:"100%",height:"40px"};
			const createPlaylistButtonDadaji_donate={width:"50%",height:"100%",display:"inline",float:"left"};
			const updatePlaylistButtonDadaji_donate={width:"50%",height:"100%",display:"inline",float:"right"};
			const createPlaylistButtonDady_donate={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
			const updatePlaylistButtonDady_donate={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const closingPopupFontwaOf_donate={cursor:"pointer"};
			const playlistNameBoxStyle_donate={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const playlistCreateBoxPopupStyle_donate={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const plNameProvider_donate={width:"65%",height:"80%"};
			const flexibleFlexSick_donate={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"}
			class CreateDonationPopupCopy extends React.Component {
				constructor(props) {
					super(props);
					this.state = {
						newNamePl:"",
						donationTension:"welcome abc"
					};
					this.componentWillMount=this.componentWillMount.bind(this);
					this.componentWillUnmount=this.componentWillUnmount.bind(this);
					this._i_love_you_pratibha_a_lot_my_loyality=this._i_love_you_pratibha_a_lot_my_loyality.bind(this);
				}
				_i_love_you_pratibha_a_lot_my_loyality(evt){
					evt.preventDefault();
					evt.stopPropagation();
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
				}
				componentWillMount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 0.2,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				componentWillUnmount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 1,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				render(){
					return (
						<div style={hoth_rasile_tere_hoth_rasile_my_loyality}>
							<div style={proper_patola_u_r_pratibha_my_loyality}>
								<div style={_bato_me_phul_dhalte_hai_pratibha_my_loyality}>
									<div style={wada_wada_hai_sath_na_chhutiya_be_my_loyality}>
										<div style={tujhse_muhabbat_ho_gayi_allah_maaf_kare_job_my_loyality}>
											<div style={_job_crate_option_head_view_my_loyality}>
												<div style={head_style_job_create_closable_not_1_my_loyality}>
													<div style={adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_my_loyality}>
														<div style={_head_job_create_d_flex_cont_unique_my_loyality}>
															<p className="large_font_pratibha truncate">
																{
																	this.state.donationTension
																}
															</p>
														</div>
													</div>
												</div>
												<div style={head_style_job_create_closable_not_2_my_loyality}>
													<div style={adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_my_loyality}>
														<div style={_head_job_create_d_flex_cont_my_loyality}>
															<i className="small material-icons _design_my_cursor_pratibha" onClick={this._i_love_you_pratibha_a_lot_my_loyality}>close</i>
														</div>
													</div>
												</div>
											</div>
											<div style={_oye_raju_pyaar_na_kariyo_betichod}>
											</div>
											<div style={_job_crate_option_body_view_my_loyality}>
												<div style={tu_la_laka_belari_job_my_loyality}>
													<div style={_hey_u_thank_you_for_all_this_my_loyality}>
														<div style={teri_ummeed_tera_intezar_karte_hai_my_loyality}>
															hi
														</div>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					)
				}
			}





			const hoth_rasile_tere_hoth_rasile_date_r_donate=Object.freeze({width:"99%",height:"1240px",position:"absolute",zIndex:"15",backgroundColor:"transparent"});
			const proper_patola_u_r_pratibha_date_r_donate=Object.freeze({width:"100%",height:"100%"});
			const _bato_me_phul_dhalte_hai_pratibha_date_r_donate=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"});
			const wada_wada_hai_sath_na_chhutiya_be_date_r_donate=Object.freeze({width:"70%",height:"90%",display:"block"});
			const tujhse_muhabbat_ho_gayi_allah_maaf_kare_job_date_r_donate=Object.freeze({width:"100%",height:"100%"});
			const _job_crate_option_head_view_date_r_donate=Object.freeze({width:"100%",height:"5%",backgroundColor:"white"});
			const _job_crate_option_body_view_date_r_donate=Object.freeze({width:"100%",height:"90%",overflowY:"scroll",backgroundColor:"white"});
			const tu_la_laka_belari_job_date_r_donate=Object.freeze({width:"100%",height:"100%"});
			const tera_sarafa_aisa_hai_hamdam_job_1_date_r_donate=Object.freeze({width:"35%",height:"100%",display:"inline",float:"left"});
			const tera_sarafa_aisa_hai_hamdam_job_2_date_r_donate=Object.freeze({width:"65%",height:"100%",display:"inline",float:"right"});
			const _head_job_create_d_flex_cont_date_r_donate=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"});
			const _head_job_create_d_flex_cont_unique_date_r_donate=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"});
			const head_style_job_create_closable_not_1_date_r_donate=Object.freeze({width:"90%",height:"100%",display:"inline",float:"left"});
			const head_style_job_create_closable_not_2_date_r_donate=Object.freeze({width:"10%",height:"100%",display:"inline",float:"right"});
			const adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_date_r_donate=Object.freeze({width:"100%",height:"100%"});
			const _job_title_container_job_create_me_pratibha_date_r_donate=Object.freeze({width:"100%",height:"40px"});
			const _job_type_container_job_create_me_pratibha_date_r_donate=Object.freeze({width:"100%",height:"40px"});
			const _wrap_job_input_data_d_flex_pratibha_date_r_donate=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"flex-start",alignItems:"center"});
			const job_title_input_act_style_date_r_donate=Object.freeze({width:"70%",height:"30px"});
			const _hey_u_thank_you_for_all_this_date_r_donate=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"flex-start"});
			const teri_ummeed_tera_intezar_karte_hai_date_r_donate=Object.freeze({width:"500px"});
			const target_dater_find_input_date_r_donate=Object.freeze({width:"100%",height:"35px"});
			const target_dater_find_message_to_target_date_r_donate=Object.freeze({width:"100%",height:"120px"});
			const target_dater_find_input_dflex_date_r_donate=Object.freeze({width:"100%",height:"100%",display:"flex",justifyContent:"flex-start",alignItems:"center",cursor:"pointer"});
			const tu_meri_jindagi_hai_tu_meri_har_khusi_hai_date_date_r_donate=Object.freeze({width:"90%",height:"25px"});
			const main_tujhe_bhul_nahi_paunga_date_date_r_donate=Object.freeze({width:"100%"});
			const main_tujhe_bhul_nahi_paunga_date_r_2_date_r_donate=Object.freeze({width:"100%"});
			const indi_suggest_date_r_2_date_r_donate=Object.freeze({width:"100%",height:"35px"});
			const _act_text_area_style_main_act_date_r_donate=Object.freeze({width:"90%",height:"100px"});
			const text_align_req_dating_bt_date_r_donate=Object.freeze({textAlign:"center"});
			const _act_text_area_style_main_act_my_date_r_donate=Object.freeze({width:"90%"});
			const i_will_always_love_you_my_life_donate=Object.freeze({width:"30px",height:"30px",verticalAlign:"center"})
			const target_dater_find_input_dflex_centi_ment_me_date_r_donate=Object.freeze({width:"90%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"});
			const _date_warga_me_pratibha_style_spin_box_donate=Object.freeze({width:"100%"});
			const _date_warga_me_pratibha_style_spin_box_d_flx_donate=Object.freeze({width:"100%",display:"flex",justifyContent:"center"});
			const _transparantable_mitron_shaba_shaba_donate=Object.freeze({width:"100%",height:"10px",backgroundColor:"transparent"})
			class CreateDonationFilterPopupCopy extends React.Component {
				constructor(props) {
					super(props);
					this.state = {
						newNamePl:"",
						headMessage:"Hi there welcome to the donation seeking zone .",
						seekAmount:"",
						emotionalMessage:""
					};
					this.componentWillMount=this.componentWillMount.bind(this);
					this.componentWillUnmount=this.componentWillUnmount.bind(this);
					this._i_love_you_pratibha_a_lot=this._i_love_you_pratibha_a_lot.bind(this);
					this.componentDidMount=this.componentDidMount.bind(this);
					this._change_my_emotional_text=this._change_my_emotional_text.bind(this);
					this._request_my_date_pratibha=this._request_my_date_pratibha.bind(this);
				}
				_request_my_date_pratibha(evt){
					evt.preventDefault();
					evt.stopPropagation();
					let jsDant=JSON.stringify({Me:window.__rasoola.allah[1],Pkey:window.__rasoola.allah[4],SeekAmount:this.state.seekAmount,EmotionalMessage:this.state.emotionalMessage});
					console.log(jsDant);
					$.ajax({
						url:`seekDonationForMeAjayPlsTlfDonate?data=${jsDant}`,
						type:"GET",
						contentType:"json",
						async:true
					}).done((data)=>{
						console.log(data);
						Materialize.toast('your donation logged successfully ,will let you know once anyone will donate you any amount', 4000)
						ReactDOM.unmountComponentAtNode(document.getElementById(_js_root_animation));
					}).fail((jqXHR,statusText)=>{
						console.log(statusText);
					})
				}
				_change_my_emotional_text(evt){
					evt.preventDefault();
					evt.stopPropagation();
					this.setState({
						emotionalMessage:evt.target.value
					})
				}
				componentDidMount(){
					var that=this;
					$('input#autocomplete-input_r_card_type_credit_loan_need').autocomplete({
						data: {
							"1000 (INR)": null,
							"2000 (INR)": null,
							"3000 (INR)": null,
							"4000 (INR)": null,
							"5000 (INR)": null,
							"6000 (INR)": null,
							"7000 (INR)": null,
							"8000 (INR)": null,
							"9000 (INR)": null,
							"10000 (INR)": null,
							"15000 (INR)": null,
							"20000 (INR)": null,
							"25000 (INR)": null,
							"30000 (INR)": null,
							"35000 (INR)": null,
							"40000 (INR)": null,
							"45000 (INR)": null,
							"50000 (INR)": null,
							"55000 (INR)": null,
							"60000 (INR)": null,
							"65000 (INR)": null,
							"70000 (INR)": null,
							"75000 (INR)": null,
							"80000 (INR)": null,
							"85000 (INR)": null,
							"90000 (INR)": null,
							"95000 (INR)": null,
							"100000 (INR)": null
						},
						limit: 10, // The max amount of results that can be shown at once. Default: Infinity.
						onAutocomplete: function(val) {
							that.setState({
								seekAmount:val
							})
						},
						minLength: 0, // The minimum length of the input for the autocomplete to start. Default: 1.
					});
				}
				_i_love_you_pratibha_a_lot(evt){
					evt.preventDefault();
					evt.stopPropagation();
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
				}
				componentWillMount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 0.2,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				componentWillUnmount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 1,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				render(){
					return (
						<div style={hoth_rasile_tere_hoth_rasile_date_r_donate}>
							<div style={proper_patola_u_r_pratibha_date_r_donate}>
								<div style={_bato_me_phul_dhalte_hai_pratibha_date_r_donate}>
									<div style={wada_wada_hai_sath_na_chhutiya_be_date_r_donate}>
										<div style={tujhse_muhabbat_ho_gayi_allah_maaf_kare_job_date_r_donate}>
											<div style={_job_crate_option_head_view_date_r_donate}>
												<div style={head_style_job_create_closable_not_1_date_r_donate}>
													<div style={adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_date_r_donate}>
														<div style={_head_job_create_d_flex_cont_unique_date_r_donate}>
															<p className="large_font_pratibha truncate">
																{
																	this.state.headMessage
																}
															</p>
														</div>
													</div>
												</div>
												<div style={head_style_job_create_closable_not_2_date_r_donate}>
													<div style={adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_date_r_donate}>
														<div style={_head_job_create_d_flex_cont_date_r_donate}>
															<i className="small material-icons _design_my_cursor_pratibha" onClick={this._i_love_you_pratibha_a_lot}>close</i>
														</div>
													</div>
												</div>
											</div>
											<div style={_transparantable_mitron_shaba_shaba_donate}>
											</div>
											<div style={_job_crate_option_body_view_date_r_donate}>
												<div style={tu_la_laka_belari_job_date_r_donate}>
													<div style={_hey_u_thank_you_for_all_this_date_r_donate}>
														<div style={teri_ummeed_tera_intezar_karte_hai_date_r_donate}>
															<br />
															<br />
															{/*
																<div style={target_dater_find_input_date_r_donate}>
																	<div className="row">
																		<div className="input-field">
																			<i className="material-icons prefix">local_shipping</i>
																			<input type="text" id="autocomplete-input_r_card_type_credit_loan_need" className="autocomplete" />
																			<label for="autocomplete-input_r_card_type_credit_loan_need">Please select the amount you need donation .</label>
																		</div>
																	</div>
																</div>
																*/}

																	<div className="row">
																		<div className="input-field">
																			<i className="material-icons prefix">attach_money</i>
																			<input type="text" id="autocomplete-input_r_card_type_credit_loan_need" className="autocomplete" />
																			<label for="autocomplete-input_r_card_type_credit_loan_need">Please select the amount you need donation .</label>
																		</div>
																	</div>

															<div id="_har_jakhm_dil_ka_tujhe_dil_se_dua_de_dating" style={main_tujhe_bhul_nahi_paunga_date_date_r_donate}>

															</div>

															<div style={main_tujhe_bhul_nahi_paunga_date_r_2_date_r_donate}>

															</div>
															<textarea className="materialize-textarea _sorry_pratibha_am_really_sorry_forgive_me" placeholder="Please write some message so that they can understand your need dor donation ." value={this.state.emotionalMessage} onChange={this._change_my_emotional_text} style={_act_text_area_style_main_act_my_date_r_donate}></textarea>
															<div style={target_dater_find_input_date_r_donate}>
																<div style={target_dater_find_input_dflex_centi_ment_me_date_r_donate}>
																	<a className="waves-effect waves-light btn white black-text capital_capital_hoho" onClick={this._request_my_date_pratibha}>Seek Donation</a>
																</div>
															</div>
														</div>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					)
				}
			}







			const cheej_tu_to_bari_hai_mast_mast_scr_donate={width:"100%",height:"480px",overflowY:"scroll"};
			const cheej_tu_to_bari_hai_mast_mast_donate={width:"100%"}
			class CreateYourOwnDonationstoreOverTheLnkedFace extends React.Component {
				constructor(props) {
					super(props);
					this.state = {
						myExistedShop:["hello","ajay"]
					}
					this._let_me_create_my_new_donate=this._let_me_create_my_new_donate.bind(this);
					this._let_me_create_my_new_filter=this._let_me_create_my_new_filter.bind(this);
				}
				_let_me_create_my_new_donate(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
					ReactDOM.render(<CreateDonationPopupCopy />,document.getElementById('_js_root_animation'));
				}
				_let_me_create_my_new_filter(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
					ReactDOM.render(<CreateDonationFilterPopupCopy />,document.getElementById('_js_root_animation'));
				}
				render(){
					return (
						<div style={cheej_tu_to_bari_hai_mast_mast_donate}>
							<div style={playlistCreateNewCont}>
								<ul style={myUl}>
									<li><input type="button" value="Donate now" style={newPlaylistBtStyle} className="btn truncate" onClick={this._let_me_create_my_new_donate} /></li>
								</ul>
							</div>
							<br />
							<br />
							<div style={playlistCreateNewCont}>
								<ul style={myUl}>
									<li><input type="button" value="Seek donation" style={newPlaylistBtStyle} className="btn truncate" onClick={this._let_me_create_my_new_filter} /></li>
								</ul>
							</div>
							<br />
							<p style={main_fir_v_tmk_chunga_huhhu} className="truncate">My donations</p>
							<div style={cheej_tu_to_bari_hai_mast_mast_scr_donate} className="its_ok_shreya_i_am_alright_ok">
								{
									this.state.myExistedShop.map( (a,b) => {
										return (
											<div key={b} style={forgive_me_please_o_my_love}>
												{/*<ul key={b} style={myUl}>
													<li style={clickableListOnMainPage}><font size={3} color="black" style={mmActFontingCursor} onClick={this._pyar_tune_kya_kiya_clk} >{a}</font></li>
													<li style={nonerLi}><div className="tu_mera_rog_hai" ></div></li>
												</ul>*/}

													<a style={myUniqueFaceSelectStyle_midina} className='dropdown-button btn truncate tooltipped' href='#' data-activates={`dropdown1ooppee${b}`} data-position="right" data-delay="50" data-tooltip={`Shop - ${a}`}>{a}</a>
													<a className="waves-effect waves-light btn tooltipped" style={cursorStyling_g_icon} data-position="right" data-delay="50" data-tooltip="Click me to delete this playlist"><i className="material-icons">close</i></a>
													<ul id={`dropdown1ooppee${b}`} style={tears_from_falling} className='dropdown-content'>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Social face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Professional face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Consumer face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Writer face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Dating face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Sinner face</a></li>
														<li className="divider"></li>
													</ul>



											</div>
										)
									} )
								}
							</div>
						</div>
					)
				}
			}









			const abcStylePopup_sin={width:"99%",height:"1240px",position:"absolute",zIndex:10,backgroundColor:"transparent"};
			const popupPlaylistDf_sin={width:"100%",height:"100%",display:"flex",justifyContent:"center"};
			const actPlaylistQuestPopup_sin={width:"400px",height:"400px",border:"1px solid #e6ecf0",marginTop:"150px"};
			const playlistPopupHead_sin={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"10px"};
			const playlistPopupBody_sin={width:"100%",height:"340px",backgroundColor:"white"};
			const closePlaylistPopupBefore_sin={width:"70%",height:"100%",display:"inline",float:"left"};
			const closePlaylistPopupAfter_sin={width:"30%",height:"100%",display:"inline",float:"right"};
			const dflexCloseBefore_sin={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const dflexCloseAfter_sin={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
			const closingPopupFontwa_sin={cursor:"pointer"};
			const msgInformationToAddPlaylist_sin={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
			const actPlaylistDataStyle_sin={width:"100%",height:"40%"};
			const updatePlaylistStyle_sin={width:"100%",height:"40px"};
			const createPlaylistButtonDadaji_sin={width:"50%",height:"100%",display:"inline",float:"left"};
			const updatePlaylistButtonDadaji_sin={width:"50%",height:"100%",display:"inline",float:"right"};
			const createPlaylistButtonDady_sin={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
			const updatePlaylistButtonDady_sin={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const closingPopupFontwaOf_sin={cursor:"pointer"};
			const playlistNameBoxStyle_sin={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const playlistCreateBoxPopupStyle_sin={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const plNameProvider_sin={width:"65%",height:"80%"};
			const flexibleFlexSick_sin={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"}
			class CreateSinPopupCopy extends React.Component {
				constructor(props) {
					super(props);
					this.state = {
						newNamePl:""
					};
					this.componentWillMount=this.componentWillMount.bind(this);
					this.componentWillUnmount=this.componentWillUnmount.bind(this);
					this._closing_playlist_popup_bhai=this._closing_playlist_popup_bhai.bind(this);
					this._playlistNewNameChange=this._playlistNewNameChange.bind(this);
					this._mm_ll_clk_new_playlist_merge=this._mm_ll_clk_new_playlist_merge.bind(this);
				}
				_mm_ll_clk_new_playlist_merge(evt){
					evt.preventDefault();
					evt.stopPropagation();
					var that=this;
					let golj=window.__rasoola.allah[1];
				}
				_playlistNewNameChange(evt){
					evt.preventDefault();
					evt.stopPropagation();
				}
				_closing_playlist_popup_bhai(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
				}
				componentWillMount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 0.2,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				componentWillUnmount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 1,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				render(){
					return (
						<div style={abcStylePopup_sin}>
							<div style={popupPlaylistDf_sin}>
								<div style={actPlaylistQuestPopup_sin}>
									<div style={playlistPopupHead_sin}>
										<div style={closePlaylistPopupBefore_sin}>
											<div style={dflexCloseBefore_sin}>
												<font size={4}>New playlist</font>
											</div>
										</div>
										<div style={closePlaylistPopupAfter_sin}>
											<div style={dflexCloseAfter_sin}>
												<font style={closingPopupFontwa_sin} size={5} onClick={this._closing_playlist_popup_bhai}>&#9932;</font>
											</div>
										</div>
									</div>
									<div style={playlistPopupBody_sin}>

										<div style={flexibleFlexSick_sin}>
											<div style={actPlaylistDataStyle_sin}>
												<div style={playlistNameBoxStyle_sin}>
													<input type="text" style={plNameProvider_sin} placeholder="enter playlist name" value={this.state.newNamePl} onChange={this._playlistNewNameChange} />
												</div>
												<div style={playlistCreateBoxPopupStyle_sin}>
													<input ref={(elem)=>{

													}} type="button" value="create" onClick={this._mm_ll_clk_new_playlist_merge} />
												</div>
											</div>
										</div>

									</div>
								</div>
							</div>
						</div>
					)
				}
			}





			const abcStylePopup_sin_filter={width:"99%",height:"1240px",position:"absolute",zIndex:10,backgroundColor:"transparent"};
			const popupPlaylistDf_sin_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center"};
			const actPlaylistQuestPopup_sin_filter={width:"400px",height:"400px",border:"1px solid #e6ecf0",marginTop:"150px"};
			const playlistPopupHead_sin_filter={width:"100%",height:"40px",backgroundColor:"white",marginBottom:"10px"};
			const playlistPopupBody_sin_filter={width:"100%",height:"340px",backgroundColor:"white"};
			const closePlaylistPopupBefore_sin_filter={width:"70%",height:"100%",display:"inline",float:"left"};
			const closePlaylistPopupAfter_sin_filter={width:"30%",height:"100%",display:"inline",float:"right"};
			const dflexCloseBefore_sin_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const dflexCloseAfter_sin_filter={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
			const closingPopupFontwa_sin_filter={cursor:"pointer"};
			const msgInformationToAddPlaylist_sin_filter={width:"100%",height:"40px",display:"flex",justifyContent:"center",alignItems:"center"};
			const actPlaylistDataStyle_sin_filter={width:"100%",height:"40%"};
			const updatePlaylistStyle_sin_filter={width:"100%",height:"40px"};
			const createPlaylistButtonDadaji_sin_filter={width:"50%",height:"100%",display:"inline",float:"left"};
			const updatePlaylistButtonDadaji_sin_filter={width:"50%",height:"100%",display:"inline",float:"right"};
			const createPlaylistButtonDady_sin_filter={width:"99%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid #e6ecf0"};
			const updatePlaylistButtonDady_sin_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const closingPopupFontwaOf_sin_filter={cursor:"pointer"};
			const playlistNameBoxStyle_sin_filter={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const playlistCreateBoxPopupStyle_sin_filter={width:"100%",height:"50px",display:"flex",justifyContent:"center",alignItems:"center"};
			const plNameProvider_sin_filter={width:"65%",height:"80%"};
			const flexibleFlexSick_sin_filter={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"}
			class CreateSinFilterPopupCopy extends React.Component {
				constructor(props) {
					super(props);
					this.state = {
						newNamePl:""
					};
					this.componentWillMount=this.componentWillMount.bind(this);
					this.componentWillUnmount=this.componentWillUnmount.bind(this);
					this._closing_playlist_popup_bhai=this._closing_playlist_popup_bhai.bind(this);
					this._playlistNewNameChange=this._playlistNewNameChange.bind(this);
					this._mm_ll_clk_new_playlist_merge=this._mm_ll_clk_new_playlist_merge.bind(this);
				}
				_mm_ll_clk_new_playlist_merge(evt){
					evt.preventDefault();
					evt.stopPropagation();
					var that=this;
					let golj=window.__rasoola.allah[1];
				}
				_playlistNewNameChange(evt){
					evt.preventDefault();
					evt.stopPropagation();
				}
				_closing_playlist_popup_bhai(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
				}
				componentWillMount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 0.2,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				componentWillUnmount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 1,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				render(){
					return (
						<div style={abcStylePopup_sin_filter}>
							<div style={popupPlaylistDf_sin_filter}>
								<div style={actPlaylistQuestPopup_sin_filter}>
									<div style={playlistPopupHead_sin_filter}>
										<div style={closePlaylistPopupBefore_sin_filter}>
											<div style={dflexCloseBefore_sin_filter}>
												<font size={4}>New playlist</font>
											</div>
										</div>
										<div style={closePlaylistPopupAfter_sin_filter}>
											<div style={dflexCloseAfter_sin_filter}>
												<font style={closingPopupFontwa_sin_filter} size={5} onClick={this._closing_playlist_popup_bhai}>&#9932;</font>
											</div>
										</div>
									</div>
									<div style={playlistPopupBody_sin_filter}>

										<div style={flexibleFlexSick_sin_filter}>
											<div style={actPlaylistDataStyle_sin_filter}>
												<div style={playlistNameBoxStyle_sin_filter}>
													<input type="text" style={plNameProvider_sin_filter} placeholder="enter playlist name" value={this.state.newNamePl} onChange={this._playlistNewNameChange} />
												</div>
												<div style={playlistCreateBoxPopupStyle_sin_filter}>
													<input ref={(elem)=>{

													}} type="button" value="create" onClick={this._mm_ll_clk_new_playlist_merge} />
												</div>
											</div>
										</div>

									</div>
								</div>
							</div>
						</div>
					)
				}
			}






			// Confession Box Direct Creation



			const hoth_rasile_tere_hoth_rasile_conf_dir=Object.freeze({width:"99%",height:"1240px",position:"absolute",zIndex:"15",backgroundColor:"transparent"});
			const proper_patola_u_r_pratibha_conf_dir={width:"100%",height:"100%"};
			const _bato_me_phul_dhalte_hai_pratibha_conf_dir={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const wada_wada_hai_sath_na_chhutiya_be_conf_dir={width:"70%",height:"90%",display:"block"};
			const tujhse_muhabbat_ho_gayi_allah_maaf_kare_job_conf_dir={width:"100%",height:"100%"};
			const _job_crate_option_head_view_conf_dir={width:"100%",height:"5%",backgroundColor:"white"};
			const _job_crate_option_body_view_conf_dir={width:"100%",height:"90%",backgroundColor:"white"};
			const tu_la_laka_belari_job_conf_dir={width:"100%",height:"100%"};
			const tera_sarafa_aisa_hai_hamdam_job_1_conf_dir={width:"35%",height:"100%",display:"inline",float:"left"};
			const tera_sarafa_aisa_hai_hamdam_job_2_conf_dir={width:"65%",height:"100%",display:"inline",float:"right"};
			const _head_job_create_d_flex_cont_conf_dir={width:"100%",height:"100%",display:"flex",justifyContent:"flex-end",alignItems:"center"};
			const _head_job_create_d_flex_cont_unique_conf_dir={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
			const head_style_job_create_closable_not_1_conf_dir={width:"90%",height:"100%",display:"inline",float:"left"};
			const head_style_job_create_closable_not_2_conf_dir={width:"10%",height:"100%",display:"inline",float:"right"};
			const adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_conf_dir={width:"100%",height:"100%"};
			const _job_title_container_job_create_me_pratibha_conf_dir={width:"100%",height:"40px"};
			const _job_type_container_job_create_me_pratibha={width:"100%",height:"40px"};
			const _wrap_job_input_data_d_flex_pratibha_conf_dir={width:"100%",height:"100%",display:"flex",justifyContent:"flex-start",alignItems:"center"};
			const job_title_input_act_style_conf_dir={width:"70%",height:"30px"};
			const _hey_u_thank_you_for_all_this_conf_dir={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"flex-start"};
			const teri_ummeed_tera_intezar_karte_hai_conf_dir={width:"500px"};
			const target_dater_find_input_conf_dir={width:"100%",height:"35px"};
			const target_dater_find_message_to_target_conf_dir={width:"100%",height:"120px"}
			const target_dater_find_input_dflex_conf_dir={width:"100%",height:"100%",display:"flex",justifyContent:"flex-start",alignItems:"center"};
			const tu_meri_jindagi_hai_tu_meri_har_khusi_hai_date_conf_dir={width:"90%",height:"25px"};
			const main_tujhe_bhul_nahi_paunga_date_conf_dir={width:"100%"};
			const main_tujhe_bhul_nahi_paunga_date_r_2_conf_dir={width:"100%"};
			const indi_suggest_date_r_2_conf_dir={width:"100%",height:"35px"};
			const _act_text_area_style_main_act_conf_dir={width:"90%",height:"100px"};
			const text_align_req_dating_bt_conf_dir={textAlign:"center"};
      const target_dater_find_input_dflex_centi_ment_me_conf_dir={width:"90%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
      const _my_confession_text_area_style_pratibha_conf_dir={width:"90%"};
			const ohhoho_rakhlo_brand_ji_oh_my_love=Object.freeze({width:"100%",height:"10px",backgroundColor:"transparent"})
			class CreateMyDirectConfesionPratibha extends React.Component {
				constructor(props){
					super(props);
					this.state = {
						headMessage:"Hi there welcome to the direct confession area",
						datingSelected:[],
						targetFaceText:"",
						emotionalMessage:"",
						firstCallHappened:false,
						suggestSpin:false,
						suggestBox:[]
					};
					this._i_love_you_pratibha_a_lot=this._i_love_you_pratibha_a_lot.bind(this);
					this._mm_let_me_change_my_target_face_text=this._mm_let_me_change_my_target_face_text.bind(this);
					this._change_my_emotional_text=this._change_my_emotional_text.bind(this);
					this.componentWillMount=this.componentWillMount.bind(this);
					this.componentWillUnmount=this.componentWillUnmount.bind(this);
					this.componentDidMount=this.componentDidMount.bind(this);
					this._tampRemoveMemberFromTamp=this._tampRemoveMemberFromTamp.bind(this);
					this._publish_my_shop_ajay=this._publish_my_shop_ajay.bind(this);
				}
				_publish_my_shop_ajay(evt){
					evt.preventDefault();
					evt.stopPropagation();
					if (this.state.emotionalMessage!="" && this.state.datingSelected.length>0) {
						let jsDant=JSON.stringify({Me:window.__rasoola.allah[1],Pkey:window.__rasoola.allah[4],ConfessTo:this.state.datingSelected[0][1],EmotionalMessage:this.state.emotionalMessage});
						console.log(jsDant);
						$.ajax({
							url:`createMyDirectConfessionPratibhaPleaseRecordMySin?data=${jsDant}`,
							type:"GET",
							contentType:"json",
							async:true
						}).data((data)=>{
							console.log(data);
							Materialize.toast('your direct confession message has been successfully submitted', 4000);
							ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'));
						}).fail((jqXHR,statusText)=>{
							console.log(statusText);
						})
					}else {
						Materialize.toast('Please fill all the information', 4000)
					}
				}
				_tampRemoveMemberFromTamp(evt){
					evt.preventDefault();
					evt.stopPropagation();
					var that=this;
					console.log(evt.target);
					console.log(evt.currentTarget);
					let tarVal=JSON.parse(evt.currentTarget.parentElement.lastChild.value);
					let arrMyMain=[];
					arrMyMain.push(tarVal)
					//let TampBacker=Array.from(StWalaArr)
					//window.__chhota_chetan_temp=TampBacker;
					that.setState({
						datingSelected:arrMyMain
					})
				}
				componentDidMount(){
					var that=this;
					var inpK=this.refs._my_date_request_ref_pratibha_sin_direct_conf;
					const sourceLL = Rx.Observable.fromEvent(inpK, 'input');
					const sourPPPkk=sourceLL.debounceTime(500).map(evt=>evt.target.value);
					const subscribeLLL = sourPPPkk.subscribe((val) => {
					console.log("vallll facccceeeeessssss");
					console.log(val);
					if (val!="") {
						Rx.Observable.ajax({ url: `/getMyCommonActionFacePratibha/${mainBahutTanhaHunYaar}/${pKey}/${val}`, responseType: 'json',method:'GET'}).map(data=>data.response.All)
	  				.subscribe(
		    			function (data) {
		      			console.log(data);
								that.setState({
									suggestBox:data,
									suggestSpin:false,
									firstCallHappened:true
								});
		    			},
			    		function (error) {
				      		console.log(error);
			    			}
			  			);

					}else {
						that.setState({
							firstCallHappened:false
						})
					}
					});
				}
				_change_my_emotional_text(evt){
					evt.preventDefault();
					evt.stopPropagation();
					this.setState({
							emotionalMessage:evt.target.value
						});
				}
				_mm_let_me_change_my_target_face_text(evt){
					evt.preventDefault();
					evt.stopPropagation();
					this.setState({
							targetFaceText:evt.target.value,
							suggestSpin:true
						});
				}
				_i_love_you_pratibha_a_lot(evt){
					evt.preventDefault();
					evt.stopPropagation();
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'));
				}
				componentWillMount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 0.2,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				componentWillUnmount(){
					var events = new CustomEvent(
						"opacity",
						{
							detail: {
								message: 1,
								time: new Date(),
						},
						bubbles: true,
						cancelable: true
					}
				 );
				 window.dispatchEvent(events);
				}
				render(){
					return (
						<div style={hoth_rasile_tere_hoth_rasile_conf_dir}>
							<div style={proper_patola_u_r_pratibha_conf_dir}>
								<div style={_bato_me_phul_dhalte_hai_pratibha_conf_dir}>
									<div style={wada_wada_hai_sath_na_chhutiya_be_conf_dir}>
										<div style={tujhse_muhabbat_ho_gayi_allah_maaf_kare_job_conf_dir}>
											<div style={_job_crate_option_head_view_conf_dir}>
												<div style={head_style_job_create_closable_not_1_conf_dir}>
													<div style={adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_conf_dir}>
														<div style={_head_job_create_d_flex_cont_unique_conf_dir}>
															<p className="large_font_pratibha truncate">
																{
																	this.state.headMessage
																}
															</p>
														</div>
													</div>
												</div>
												<div style={head_style_job_create_closable_not_2_conf_dir}>
													<div style={adhi_rah_gayi_hai_banki_aadhi_lang_gayi_jindagi_conf_dir}>
														<div style={_head_job_create_d_flex_cont_conf_dir}>
															<i className="small material-icons _design_my_cursor_pratibha" onClick={this._i_love_you_pratibha_a_lot}>close</i>
														</div>
													</div>
												</div>
											</div>
											<div style={ohhoho_rakhlo_brand_ji_oh_my_love}>
											</div>
											<div style={_job_crate_option_body_view_conf_dir}>
												<div style={tu_la_laka_belari_job_conf_dir}>
													<div style={_hey_u_thank_you_for_all_this_conf_dir}>
														<div style={teri_ummeed_tera_intezar_karte_hai_conf_dir}>
															<br />
															<br />
															<div style={target_dater_find_input_conf_dir}>
																<div style={target_dater_find_input_dflex_conf_dir}>
																	<input className="_sorry_pratibha_am_really_sorry_forgive_me" type="text" placeholder="Type name to request direct confession" style={tu_meri_jindagi_hai_tu_meri_har_khusi_hai_date_conf_dir} value={this.state.targetFaceText} onChange={this._mm_let_me_change_my_target_face_text} ref="_my_date_request_ref_pratibha_sin_direct_conf" />
																</div>
															</div>
															<div id="_har_jakhm_dil_ka_tujhe_dil_se_dua_de_confession" style={main_tujhe_bhul_nahi_paunga_date_conf_dir}>
																{
																	(this.state.suggestSpin==true)?(
																		<div style={_date_warga_me_pratibha_style_spin_box}>
																			<div style={_date_warga_me_pratibha_style_spin_box_d_flx}>
																				<SpinnerRectType />
																			</div>
																		</div>
																	):(
																		(this.state.suggestBox.length==0)?(
																			(this.state.firstCallHappened)?(
																				<p>Ooops !! there is no face present with letter " {this.state.targetFaceTextLoyal} " in your linked face .</p>
																			):false
																		):(
																			this.state.suggestBox.map( (a,b)=>{
																				return (
																					<div style={indi_suggest_date_r_2_date_r} key={b}>
																						<div style={target_dater_find_input_dflex_date_r} >
																							<a className="waves-effect waves-light btn white black-text" ><img style={i_will_always_love_you_my_life} src={a[2]} /></a><a className="waves-effect waves-light btn white black-text" onClick={this._tere_bajo_main_hun_ki_kara_o_yara_loyal}><font size="large" >{a[0]}</font></a>
																							<a className="waves-effect waves-light btn white black-text" onClick={this._tampRemoveMemberFromTamp}><i className="material-icons left">close</i></a>
																							<input type="hidden" value={JSON.stringify(a)} />
																						</div>
																					</div>
																				)
																			} )
																		)
																	)
																}
															</div>
															{
																(this.state.datingSelected.length>0)?(
																	<p className="truncate">Selected face for confession</p>
																):false
															}
															<div style={main_tujhe_bhul_nahi_paunga_date_r_2_conf_dir}>
																{
																	this.state.datingSelected.map( (a,b)=>{
																		return (
																			<div style={indi_suggest_date_r_2_conf_dir} key={b}>
																				<div style={target_dater_find_input_dflex_conf_dir}>
																					{
																						a[0]
																					}
																				</div>
																			</div>
																		)
																	} )
																}
															</div>
															<textarea className="materialize-textarea _sorry_pratibha_am_really_sorry_forgive_me" placeholder="Please write the content of your confession" value={this.state.emotionalMessage} onChange={this._change_my_emotional_text} style={_my_confession_text_area_style_pratibha_conf_dir}></textarea>
															<div style={target_dater_find_input_conf_dir}>
																<div style={target_dater_find_input_dflex_centi_ment_me_conf_dir}>
																	<a className="waves-effect waves-light btn white black-text capital_capital_hoho" onClick={this._publish_my_shop_ajay}>Confess</a>
																</div>
															</div>
														</div>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					)
				}
			}
			//ReactDOM.render(<CreateMyDirectConfesionPratibha />,document.getElementById('_js_root_animation'));



			// End confession Box



			const cheej_tu_to_bari_hai_mast_mast_scr_sin={width:"100%",height:"480px",overflowY:"scroll"};
			const cheej_tu_to_bari_hai_mast_mast_sin={width:"100%"}
			class CreateYourOwnSinnerstoreOverTheLnkedFace extends React.Component {
				constructor(props) {
					super(props);
					this.state = {
						myExistedShop:["hello","ajay"]
					}
					this._let_me_create_my_new_donate=this._let_me_create_my_new_donate.bind(this);
					this._let_me_create_my_new_filter=this._let_me_create_my_new_filter.bind(this);
				}
				_let_me_create_my_new_donate(evt){
					ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
					ReactDOM.render(<CreateMyDirectConfesionPratibha />,document.getElementById('_js_root_animation'));
				}
				_let_me_create_my_new_filter(evt){
					//ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
					//ReactDOM.render(<CreateSinPopupCopy />,document.getElementById('_js_root_animation'));
				}
				render(){
					return (
						<div style={cheej_tu_to_bari_hai_mast_mast_sin}>
							<div style={playlistCreateNewCont}>
								<ul style={myUl}>
									<li><input type="button" value="Confess directly" style={newPlaylistBtStyle} className="btn truncate" onClick={this._let_me_create_my_new_donate} /></li>
								</ul>
							</div>
							<br />
							<p style={main_fir_v_tmk_chunga_huhhu} className="truncate">My sins</p>
							<div style={cheej_tu_to_bari_hai_mast_mast_scr_sin} className="its_ok_shreya_i_am_alright_ok">
								{
									this.state.myExistedShop.map( (a,b) => {
										return (
											<div key={b} style={forgive_me_please_o_my_love}>
												{/*<ul key={b} style={myUl}>
													<li style={clickableListOnMainPage}><font size={3} color="black" style={mmActFontingCursor} onClick={this._pyar_tune_kya_kiya_clk} >{a}</font></li>
													<li style={nonerLi}><div className="tu_mera_rog_hai" ></div></li>
												</ul>*/}

													<a style={myUniqueFaceSelectStyle_midina} className='dropdown-button btn truncate tooltipped' href='#' data-activates={`dropdown1ooppeerr${b}`} data-position="right" data-delay="50" data-tooltip={`Shop - ${a}`}>{a}</a>
													<a className="waves-effect waves-light btn tooltipped" style={cursorStyling_g_icon} data-position="right" data-delay="50" data-tooltip="Click me to delete this playlist"><i className="material-icons">close</i></a>
													<ul id={`dropdown1ooppeerr${b}`} style={tears_from_falling} className='dropdown-content'>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Social face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Professional face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Consumer face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Writer face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Dating face</a></li>
														<li className="divider"></li>
														<li><a style={myUniqueFaceSelectStyle_child_midina} href="#!">Sinner face</a></li>
														<li className="divider"></li>
													</ul>



											</div>
										)
									} )
								}
							</div>
						</div>
					)
				}
			}











		//cend of modals


		//end action wrapper

		var bhaiSahab=(js) => {
			console.log(js)
		}

		const homeBodyMainStyle={width:"100%",height:"100%",marginTop:"55px"};
		const home_p_three_white={width:"70%",height:"100%",backgroundColor:"white",border:"1px solid lightgrey",float:"right"};
		const dpStyle={width:"100%",height:"250px",display:"flex",justifyContent:"center",alignItems:"center"};
		const dpImgStyle={width:"90%",height:"220px",borderRadius:"4px",marginLeft:"5%"};
		const navigationConstStyle={width:"100%"};
		const contNissaanArr={width:"100%",height:"20px"};
		const mereNissaann={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const myUl={listStyleType:"none",margin:5};
		const clickableListOnMainPage={width:"100%",height:"25px",textIndent:"20px"};
		const mmActFontingCursor={cursor:"pointer"};
		const mmMyPlayListStyle={width:"100%",height:"30px"};
		const mereNissaann_x={width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"};
		const whyDontWeShareSameLove={position:"absolute",backgroundColor:"white",cursor:"pointer",borderRadius:"4px"};
		const myUniqueFaceSelectStyle_page_navigator={backgroundColor:"transparent",color:"black",textTransform:"capitalize",width:"100%",textAlign:"left"};
		class HomeBodyPartOne extends React.Component {
			constructor(props){
				super(props);
				this.state = {
					logMsg:"Sign up to Linkedface",
					rc:window.__rasoola.allah[2]==""?(window.__rasoola.allah[3]=="male"?"/male.png":"/female.png"):window.__rasoola.allah[2],
					linkOf:["Social zone","Professional zone","Consumer zone","Reader zone","Dating zone","Donation zone","Sinner zone"],
					name:window.__rasoola.allah[0],
					palestineWillBeFree:"",
					myPageType:"Social",
					myExistedShopPratibha:[]
				};
				this._mm_toolkit_fonting_enter=this._mm_toolkit_fonting_enter.bind(this);
				this._mm_toolkit_fonting_out=this._mm_toolkit_fonting_out.bind(this);
				this.componentDidMount=this.componentDidMount.bind(this);
				this._upload_dp_optio_provider=this._upload_dp_optio_provider.bind(this);
				this._upload_dp_optio_remover=this._upload_dp_optio_remover.bind(this);
				this._ckicl_on_piece_be_upon_muhammad=this._ckicl_on_piece_be_upon_muhammad.bind(this);
				this.componentDidUpdate=this.componentDidUpdate.bind(this);
				this._wajiwaril_muhammad=this._wajiwaril_muhammad.bind(this);
				this.componentWillMount=this.componentWillMount.bind(this);
			}
			componentWillMount(){
				var that=this;
				$(document).ready(function(){
					$(window).on("pageTypeChangerLeftPannel",function(evt,evtInfo){
						//window.__pageType=evtInfo;
						that.setState({
							myPageType:evtInfo
						})
					});
				});
				let meOwn=window.__rasoola.allah[1];
				let pKey=window.__rasoola.allah[4]
				let meJsonOwn=JSON.stringify({Me:meOwn,Pkey:pKey})
				$.ajax({
					url:`getMyOwnShopDetailsPratibhaPleaseLoveYou?data=${meJsonOwn}`,
					type:"GET",
					data:"",
					dataType:"json",
					contentType:"json",
					async:true
				}).done((data)=>{
					console.log(data);
					that.setState({
						myExistedShopPratibha:data.All
					});
				}).fail((jqXHR, textStatus)=>{
					console.log(jqXHR);
				})
				window.addEventListener("changeMyShopVisualsPratibha",(evt)=>{
					that.setState({
						myExistedShopPratibha:evt.detail.message.All
					});
				},true)

				window.addEventListener("letMeEditMyDpPratibha",(evt)=>{
					that.setState({
						rc:evt.detail.message
					});
				},true)
			}
			_wajiwaril_muhammad(evt){
				evt.preventDefault();
				evt.stopPropagation();
				evt.persist();
				let allahHuL=$(evt.target).text();
				//console.log(allahHuL=="Professional's zone")
				if (allahHuL=="Professional zone") {
					//alert(evt.target.innerText)
					$(document).ready(function(){
						$(window).trigger('pageTypeChanger', ["Professional"]);
					})
					if (window.__local_job_data != undefined) {
						//$(window).trigger('cancelProfessionalSpinning', [false]);
					}else {
						$.ajax({
							method: "GET",
							url: 'https://authenticjobs.com/api/?api_key=7efc59d078028a8702870d5610532f57&method=aj.jobs.search&format=json&perpage=100',
							crossDomain:true,
							dataType:'jsonp'
						})
					  	.done(function( msg ) {
							console.log(msg);
					    	//alert( "Data Saved: " + msg );
								$(window).trigger('professionalArive', [msg]);
							window.__local_job_data=msg;
					  	});
					}
				} else if (allahHuL=="Consumer zone") {
					$(document).ready(function(){
						$(window).trigger('pageTypeChanger', ["Consumer"]);
					})
					var heart=[
						""
					];
					var axcv=$.ajax({
						method: "GET",
						url: "amazonQuery",
						dataType:'json',
						error:function(data){
							console.log(data)
							console.log("error")
						}
					}).done(function(data){
						//console.log(data)
						$(window).trigger('amazonArive', [data]);
					})
				} else if (allahHuL=="Reader zone") {
					/*let url="https://api.bookshare.org/book/popular/page/1/limit/2/format/xml?api_key=xf3vuftt48kmqq8r3nctwxp7"
					var script=document.createElement('script');
					script.type='text/javascript';
					script.id="_books_api";
					$("body").append(script)
					script.onload=(evt)=>{
						console.log(evt.target.innerText)
					}
					script.src=url;*/
					/*$.getJSON("https://api.bookshare.org/book/searchFTS/a/page/1/limit/100/format/json?api_key=xf3vuftt48kmqq8r3nctwxp7&callback=?",function(data){
						console.log(data)
					})*/
					$(document).ready(function(){
						$(window).trigger('pageTypeChanger', ["Writer"]);
					})
					var axcv=$.ajax({
						method: "GET",
						url: "anyBooks",
						dataType:'json',
						error:function(data){
							console.log(data)
						}
					}).done(function(data){
						$(window).trigger('bookArive', [data]);
					})
				} else if (allahHuL=="Dating zone") {
					$(document).ready(function(){
						$(window).trigger('pageTypeChanger', ["Dater"]);
					})
				}	else if (allahHuL=="Donation zone") {
					$(document).ready(function(){
						$(window).trigger('pageTypeChanger', ["Donator"]);
					})
				} else if (allahHuL=="Sinner zone") {
					$(document).ready(function(){
						$(window).trigger('pageTypeChanger', ["Sinner"]);
					})
				} else if (allahHuL=="Social zone") {
					$(document).ready(function(){
						$(window).trigger('pageTypeChanger', ["Social"]);
						//$(window).trigger('socialNavigater');
					})
				} else {

				}

			}
			_ckicl_on_piece_be_upon_muhammad(evt){
				evt.preventDefault();
				evt.stopPropagation();
				ReactDOM.unmountComponentAtNode(document.getElementById('_js_root_animation'))
				ReactDOM.render(<ChangeDPPopup />,document.getElementById('_js_root_animation'))
				//ReactDOM.render(<DpChangeWithModalsStyled />,document.getElementById('_js_root_animation'))
			}
			_upload_dp_optio_remover(evt){
				evt.preventDefault();
				evt.stopPropagation();
				this.setState({
					palestineWillBeFree:""
				});
			}
			_upload_dp_optio_provider(evt){
				evt.preventDefault();
				evt.stopPropagation();
				this.setState({
					palestineWillBeFree:"Change DP"
				});
			}
			componentDidUpdate(prevProps, prevState){

			}
			componentDidMount(){
				var that=this;
				window.addEventListener("dpChanged",(evt)=>{
					that.setState({
						rc:evt.detail.message
					});
				},true)
				/*var that=this;
				Rx.Observable.ajax({ url: `/redirect`, responseType: 'json',method:'GET'}).map(data=>data.response)
				.subscribe(
				function (data) {
					console.log(data);
					let os=data.articles[0]
					let ms=[];
					ms.push(os)
					that.setState({
						inputArr:data.articles,
						cur:ms,
						source:data.source
					});


				},
			function (error) {
					console.log(error);
				}
			);*/
			}
			_mm_toolkit_fonting_out(evt){
				evt.preventDefault();
				evt.stopPropagation();
				evt.target.style.color="black";
			}
			_mm_toolkit_fonting_enter(evt){
				evt.preventDefault();
				evt.stopPropagation();
				evt.target.style.color="lightgrey";
			}
			render(){
				return (
					<div style={homeBodyMainStyle}>
						<div style={home_p_three_white}>
							<div id="_lol_wa_one" style={dpStyle} onMouseEnter={this._upload_dp_optio_provider} onMouseLeave={this._upload_dp_optio_remover}>
								<img id="_change_style_dp_after_render" className="materialboxed" data-caption={`${window.__rasoola.allah[0]} - Hey this is my current dp`} src={this.state.rc} style={dpImgStyle} ref={(evt) => {
									/*if (evt!=null) {
										console.log(evt.parentElement);
										evt.parentElement.style.height="250px";
										evt.parentElement.style.width="100%";
										<li key={b} style={clickableListOnMainPage}><font size={3} color="black" style={mmActFontingCursor} onMouseEnter={this._mm_toolkit_fonting_enter} onMouseOut={this._mm_toolkit_fonting_out}>{a}</font></li>
									}*/
								 }} />
								<div style={whyDontWeShareSameLove} onClick={this._ckicl_on_piece_be_upon_muhammad}>{this.state.palestineWillBeFree}</div>
							</div>
							<div id="_lol_wa_two" style={contNissaanArr}>
								<div style={mereNissaann}>
									<font size={3} color="black" style={mmActFontingCursor}>{this.state.name}</font>
								</div>
							</div>
							<div id="_lol_wa_three" style={navigationConstStyle}>
								<ul style={myUl}>
								{
									this.state.linkOf.map( (a,b) => {
										return (
											<a key={b} style={myUniqueFaceSelectStyle_page_navigator} className='btn center-align' href='#' onClick={this._wajiwaril_muhammad}>{a}</a>
										)
									} )
								}
								</ul>
							</div>
							<div id="_lol_wa_four" style={mmMyPlayListStyle}>
								<div style={mereNissaann_x}>
									<a className="truncate" style={myUniqueFaceSelectStyle_child_midina} href="#!">------------------------------------------------------------------------------</a>
								</div>


							</div>

							<div id="_mm_playlist_hou_bachcha">
								{
									this.state.myPageType=="Social"?(<MyOwnPlayList />):false
								}
								{
									this.state.myPageType=="Professional"?(<CreateYourOwnJobOverTheLnkedFace />):false
								}
								{
									this.state.myPageType=="Consumer"?(<CreateYourOwnShopOverTheLnkedFace MyExistedShop={this.state.myExistedShopPratibha} />):false
								}
								{
									this.state.myPageType=="Writer"?(<CreateYourOwnBookstoreOverTheLnkedFace />):false
								}
								{
									this.state.myPageType=="Dater"?(<CreateYourOwnDatestoreOverTheLnkedFace />):false
								}
								{
									this.state.myPageType=="Donator"?(<CreateYourOwnDonationstoreOverTheLnkedFace />):false
								}
								{
									this.state.myPageType=="Sinner"?(<CreateYourOwnSinnerstoreOverTheLnkedFace />):false
								}
							</div>
						</div>
					</div>
				)
			}
		}
		ReactDOM.render(<HomeBodyPartOne />,document.getElementById('_bdy_part_1'));
	</script>
{{end}}
